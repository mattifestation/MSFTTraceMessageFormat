05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: ppvObject is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::QueryInterface
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0pdwCount is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNameCount
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: RegQueryInfoKey failed, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNameCount
{
Arg, ItemWINERROR -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0ppwszName is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNameAt
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: RegQueryInfoKey failed, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNameAt
{
Arg, ItemWINERROR -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Index %10!d! is out of range" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNameAt
{
Arg, ItemLong -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0RegEnumValue failed, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNameAt
{
Arg, ItemWINERROR -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: pv is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNamedValue
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: pwszName is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNamedValue
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNamedValue
{
Arg, ItemHRESULT -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0RegQueryValueEx failed, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::GetNamedValue
{
Arg, ItemWINERROR -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!: pv is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::SetNamedValue
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: pwszName is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::SetNamedValue
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0%!FUNC!: pwszName is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::DeleteNamedValue
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0%!FUNC!: pDrvGlobals is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0%!FUNC!: pDeviceStack is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0%!FUNC!: RootSpecifier is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0%!FUNC!: ppPropStore is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0%!FUNC!: LengthCb is not initialized to the size of WDF_PROPERTY_STORE_ROOT" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0%!FUNC!: Invalid value for flag(s)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0%!FUNC!: Error creating registry entry %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
Arg, ItemHRESULT -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0%!FUNC!: Out of memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0%!FUNC!: Invalid subkey path length %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
Arg, ItemHRESULT -- 10
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0%!FUNC!: Out of memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
}

05abd57c-d06d-36c8-9183-0a01eef90bf1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0%!FUNC!: Error storing registry path %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfRegPropertyStore::CreateDevicePropertyStore
{
Arg, ItemHRESULT -- 10
}

06045f89-2e1e-3e69-d9dd-57454150fc9d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Lock initialization failed for tagtracker %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

06045f89-2e1e-3e69-d9dd-57454150fc9d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to allocate tag tracker, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

08c0bd36-264e-3cae-4686-ce2f4588b410 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering not power policy owner state %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::NotPowerPolicyOwnerEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 13
}

0abc7b73-933d-3a04-0c63-5e3fbecd5964 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Created UserObject Handle 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGUSEROBJECT FUNC=imp_WdfObjectCreate
{
Arg, ItemPtr -- 10
}

0bc5a47b-27f8-310b-1e58-ec668a1d620c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for UserObject %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUserObject::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

0bc5a47b-27f8-310b-1e58-ec668a1d620c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfUserObject creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUserObject::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

0bc5a47b-27f8-310b-1e58-ec668a1d620c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0UserObject created, IWDFObject: %10!p!, Fx object: %11!p!, WDFOBJECT %12!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfUserObject::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

0f2498ca-db0a-336f-4867-6112ff27c03a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for Device object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfWin32Target::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

0f2498ca-db0a-336f-4867-6112ff27c03a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfWin32Target creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfWin32Target::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

0f2498ca-db0a-336f-4867-6112ff27c03a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0UserObject created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfWin32Target::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s! because of a full queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE 0x%10!p! !devobj %11!p! current state %12!s!, policy event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
Arg, ItemEnum(FxPnpEvent) -- 14
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering PnP State %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PnpEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 13
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0could not query caps for stack, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventHardwareAvailable
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0EvtDeviceQueryRemove failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0EvtDeviceQueryRemove returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver
{
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query remove" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveEnsureDeviceAwake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Failing QueryRemoveDevice because the driver has indicated that it cannot be stopped, count %10!d!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
Arg, ItemLong -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Failing QueryRemoveDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!, boot %13!d!)" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0EvtDeviceQueryStop failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopAskDriver
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0EvtDeviceQueryStop returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopAskDriver
{
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query stop" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopEnsureDeviceAwake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Failing QueryStopDevice because the driver has indicated that it cannot be stopped, count %10!d!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
Arg, ItemLong -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Failing QueryStopDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!, boot %13!d!)" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0EvtDeviceReleaseHardware %10!p! failed, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventRemovingDisableInterfaces
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0EvtDeviceReleaseHardware failed - %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventStopped
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0EvtDeviceReleaseHardware failed with %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventRestartReleaseHardware
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0EvtDevicePrepareHardware failed %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpPrepareHardware
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0EvtDevicePrepareHardware returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpPrepareHardware
{
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0PrepareHardware failed %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpPrepareHardware
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0EvtDeviceReleaseHardware returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpReleaseHardware
{
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Entering PnpMatchResources" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Could not allocate raw resource list for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0Could not allocate translated resource list for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0Not enough interrupt objects created by WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Exiting PnpMatchResources %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemNTSTATUS -- 10
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, driver cannot change the assigned PnP resources, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, driver cannot change the assigned PnP resources, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not an interrupt resource, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not an interrupt resource, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0Multi-message MSI 2.2 interrupts must be created sequentially, WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0The PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! was already used to create interrupt 0x%11!p!, WDFDEVICE 0x%12!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

16943021-d084-357d-4f29-0397f8d33f3c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0All the MSI 2.2 interrupts for PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! are already created, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

1a3d1bcb-8f76-3b07-0970-bc1e76d2fdbe WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: %10!s! 0x%11!p!, WaitForSingleObject on event (0x%12!p!) failed (%13!s!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWudfDriverGlobals::WaitForSignal
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemWINERROR -- 13
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Starting !wudfqueue 0x%10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Start
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 100 "%0Power Stop Notifying Driver, Queue 0x%10!p!, Request 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 101 "%0Power Stop, Driver has no IQueueCallbackIoStop callback registered Queue 0x%10!p!, Request 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 102 "%0Power Purge Notifying Driver, Queue 0x%10!p!, Request 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 103 "%0Power Purge Notifying Driver, Notifying Driver, Queue 0x%10!p!, Request 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 104 "%0Power Purge Notifying Driver, Driver has no EvtIoStop callback registered Queue 0x%10!p!, Request 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 105 "%0Power Stop: Waiting for Driver to complete or acknowledge in-flight requests on Queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 106 "%0Power Stop: Queue 0x%10!p! is now powered off with no in-flight requests" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 107 "%0Power Stop: Driver has acknowledged all in-flight requests, but Queue 0x%10!p! has outstanding callbacks" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 108 "%0Power Resume: Driver has power paused requests on Queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 109 "%0Power Resume: Driver has no power paused requests on Queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Queue is idle, calling driver callback" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessStopComplete
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 110 "%0Power Resume, Notifying Driver, Queue 0x%10!p!, Request 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 111 "%0Power Resume: Driver has no callback for EvtIoResume registered on Queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 112 "%0Power Resume: Queue 0x%10!p! is now powered on and I/O has resumed" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 113 "%0%!FUNC!:Invalid power state 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemLong -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 114 "%0%!FUNC!: Acknowledging IWDFIoRequest 0x%10!p! on IWDFIoQueue 0x%11!p! %12!s! requeue option" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessAcknowledgedRequests
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Stopping !wudfqueue 0x%10!p! : IsSynchronous(%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueStop
{
Arg, ItemPtr -- 10
Arg, ItemListLong(false,true) -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!:Queue 0x%10!p! already has a SynchronousPurgeComplete registered" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueStop
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Queue 0x%10!p! already has a IdleComplete callback registered 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueStop
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: Failed (%10!s!) for queue:0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::StopSynchronously
{
Arg, ItemWINERROR -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: Failed (%10!s!) for queue:0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DrainSynchronously
{
Arg, ItemWINERROR -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: Failed (%10!s!) for for queue:0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::PurgeSynchronously
{
Arg, ItemWINERROR -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: Invalid IWDFFile param:0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RetrieveNextRequestByFileObject
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: Invalid dispatch mode(0x%10!x!) specified for queue:0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Initialize
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!: Invalid input. pCallbackInterface:0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Initialize
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!: Unable to create the work-item , %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Initialize
{
Arg, ItemNTSTATUS -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: Unable to create an event, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Initialize
{
Arg, ItemWINERROR -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0%!FUNC!: Unable to create the poweridle event, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Initialize
{
Arg, ItemWINERROR -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0%!FUNC!: No valid callbacks on the non-manual queue. IUnknown:0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Initialize
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0%!FUNC!: For manual queues each of the following callbacks must be NULL -     Create:0x%10!p!, Read:0x%11!p!, Write:0x%12!p!, DevIoCtrl:0x%13!p!, Driver's IUnknown:0x%14!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0%!FUNC!: FxObject creation failed for Queue object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoQueue::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0%!FUNC!: CWdfIoQueue creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoQueue::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Queue object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoQueue::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0%!FUNC!: INTERNAL ERROR: unable to QI IWDFIoQueue interface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0%!FUNC!: INTERNAL ERROR: unable to QI IWDFIoRequest interface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0%!FUNC!: Driver hasn't registered for OnRead notification.Framework completing the request with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemHRESULT -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0%!FUNC!: Driver hasn't registered for OnWrite notification.Framework completing the request with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemHRESULT -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0%!FUNC!: Driver hasn't registered for OnDeviceIoControl notification.Framework completing the request with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemHRESULT -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0%!FUNC!: Driver hasn't registered for OnDefaultIo notification.Framework completing %10!s! request with %11!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemHRESULT -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0%!FUNC!: Driver hasn't registered for OnClose notification.Framework is automatically completing the request with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemHRESULT -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0%!FUNC!: Unknown request type(0x%10!x!), not delivered to driver" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemLong -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Request 0x%10!p! of type 0x%11!x! dispatched to Driver" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0Could not get the request type, completing with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SubmitRequest
{
Arg, ItemHRESULT -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Fired, Queue 0x%10!p!, Request 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequestCompleteEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0FxIoQueue::RequestCompleteEvent Request 0x%10!p! not Driver owned! It is an error to call IWDFIoRequest::Complete on a non driver owned request." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequestCompleteEvent
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0FxIoQueue::RequestCompleteEvent Request 0x%10!p! Has been used as a TagRequest in WdfIoQueuePeekNextRequest. A TagRequest can not be used until its been returned by WdfIoQueueRetrieveRequest." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequestCompleteEvent
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0FxIoQueue::RequestCompleteEvent Request 0x%10!p! is on a cancellation list for Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequestCompleteEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0Queue 0x%10!p! is not accepting requests status %11!d! cancelling request 0x%12!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0Queue is configured to automatically complete zero-length request" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueRequest
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0Queuing Request 0x%10!p! on Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0ProcessCancelledRequests: Calling Driver for Request 0x%10!p!, queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessCancelledRequests
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0ProcessCancelledRequestsOnQueue: Calling Driver for Request 0x%10!p!, queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessCancelledRequestsOnQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0Executing work item, Queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue_WorkItemThunk
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0%!FUNC!:Work item pending for queue 0x%10!p!, no need to queue another one" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::EnqueueWorkItem
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0%!FUNC!:The queue 0x%10!p! is being rundown" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::EnqueueWorkItem
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0Presentation lock for Queue 0x%10!p! already held, deferring to workitem" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 53 "%0In Thread (ID:%10!d!), processing requests" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DispatchEvents
{
Arg, ItemLong -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 54 "%0Queue 0x%10!p! Power Transition State %11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 55 "%0Queue not in Dispatching state, queue 0x%10!p!, State 0x%11!x!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0Driver has configured Queue 0x%10!p! for WdfIoQueueDispatchManual" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0Driver has %10!d! requests and WdfIoQueueDispatchSequential, waiting... Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DispatchEvents
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0No requests on Queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0Queue 0x%10!p! is not accepting requests State 0x%11!x!, request 0x%12!p!. Returning error" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueRequestFromForward
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0Queuing Request 0x%10!p! on Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueueRequestFromForward
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 61 "%0FxIoQueue::ForwardRequest Cannot forward a request to the same queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ForwardRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 62 "%0%!FUNC!: Request 0x%10!p! not owned by driver! Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ForwardRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 63 "%0%!FUNC!: Request 0x%10!p! Has been used as a TagRequest in WdfIoQueueFindRequest. A TagRequest can not be used until its been retrieved by WdfIoQueueRetrieveFoundRequest" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ForwardRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 64 "%0%!FUNC!: Request 0x%10!p! is cancelable. Call IWDFRequest::UnmarkCancelable before Forwarding to another Queue" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ForwardRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 65 "%0pRequest->SetCompletionEvent() was already set" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ForwardRequest
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 66 "%0Invalid operation: Requeue is allowed only for a manual queue, IWDFIoRequest 0x%10!p!, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequeueRequest
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 67 "%0IWDFIoRequest 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequeueRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 68 "%0%!FUNC!:Request 0x%10!p! (ID:0x%11!I64x!) was cancelled while on queue 0x%12!p!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::CancelForQueue
{
Arg, ItemPtr -- 10
Arg, ItemLongLongX -- 11
Arg, ItemPtr -- 12
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 69 "%0pRequest->SetCompletionEvent() was already set" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::CancelForQueue
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 70 "%0%!FUNC!: Host has canceled Request 0x%10!p! in driver for queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::CancelForDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 71 "%0%!FUNC!: CWdfIoRequest 0x%10!p! (ID:0x%11!I64x!) is already on list, CWdfIoRequest::m_OwnerListEntry is busy!, Queue 0x%12!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::CancelForDriver
{
Arg, ItemPtr -- 10
Arg, ItemLongLongX -- 11
Arg, ItemPtr -- 12
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 72 "%0%!FUNC!: Invalid operation. The IoQueue (0x%10!p!) is not configured to have callback lock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfIoQueue::AcquireLock
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 73 "%0%!FUNC!: Acquiring the presentation lock for IoQueue (0x%10!p!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_DDI FUNC=CWdfIoQueue::AcquireLock
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 74 "%0%!FUNC!: Invalid operation. The IoQueue (0x%10!p!) is not configured to have callback lock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfIoQueue::ReleaseLock
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 75 "%0%!FUNC!: Releasing the presentation lock for IoQueue (0x%10!p!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_DDI FUNC=CWdfIoQueue::ReleaseLock
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 76 "%0%!FUNC!: Request 0x%10!p! not owned by driver! Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequestCancelable
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 77 "%0%!FUNC!: Request 0x%10!p! is already cancelable" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequestCancelable
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 78 "%0%!FUNC! Request 0x%10!p! is already not cancelable" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::RequestCancelable
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 79 "%0%!FUNC!: notify method == NULL on WdfIoQueue 0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessReadyNotify
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 80 "%0%!FUNC!:  status 0x%10!x! is invalid, Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::SetState
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 81 "%0%!FUNC!: Queue 0x%10!p! State 0x%11!x! incorrect for deleting. Must clear WdfIoQueueAcceptRequests" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DeleteWdfObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 82 "%0%!FUNC!: Can not delete Queue 0x%10!p! because it has %11!d! Queued Requests and %12!d! Driver Pending Requests" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::DeleteWdfObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 83 "%0%!FUNC!:Queue 0x%10!p! already has a SynchronousPurgeComplete registered" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 84 "%0%!FUNC!:Queue 0x%10!p! already has a PurgeComplete callback registered 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 85 "%0%!FUNC!: WdfIoQueue 0x%10!p! all Queued requests cancelled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 86 "%0%!FUNC!: Cancelling Request 0x%10!p!, Queue 0x%11!p!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 87 "%0%!FUNC!: queue 0x%10!p! all driver cancellable requests cancelled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 88 "%0Queue is purged, calling driver callback" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPurgeComplete
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 90 "%0%!FUNC!: Driver called IWDFIoQueue::RetrieveNextRequest on a sequential queue with no outstanding requests, Queue 0x%10!p!. This can cause a race with automatically dispatched requests. Call IWDFIoQueue::RetrieveNextRequest before completing the current request(s)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::GetRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 91 "%0%!FUNC!:Can not be called on a parallel Queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::GetRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 92 "%0%!FUNC!:Queue 0x%10!p! is powered off" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::GetRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 93 "%0%!FUNC!: Queue 0x%10!p! is paused" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::GetRequest
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 94 "%0pRequest->SetCompletionEvent() was already set" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::GetRequest
{
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 95 "%0%!FUNC!: Waiting for all threads to stop dispatching requests so that IWDFIoQueue 0x%10!p! can be powered off" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::StartPowerTransitionOff
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 96 "%0%!FUNC!: Queue 0x%10!p! is powering off with in-flight requests" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 97 "%0%!FUNC!: Queue 0x%10!p! is powering off without in-flight requests" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 98 "%0%!FUNC!: Queue 0x%10!p! is purging with in-flight requests" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

21bf91fb-c987-39d3-7a19-1217755b4e2c WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 99 "%0Power purge: Queue 0x%10!p! is purging without in-flight requests" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

231af4b6-3d7b-3a10-2a85-741c9dd30227 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Lower stack returned error for query pnp device state, %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryPnpDeviceStateCompletionRoutine
{
Arg, ItemNTSTATUS -- 10
}

2374a47f-3ccf-3f79-62b2-ee5b475dc8f0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Received set device power irp 0x%10!p! on WDFDEVICE 0x%11!p! !devobj 0x%12!p!, but the irp was not requested by the device (the power policy owner)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::DispatchDeviceSetPower
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

2464798a-d513-3377-4a3b-5fef097b219b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!:Memory allocation failure. Cannot allocate memory for CWdfRemoteInterfaceInit" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfRemoteInterfaceInit::CreateAndInitialize
{
}

2464798a-d513-3377-4a3b-5fef097b219b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!:Memory allocation failure. Cannot allocate memory for SymbolicLink" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfRemoteInterfaceInit::CreateAndInitialize
{
}

2464798a-d513-3377-4a3b-5fef097b219b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!:Unable to copy SymbolicLink hr=%10!s!:" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfRemoteInterfaceInit::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

273ffab2-c5e4-316b-6ff6-ad7b3dc647ca FxIrpUm // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Failed to create event, error: %10!s!, returning %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=FxIrp::SendIrpSynchronously
{
Arg, ItemWINERROR -- 10
Arg, ItemNTSTATUS -- 11
}

2a678319-595e-3a01-c90a-15431e3bb673 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for CWdfHidInterface object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfHidInterface::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

2a678319-595e-3a01-c90a-15431e3bb673 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfHidInterface creation failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfHidInterface::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

2a678319-595e-3a01-c90a-15431e3bb673 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0HidInterface object created, IWDFHidInterface: %10!p!, Fx object: %11!p!, WDFOBJECT %12!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_DEVICE FUNC=CWdfHidInterface::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

2a678319-595e-3a01-c90a-15431e3bb673 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: NotifyPresence returned failure, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfHidInterface::NotifyPresence
{
Arg, ItemHRESULT -- 10
}

2b752c5a-24de-37ce-e3bc-3390280d155d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0releasing tag %10!p! on object %11!p! that was not acquired, !wdftagtracker %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::UpdateTagHistory
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

2b752c5a-24de-37ce-e3bc-3390280d155d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Dropped references on a tag tracker, show references with: !wdftagtracker %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
}

2b752c5a-24de-37ce-e3bc-3390280d155d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
Arg, ItemLong -- 13
}

2b752c5a-24de-37ce-e3bc-3390280d155d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Possibly Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!).  Is benign unless there are other outstanding leaked references." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
Arg, ItemLong -- 13
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for UsbInterface object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbInterface::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfUsbInterface creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbInterface::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0UsbInterface object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbInterface::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Creating preallocated request for USB Interface failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfUsbInterface::Initialize
{
Arg, ItemHRESULT -- 10
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: USB Interface: %10!c! (associated interface: %11!c!) has already been retrieved.Currently multiple retrievals of same interface are not supported, %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfUsbInterface::RetrieveAssociatedInterfaceHandle
{
Arg, ItemChar -- 10
Arg, ItemChar -- 11
Arg, ItemHRESULT -- 12
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: RetrieveAssociatedInterfaceHandle failed for USB Interface: %10!c! (associated interface: %11!c!), %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfUsbInterface::RetrieveAssociatedInterfaceHandle
{
Arg, ItemChar -- 10
Arg, ItemChar -- 11
Arg, ItemHRESULT -- 12
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: RetrieveInterfaceDescriptor failed for USB Interface %10!p!, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfUsbInterface::RetrieveInterfaceDescriptor
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

2d3b12ba-ac09-39bf-5387-bee72f9fccf5 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: SelectSetting %10!c! failed for USB Interface %11!p!, %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfUsbInterface::SelectSetting
{
Arg, ItemChar -- 10
Arg, ItemPtr -- 11
Arg, ItemHRESULT -- 12
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: CWdfInterruptThreadpool creation failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfInterruptThreadpool::CreateAndInit
{
Arg, ItemHRESULT -- 10
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: Threadpool creation failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptThreadpool::Initialize
{
Arg, ItemWINERROR -- 10
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: Failed to set minimum threads (%10!d!) in threadpool, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptThreadpool::Initialize
{
Arg, ItemLong -- 10
Arg, ItemWINERROR -- 11
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Failed to set minimum threads in threadpool, TP_POOL 0x%10!p! to %11!d! %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptThreadpool::UpdateThreadPoolThreadLimits
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemWINERROR -- 12
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Threads in thread pool TP_POOL 0x%10!p! updated to Max %11!d! Min %12!d! threads" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptThreadpool::UpdateThreadPoolThreadLimits
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: Waitblock creation failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptWaitblock::_CreateAndInit
{
Arg, ItemHRESULT -- 10
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: Waitblock init failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptWaitblock::_CreateAndInit
{
Arg, ItemHRESULT -- 10
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: Event creation failed for CWdfInterrupt object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptWaitblock::Initialize
{
Arg, ItemWINERROR -- 10
}

34c28077-e4fd-32fe-8c83-dcc825214928 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: Event creation failed for CWdfInterrupt object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterruptWaitblock::Initialize
{
Arg, ItemWINERROR -- 10
}

3966804e-b01f-3fdb-3579-34736b7743ba WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!:CStringID::CreateAndInitialize() failure: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfTransportSettings::AddID
{
Arg, ItemHRESULT -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE %10!p! !devobj %11!p! The driver's S0-idle settings and/or power framework settings did not take effect because they were supplied too late. The driver must ensure that the settings are provided before the first start IRP is completed." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::FreezeIdleTimeoutManagementStatus
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because the Event is already enqueued." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current state %12!s!, policy event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
Arg, ItemEnum(FxPowerPolicyEvent) -- 14
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power policy state %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PowerPolicyEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 13
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Failed to allocate D0 request to disarm from wake from S0 to allow arm for wake from Sx, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSystemSleepNeedWake
{
Arg, ItemNTSTATUS -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWake
{
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWakeNP
{
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFDEVICE %10!p! powering down before child devices have powered down. This usually indicates a faulty child device that completed the Sx irp before sending the Dx irp" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleeping
{
Arg, ItemPtr -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Attempting to send wait wake request for EvtDeviceArmWakeFromSx() failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingSendWake
{
Arg, ItemNTSTATUS -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0Could not allocate wake request for wake from S0, revert arming, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableSendWake
{
Arg, ItemNTSTATUS -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0PowerDeviceD0 requested by WDFDEVICE 0x%10!p! !devobj 0x%11!p!, is being completed by upper driver without sending it to driver that requested it" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolDevicePowerUpComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Could not request D%10!d! irp for device %11!p! (WDFDEVICE %12!p!), %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0Requesting D%10!d! irp, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0Requesting wait wake irp for S%10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
Arg, ItemLong -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Requesting wait wake irp for S%10!d! failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0Completing system power irp %10!p! (S%11!d!), %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCompleteSystemPowerIrp
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Successfully got WaitWake irp %10!p! for cancelling" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
Arg, ItemPtr -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Cancel of irp %10!p! returned %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0No WaitWake irp to cancel" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0WDFDEVICE %10!p! !devobj %11!p! Completion of WaitWake irp %12!p!, %13!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0Completion of WaitWake irp %10!p!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0Not completing WaitWake irp %10!p! in completion routine" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0WDFDEVICE %10!p!, !devobj %11!p! Completion of UsbSS irp" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyUsbSelectiveSuspendCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

404568d0-d029-337e-b5a3-d00ee31f5744 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0WDFDEVICE %10!p! !devobj 0x%11!p! not idling out because there are %12!d! children who are powered up" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCanIdlePowerDown
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

46b20734-fc96-3200-d906-c108f90ba6ec WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for DriverCreatedFile object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriverCreatedFile::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

46b20734-fc96-3200-d906-c108f90ba6ec WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfDriverCreatedFile creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriverCreatedFile::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

46b20734-fc96-3200-d906-c108f90ba6ec WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0DriverCreatedFile object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriverCreatedFile::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: SourceMemory is smaller than the requested number of bytes to be copied, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfMemoryBuffer::CopyPtrToPtr
{
Arg, ItemHRESULT -- 10
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: DestinationMemory is not large enough to contain the number of bytes requested to be copied" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfMemoryBuffer::CopyPtrToPtr
{
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: DestinationMemory is not large enough to contain the number of bytes requested to be copied" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfMemoryBuffer::CopyPtrToPtr
{
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: SourceMemory is smaller than the requested number of bytes to be copied, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfMemoryBuffer::CopyPtrToPtr
{
Arg, ItemHRESULT -- 10
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Wdf Internal Error: Caller attempting to clobber preallocated memory" //   LEVEL=TRACE_LEVEL_FATAL FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::SetBufferInternal
{
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: FxObject creation failed for Device object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::CreateAndInitalize
{
Arg, ItemNTSTATUS -- 10
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: CWdfMemoryBuffer creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::CreateAndInitalize
{
Arg, ItemHRESULT -- 10
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Memory object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::CreateAndInitalize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: Memory allocation failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::Initialize
{
Arg, ItemHRESULT -- 10
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: Copying zero bytes is not allowed, 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::CopyToBuffer
{
Arg, ItemLong -- 10
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!: Copying zero bytes is not allowed, 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::CopyFromBuffer
{
Arg, ItemLong -- 10
}

46e34e42-8e18-3bc5-732f-0c9793e4134d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!: Zero buffer size is not allowed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfMemoryBuffer::SetBuffer
{
Arg, ItemHRESULT -- 10
}

4fa6a0ff-c323-36bf-83b8-8612e0c2799f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for File object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfFile::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

4fa6a0ff-c323-36bf-83b8-8612e0c2799f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfFile creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfFile::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

4fa6a0ff-c323-36bf-83b8-8612e0c2799f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0File object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfFile::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

53768f0d-e640-3360-ebd4-19ae75796140 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: Ref count of Object 0x%10!p! transitioning from 0 to 1. This is typically caused by incorrect manipulation of object reference count" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=UfxObject::AddRef
{
Arg, ItemPtr -- 10
}

53768f0d-e640-3360-ebd4-19ae75796140 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: Ref count of Object 0x%10!p!, transitioning from 0 to -1. This is typically caused by incorrect manipulation of object reference count" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=UfxObject::Release
{
Arg, ItemPtr -- 10
}

5bad4679-510c-31b8-4379-1bf639c453af WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for RemoteInterface object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfRemoteInterface::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

5bad4679-510c-31b8-4379-1bf639c453af WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfRemoteInterface creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfRemoteInterface::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

5bad4679-510c-31b8-4379-1bf639c453af WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0RemoteInterface object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfRemoteInterface::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

5bad4679-510c-31b8-4379-1bf639c453af WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0QueryRemove callback was from an old registration, ignoring." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_INTERFACE FUNC=CWdfRemoteInterface::OnQueryRemove
{
}

5bad4679-510c-31b8-4379-1bf639c453af WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0RemoveCanceled callback was from an old registration, ignoring." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_INTERFACE FUNC=CWdfRemoteInterface::OnRemoveCanceled
{
}

5bad4679-510c-31b8-4379-1bf639c453af WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0RemoveComplete callback was from an old registration, ignoring." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_INTERFACE FUNC=CWdfRemoteInterface::OnRemoveComplete
{
}

5bad4679-510c-31b8-4379-1bf639c453af WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0CustomEvent was from an old registration, ignoring." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_INTERFACE FUNC=CWdfRemoteInterface::OnCustomEvent
{
}

6026face-722a-3c16-9cd6-dd810078f103 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: Error allocating new device interface object." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfDeviceInterface::CreateAndInitialize
{
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: Cleaning up CWUDFDEvice" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_PNP FUNC=CWdfDriver::~CWdfDriver
{
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: Releasing UMD's IDriverEntry interface" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_PNP FUNC=CWdfDriver::~CWdfDriver
{
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: FxObject creation failed for Driver object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriver::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: CWdfDriver creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriver::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Driver object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriver::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: UndoEvent initialization failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemNTSTATUS -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: Could not allocate resource, hr: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!:Registry key open failed for the PDO key, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemWINERROR -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!:Registry path string too long or badly formed path. Invalid configuration %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!:Memory allocation failure. Cannot allocate device stack object." //   LEVEL=TRACE_LEVEL_FATAL FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!:Unable to copy the configuration path %10!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!:Device Instance ID string too long or badly formed path. Invalid configuration %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!:Memory allocation failure. Cannot allocate device stack object." //   LEVEL=TRACE_LEVEL_FATAL FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0%!FUNC!:Unable to copy the configuration path %10!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0%!FUNC!:Unable to determine KernelDeviceName length %10!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0%!FUNC!:Memory allocation failure. Cannot allocate memory for kernel device name" //   LEVEL=TRACE_LEVEL_FATAL FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0%!FUNC!:Unable to copy kernel device name hr=%10!s!:" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0%!FUNC!:Driver did not create a device in OnDeviceAdd, hr=%10!s!:" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0%!FUNC!:Filter driver returned hr=%10!s!: withoutcreating a WDFDEVICE, converting to S_OK" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_INIT FUNC=CWdfDriver::OnAddDevice
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0%!FUNC!: Invalid parameter: pDeviceInit, pDeviceQueryInterface or ppDevice is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDriver::CreateDevice
{
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0%!FUNC!: User object creation failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriver::CreateWdfObject
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0%!FUNC!: Invalid arguments passed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriver::CreatePreallocatedWdfMemory
{
Arg, ItemHRESULT -- 10
}

6288e4e2-93f6-3d03-d785-696b0e4466f1 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0%!FUNC!: Invalid arguments passed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDriver::CreateWdfMemory
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: Releasing resources in CWdfDevice" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::~CWdfDevice
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 100 "%0%!FUNC!: Driver set AutomaticSerialization to TRUE in workitem  config structure but it has explicitly set Locking Constraint to None. WUDF_WORKITEM_CONFIG structure 0x%10!p! passed, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateWorkItem
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 101 "%0%!FUNC!: failed creating workitem %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateWorkItem
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 102 "%0%!FUNC!: Invalid paramater: ppHidInterface parameter is NULL %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateHidInterface
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 103 "%0%!FUNC!: Hid interface must be created in OnDeviceAdd, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateHidInterface
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 104 "%0%!FUNC!: failed creating HidInterface %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateHidInterface
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 105 "%0Handle to hardware key not yet available" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 106 "%0Failed to open hw registry key to read hw access settings" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 107 "%0Failed to read kernel mode client policy value in registry" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 108 "%0Failed to read file object policy value in registry" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 109 "%0Failed to read method neither action value in registry" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Can't delete default queue 0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfDevice::RemoveQueueReferences
{
Arg, ItemPtr -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 110 "%0Failed to read method neither action value in registry" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 111 "%0Failed to allocate memory for string buffer" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 112 "%0Failed to read Group id value in registry" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveDeviceInfoRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: No default queue for this device" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::GetDefaultIoQueue
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Invalid paramater: IWDFIoQueue parameter is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateIoQueue
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Invalid parameter: The IUnknown* parameter is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateIoQueue
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: failed creating queue %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateIoQueue
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: Attempting to create a default queue, when one is already present, %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateIoQueue
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: Error allocating device interface object - %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateDeviceInterface
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: Error hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateDeviceInterface
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: Error hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AssignDeviceInterfaceState
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!: NULL is an invalid value for paramater pdwDeviceNameLength" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::RetrieveDeviceName
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!: NULL is an invalid value for paramater pdwDevInstLength" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::RetrieveDeviceInstanceId
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: NULL is an invalid paramater" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::RetrieveDevicePropertyStore
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0%!FUNC!: Invalid event type, %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::PostEvent
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0%!FUNC!: PostEvent failure - %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::PostEvent
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0%!FUNC!: Event initialization failed while creating Device object, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWdfDevice::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0%!FUNC!: FxObject creation failed for Device object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0%!FUNC!: CWdfDevice creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Device object created, IWDFDevice: %10!p!, Fx object: %11!p!, WDFOBJECT %12!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0%!FUNC!: Framework device object was created, but IWDFDriver::OnDeviceAdd returned hr=%10!s!:" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::DeleteDeviceFromFailedCreateNoDelete
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0%!FUNC!:Memory allocation failure. Cannot allocate memory for kernel device name" //   LEVEL=TRACE_LEVEL_FATAL FLAGS=FX_TRACE_INIT FUNC=CWdfDevice::Initialize
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0%!FUNC!:Unable to copy kernel device name hr=%10!s!:" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDevice::Initialize
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0%!FUNC!:Registry key open failed for the PDO key, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDevice::Initialize
{
Arg, ItemWINERROR -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0%!FUNC!:Memory allocation failure. Cannot allocate memory for device key path" //   LEVEL=TRACE_LEVEL_FATAL FLAGS=FX_TRACE_INIT FUNC=CWdfDevice::Initialize
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0%!FUNC!:Unable to copy kernel device name hr=%10!s!:" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfDevice::Initialize
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0%!FUNC!: FxPkgFdo creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::FdoInitialize
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0%!FUNC!: Invalid request type,%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::DispatchRequest
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0%!FUNC!: Invalid operation. The device queues are not configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::DispatchRequest
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0%!FUNC!: Could not QI 0x%10!p! for file object. Internal error %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::CleanupFile
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0%!FUNC!: Could not QI 0x%10!p! for file object. Internal error %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::CloseFile
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0%!FUNC!: Read message, IWudfIoIrp:0x%10!p!, Context:0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_PNP FUNC=CWdfDevice::ReadFile
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0%!FUNC!: Could not QI for file objec. Internal error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::ReadFile
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0%!FUNC!: Write message, IWudfIoIrp 0x%10!p!, Context 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfDevice::WriteFile
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0%!FUNC!: Could not QI for file objec. Internal error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::WriteFile
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0%!FUNC!: DeviceControl message, IWudfIoIrp 0x%10!p!, Context: 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfDevice::DeviceControl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0%!FUNC!: Could not QI for file objec. Internal error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::DeviceControl
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0%!FUNC!: Flush message, IWudfIoIrp 0x%10!p!, Context 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfDevice::FlushBuffers
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0%!FUNC!: Could not QI for file objec. Internal error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::FlushBuffers
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0%!FUNC!: QueryInformation message, IWudfIoIrp 0x%10!p!, Context 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfDevice::QueryInformationFile
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0%!FUNC!: Could not QI for file objec. Internal error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::QueryInformationFile
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0%!FUNC!: SetInformation message, IWudfIoIrp 0x%10!p!, Context 0x%11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfDevice::SetInformationFile
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 51 "%0%!FUNC!: Could not QI for file objec. Internal error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfDevice::SetInformationFile
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0%!FUNC!: DeviceInterfaceArrival message, Interface %10!s!, SymbolicLink: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfDevice::RemoteInterfaceArrival
{
Arg, ItemGuid -- 10
Arg, ItemWString -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 53 "%0%!FUNC!: DeviceInterfaceRemoval message. RemoteInterfaceID: %10!I64u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfDevice::RemoteInterfaceRemoval
{
Arg, ItemULongLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 54 "%0Invalid operation. The driver must either have IQueueCallbackDefaultIoHandler or handler for request type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ConfigureForwarding
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 55 "%0The queue parameter (0x%10!p!) passed to ConfigureRequestDispatching doesn't belong to this device" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ConfigureForwarding
{
Arg, ItemPtr -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0IWDFIoQueue argument is the default queue. It is not valid to change request dispatching on the default queue" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ConfigureForwarding
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0The device is already configured for this request type (0x%10!d!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ConfigureForwarding
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0The device is NOT configured for this request type (0x%10!d!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ConfigureForwarding
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0The queue parameter (0x%10!p!) passed to ConfigureRequestDispatching doesn't match the queue (0x%11!p!) previously registered with the framwork" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ConfigureForwarding
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0%!FUNC!: Invalid operation. The device (0x%10!p!) is not configured to have callback lock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AcquireLock
{
Arg, ItemPtr -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 61 "%0%!FUNC!: Acquiring the presentation lock for device (0x%10!p!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AcquireLock
{
Arg, ItemPtr -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 62 "%0%!FUNC!: Invalid operation. The device (0x%10!p!) is not configured to have callback lock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ReleaseLock
{
Arg, ItemPtr -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 63 "%0%!FUNC!: Releasing the presentation lock for device (0x%10!p!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ReleaseLock
{
Arg, ItemPtr -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 65 "%0ParentObject 0x%10!p! must have device as an eventual ancestor, returing %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfDevice::CreateRemoteTarget
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 66 "%0ParentObject 0x%10!p! ancestor is device 0x%11!p!, but device object CreateRemoteTarget called on is 0x%12!p!%13!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfDevice::CreateRemoteTarget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemHRESULT -- 13
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 70 "%0IWDFDevice::AssignS0IdleSettings cannot be called if you are not the power policy owner for the stack, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AssignS0IdleSettings
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 71 "%0IWDFDevice::AssignS0IdleSettingsEx called with IdleSettings of the wrong size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AssignS0IdleSettingsEx
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 72 "%0IWDFDevice::AssignS0IdleSettings cannot be called if you are not the power policy owner for the stack, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AssignS0IdleSettingsEx
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 73 "%0a parameter (DxState, IdleCaps, Enabled, or UserControlOfIdleSettings) is out range, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AssignS0IdleSettingsEx
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 74 "%0IWDFDevice::AssignSxWakeSettings cannot be called if you are not the power policy owner for the stack, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AssignSxWakeSettings
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 75 "%0a parameter (DxState, Enabled, or UserControlOfWakeSettings) is out range, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::AssignSxWakeSettings
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 76 "%0IWDFDevice::StopIdle does nothing if you are not the power policy owner for the stack, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::StopIdle
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 77 "%0IWDFDevice::StopIdle, WaitForD0 %10!d! %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::StopIdle
{
Arg, ItemLong -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 78 "%0IWDFDevice::ResumeIdle does nothing if you are not the power policy owner for the stack" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::ResumeIdle
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 79 "%0Failed to open hw registry key to read hw access settings" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveHwAccessRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 80 "%0invalid direct hardware access value in registry %10!u!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveHwAccessRegistrySettings
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 81 "%0Failed to read direct hardware access value in registry" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveHwAccessRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 82 "%0DirectHardwareAccess = %10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveHwAccessRegistrySettings
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 83 "%0Invalid Register Access mode value in registry %10!u!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveHwAccessRegistrySettings
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 84 "%0Failed to read Register Access mode value in registry" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveHwAccessRegistrySettings
{
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 85 "%0RegisterAccessMode = %10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_DEVICE FUNC=CWdfDevice::RetrieveHwAccessRegistrySettings
{
Arg, ItemLong -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 86 "%0%!FUNC!: Invalid paramater: ppInterrupt parameter is NULL %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 87 "%0%!FUNC!: Size member of Configuration incorrect (hint: Use _INIT macro) %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 88 "%0%!FUNC!: Invalid paramater: OnInterruptIsr is NULL %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 89 "%0%!FUNC!: IWDFInterrupt can only be created during: (1) OnDeviceAdd when the device is initially created, or (2) OnPrepareHardware, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 90 "%0%!FUNC!: Not NULL InterruptRaw or InterruptTranslated in WUDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 91 "%0%!FUNC!: NULL InterruptRaw or InterruptTranslated in WUDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 92 "%0%!FUNC!: Driver cannot specify ShareVector different from WdfUseDefault in OnPrepareHardware callback,WUDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 93 "%0%!FUNC!: Driver opted for AutomaticSerialization but the locking constraint is not set correctly to WdfDeviceLevel. WUDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 94 "%0%!FUNC!: failed creating interrupt %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateInterrupt
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 95 "%0%!FUNC!: Failed to update minimum number of threads in interrupt thread pool %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::UpdateInterruptThreadpoolLimits
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 96 "%0%!FUNC!: Invalid paramater: pConfig parameter is NULL %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateWorkItem
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 97 "%0%!FUNC!: Invalid paramater: ppWorkItem parameter is NULL %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateWorkItem
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 98 "%0%!FUNC!: Size member of pConfig incorrect (hint: Use _INIT macro) %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateWorkItem
{
Arg, ItemHRESULT -- 10
}

62a17ef8-da44-3b46-5c75-3cedd7e43b50 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 99 "%0%!FUNC!: Invalid paramater: OnWorkItemFunc is NULL %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDevice::CreateWorkItem
{
Arg, ItemHRESULT -- 10
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Initialize failed for ThreadTableLock, status: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLockInitialize
{
Arg, ItemNTSTATUS -- 10
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Thread 0x%10!p! already owns lock 0x%11!p! for object 0x%12!p!, WDFOBJECT 0x%13!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Lock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Thread 0x%10!p! Is Attempting to release a Lock 0x%11!p! for Object 0x%12!p! it does not own!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Unlock:  Can't get per thread entry for thread %10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Thread has entry, but no locks recorded as held for passive!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0this 0x%10!p!, perThreadList 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Thread has entry, but no locks recorded as held for dispatch!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0this 0x%10!p!, perThreadList 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Object Type 0x%10!x! does not have a lock order defined in fx\inc\FxVerifierLock.hpp" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::InitializeLockOrder
{
Arg, ItemLong -- 10
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Thread 0x%10!p! does not have an entry" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::GetThreadTableEntry
{
Arg, ItemPtr -- 10
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0OldEntry Thread 0x%10!p! not Current! 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::ReleaseOrReplaceThreadTableEntry
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0No Memory to allocate thread table" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::AllocateThreadTable
{
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Thread 0x%10!p! Attempted to acquire lock on Object 0x%11!p!, ObjectType 0x%12!x!, at Level 0x%13!x! out of sequence." //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Highest Lock Currently held is level 0x%10!x! for Object 0x%11!p!, ObjectType 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0List of Already Acquired Locks and Objects:" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
}

6498ff03-e40c-3778-c663-706ee6f9b0a9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Object 0x%10!p!, ObjectType 0x%11!x!, LockLevel 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Initializing WaitWakeLock failed for PowerMachine 0x%10!p!, status %11!s!" //   GLOBALS=Pnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerMachine::Init
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because the Event is already enqueued." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current power state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE %10!p! !devobj 0x%11!p! current state %12!s! event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
Arg, ItemEnum(FxPowerEvent) -- 14
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering Power State %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PowerEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0EvtDeviceD0Entry WDFDEVICE 0x%10!p! !devobj 0x%11!p!,  old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerD0Starting
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0EvtDeviceD0EntryPostInterruptsEnabed WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerD0StartingConnectInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0EvtDeviceSelfManagedIoStop failed %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemNTSTATUS -- 10
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0EvtDeviceD0Exit WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0PowerReference on parent WDFDEVICE %10!p! for child WDFDEVICE %11!p! failed, %12!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartingChild
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0EvtDeviceSelfManagedIoStop failed %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDx
{
Arg, ItemNTSTATUS -- 10
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0EvtDeviceD0Exit WDFEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStoppedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0EvtDeviceD0Exit WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStoppedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0EvtDeviceSelfManagedIoRestart failed - %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartSelfManagedIo
{
Arg, ItemNTSTATUS -- 10
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0EvtDeviceSelfManagedIoRestart failed - %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartSelfManagedIoNP
{
Arg, ItemNTSTATUS -- 10
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0EvtDeviceD0Entry WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWaking
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0EvtDeviceD0Entry WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0EvtDeviceD0EntryPostInterruptsEnabed WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0EvtDeviceD0EntryPostInterruptsEnabed WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Force disconnecting interupts on !devobj %10!p!, WDFDEVICE %11!p!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptFailedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerInitialDmaEnableFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Force disconnecting interrupts on !devobj 0x%10!p!, WDFDEVICE %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DisconnectInterruptNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! WW !irp 0x%12!p! is a source of wake" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerMakeWakeRequestNonCancelable
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Interrupt(s) disconnect on WDFDEVICE %10!p! failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerConnectInterruptFailed
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

66387342-d27a-3520-74d3-7c7d4e31b6eb um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0EvtDeviceD0Exit WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerConnectInterruptFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

66612cc4-3799-3524-6b9e-eec7e822398c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Reg value name %10!s!, DataLength %11!d!, Data buffer length is invalid, STATUS_OBJECT_TYPE_MISMATCH" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyMultiSzString
{
Arg, ItemPWString -- 10
Arg, ItemLong -- 11
}

66612cc4-3799-3524-6b9e-eec7e822398c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Red value name %10!s!, DataLength %11!d!, Data buffer from registry does not have double NULL terminal chars, STATUS_OBJECT_TYPE_MISMATCH" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyMultiSzString
{
Arg, ItemPWString -- 10
Arg, ItemLong -- 11
}

68c9ee8b-7a56-3c75-7a02-446bb33291e9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}

68c9ee8b-7a56-3c75-7a02-446bb33291e9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}

68c9ee8b-7a56-3c75-7a02-446bb33291e9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Attributes %10!p! ContextTypeInfo is NULL, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=FxObjectAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

68c9ee8b-7a56-3c75-7a02-446bb33291e9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFHANDLE %10!p! cannot have contexts added to it, %11!s!" //   GLOBALS=object->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=imp_WdfObjectAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

68c9ee8b-7a56-3c75-7a02-446bb33291e9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Attempting to get context type %10!s! from WDFOBJECT 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=imp_WdfObjectGetTypedContextWorker
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}

6c2b2ad9-6b7f-3189-958f-61ab61334043 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Interface removal notification refers to unknown interface, RemoteInterfaceID: %10!I64u!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_INIT FUNC=CWdfRemoteInterfaceList::DispatchRemoval
{
Arg, ItemULongLong -- 10
}

6c2b2ad9-6b7f-3189-958f-61ab61334043 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: failed creating RemoteInterface %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DEVICE FUNC=CWdfRemoteInterfaceList::CreateRemoteInterface
{
Arg, ItemHRESULT -- 10
}

6ce97921-f68f-3208-0f54-3275b88ffb70 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0AllocateEvent for m_SentIoEvent failed, error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::Initialize
{
Arg, ItemWINERROR -- 10
}

6ce97921-f68f-3208-0f54-3275b88ffb70 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0AllocateEvent for m_DisposeEvent failed, error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::Initialize
{
Arg, ItemWINERROR -- 10
}

6ce97921-f68f-3208-0f54-3275b88ffb70 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0CreateTimerQueue failed, error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::Initialize
{
Arg, ItemWINERROR -- 10
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt
{
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt
{
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0not enough memory to allocate WDFINTERRUPT for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::_CreateAndInit
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0FxInterrupt Commit failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC! Lock initialization failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Initialize
{
Arg, ItemNTSTATUS -- 10
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0FxInterrupt initialize failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Initialize
{
Arg, ItemNTSTATUS -- 10
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Driver cannot specify PassiveHandling for MSI interrupts." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::AssignResources
{
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Is MSI? %10!d!, MSI-ID %11!d!, AffinityPolicy %12!s!, Priority %13!s!, Group %14!d!, Affinity 0x%15!I64x!, Irql 0x%16!x!, Vector 0x%17!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::AssignResources
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemEnum(_WDF_INTERRUPT_POLICY) -- 12
Arg, ItemEnum(_WDF_INTERRUPT_PRIORITY) -- 13
Arg, ItemLong -- 14
Arg, ItemLongLongX -- 15
Arg, ItemLong -- 16
Arg, ItemLong -- 17
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0You cannot apply policy at this stage for WDFINTERRUPT 0x%10!p! For interrupts created in EvtDevicePrepareHardware you must use EvtDeviceFilter APIs or use a pre-process routine to handle the IRP_MN_FILTER_RESOURCE_REQUIREMENT, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::SetPolicy
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0IoConnectInterrupt(Ex) Failed, SpinLock 0x%10!p!, Vector 0x%11!x!, IRQL 0x%12!x!, Synchronize IRQL 0x%13!x!, Mode 0x%14!x!, ShareVector %15!s!, ProcessorGroup %16!d!, ProcessorEnableMask 0x%17!I64x!, FloatingSave %18!s!, %19!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemString -- 15
Arg, ItemLong -- 16
Arg, ItemLongLongX -- 17
Arg, ItemString -- 18
Arg, ItemNTSTATUS -- 19
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0EvtInterruptEnable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0EvtInterruptDisable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Disconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Force disconnect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceDisconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

725aace4-a646-395c-8111-e7d0fac604c7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Force connect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceReconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributesForParentHandle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

80cc0595-483a-3452-55bb-96ffc85e41ce WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: Unable to initialize the global driver tracking table, %10!s!" //   LEVEL=TRACE_LEVEL_FATAL FLAGS=FX_TRACE_INIT FUNC=DllMain
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: Workitem allocation failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::InitializeInternal
{
Arg, ItemNTSTATUS -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: Waitblock creation failed for CWdfInterrupt object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::InitializeInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: failed to initialize interrupt %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=FxInterrupt::InitializeInternal
{
Arg, ItemNTSTATUS -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Connect message to reflector returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::ConnectInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Disconnect message to reflector returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::DisconnectInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: SetPolicy message to reflector returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::SetPolicyInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: ResetInterruptInfo message to reflector returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::ResetInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: RevokeResources message to reflector returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::RevokeResourcesInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: FlushQueuedDpcs message to reflector returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::FlushQueuedDpcs
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: Failed to assign interrupt resource to interrupt objectbecause interrupt resource is for level-triggered interruptwhich is not supported on this platform. See the docs for info onsupported platforms. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::AssignResourcesInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!: Failed to assign interrupt resource to interrupt object because resource descriptor indicates it is not a level-triggered interrupt but allows sharing of interrupt. UMDF supports sharing of interrupts only for level-triggered interrupts. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::AssignResourcesInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!: AssignResources message to reflector returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::AssignResourcesInternal
{
Arg, ItemHRESULT -- 10
}

8117eaa3-ea15-3d86-008d-1ffeb1bc7c0f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: AcknowledgeInterrupt message to reflector returned failure. Check UMDF log for failure reason. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=FxInterrupt::ThreadpoolWaitCallback
{
Arg, ItemHRESULT -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0IWDFUsbPipe: %10!p! Could not allocate workitem: %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::Config
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0IWDFUsbPipe: %10!p! Falied to allocate event for workitem error = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::Config
{
Arg, ItemPtr -- 10
Arg, ItemWINERROR -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0IWDFUsbPipe: %10!p! Falied to allocate event for repeat reader %11!d!, error = %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::Config
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemWINERROR -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0IWDFUsbPipe: %10!p! Could not allocate Read workitem: %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::Config
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0IWDFUsbPipe* %10!p! continuous reader queueing work item to recover from failed allocation" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::QueueWorkItemLocked
{
Arg, ItemPtr -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0IWDFUsbPipe* %10!p! continuous reader not queueing work item,WorkItemQueued = %11!d!, target state %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::QueueWorkItemLocked
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0IWDFUsbPipe* %10!p! is being reset, continuous reader %11!p! IWDFIoRequest* %12!p! is deferred for later." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0IWDFUsbPipe* %10!p! continuous reader format failed, %11!s!, repeater %12!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
Arg, ItemPtr -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0IWDFUsbPipe* %10!p! continuous reader, buffer alloc failed, but there are %11!d! readers left out of a max of %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0IWDFUsbPipe* %10!p! continuous reader buffer alloc failed but not in started state" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0IWDFUsbPipe* %10!p! continuous reader IWDFIoRequest* %11!p! returned with %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::OnCompletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemHRESULT -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0IWDFUsbPipe* %10!p! continuous reader cancelled IWDFIoRequest* %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::OnCompletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0IWDFUsbPipe* %10!p! continuous reader %11!p! IWDFIoRequest* %12!p! got asynchronously canceled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::OnCompletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0IWDFUsbPipe: %10!p! Waiting for error read event to complete Thread id 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbPipeContinuousReader::CancelRepeaters
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0%!FUNC!: FxObject creation failed for UsbPipe object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbTargetPipe::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0%!FUNC!: CWdfUsbTargetPipe creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbTargetPipe::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0UsbPipe object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbTargetPipe::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Falied to allocate pipe transfer context, returning hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::FormatTransferRequest
{
Arg, ItemHRESULT -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0IWDFUsbPipe* %10!p! converting stop action 0x%11!x! to 0x%12!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::GotoStopState
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0IWDFUsbPipe* %10!p! Continuous Reader should be stopped on D0Exit" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::GotoCloseState
{
Arg, ItemPtr -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0IWDFUsbPipe* %10!p! waiting for continuous reader work item to complete Thread id 0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0IWDFUsbPipe* %10!p! cancelling for continuous reader (max of %11!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0IWDFUsbPipe* %10!p!  waiting for all i/o to complete" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Continuous reader already initialized on IWDFUsbPipe* %10!p! %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::ConfigureContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0IWDFUsbPipe* %10!p! type 0x%11!x!, only bulk or interruptpipes can be configured for continuous readers, %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::ConfigureContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemHRESULT -- 12
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0  wrong direction for continuous reader,%10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::ConfigureContinuousReader
{
Arg, ItemHRESULT -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0HeaderLength + TransferLength overflow%10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::ConfigureContinuousReader
{
Arg, ItemHRESULT -- 10
}

86d5c0cc-72bc-351c-0d32-832294823a17 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0HeaderLength + TransferLength + TrailerLength overflow%10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetPipe::ConfigureContinuousReader
{
Arg, ItemHRESULT -- 10
}

89e1fed3-dac2-3ef7-b26e-ff5e6f659e3b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: ppvObject is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUnifiedPropertyStore::QueryInterface
{
}

89e1fed3-dac2-3ef7-b26e-ff5e6f659e3b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: Out of memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfUnifiedPropertyStore::CreateAndInitialize
{
}

89e1fed3-dac2-3ef7-b26e-ff5e6f659e3b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: Out of memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfUnifiedPropertyStore::Initialize
{
}

89e1fed3-dac2-3ef7-b26e-ff5e6f659e3b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Invalid reference string length %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfUnifiedPropertyStore::Initialize
{
Arg, ItemHRESULT -- 10
}

89e1fed3-dac2-3ef7-b26e-ff5e6f659e3b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Out of memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfUnifiedPropertyStore::Initialize
{
}

89e1fed3-dac2-3ef7-b26e-ff5e6f659e3b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: Error storing reference string %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWdfUnifiedPropertyStore::Initialize
{
Arg, ItemHRESULT -- 10
}

8f4c17d3-8d07-385f-650e-ab673e63120b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: BufferOffset too big" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=FxRequestBuffer::ValidateMemoryOffsets
{
}

8f4c17d3-8d07-385f-650e-ab673e63120b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: BufferOffset or length too big" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=FxRequestBuffer::ValidateMemoryOffsets
{
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for IoTarget object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoTarget::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfIoTarget creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoTarget::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0IoTarget object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoTarget::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Sending request %10!p!, Irp %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitPendedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Completing Pended CWdfIoRequest* %10!p!, Irp %11!p!, %12!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitPendedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemHRESULT -- 12
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0GotoStartState() !wudfiotarget 0x%10!p! : PriorState: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::GotoStartState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0IoTarget %10!p!, Request %11!p! is being canceled on another thread, allowing other thread to complete request, not resending" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::DrainPendedRequestsLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0IoTarget %10!p! stopped, but is current in the %11!d! state, not started or stopped" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::GotoStopState
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0GotoCloseState(%10!s!) !wudfiotarget 0x%11!p! : PriorState: %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::GotoCloseState
{
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0CWdfIoTarget %10!p!, Waiting on Dispose event %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::WaitForDisposeEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!:WDFIOTARGET %10!p!, Request %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::RemoveCompletedRequestLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!:WDFIOTARGET %10!p!, Request %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Request %10!p! completed in completion routine" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Target %10!p!, setting stop event %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFREQUEST %10!p! already sent to a target" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Request %10!p!, could not create timer, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0ignoring WDFIOTARGET %10!p! state, sending request %11!p!, state %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0failing request %10!p!, target %11!p! not accepting requests, state %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Pending request %10!p!, target %11!p! is paused, %12!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Starting timer on request %10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Target %10!p!, Request %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0Failed to allocate wait event for sync request, Target %10!p!, Request %11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0action 0x%10!x!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitSync
{
Arg, ItemLong -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Sending request %10!p!, Irp %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Target %10!p!, Request %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::TimerCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0%!FUNC!:WDFIOTARGET %10!p!, Request %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Request %10!p! completed in completion routine" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Target %10!p!, setting stop event %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0Request %10!p! completed in from cancel" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::CompleteCanceledRequest
{
Arg, ItemPtr -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0Target %10!p!, setting stop event %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::CompleteCanceledRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0unable to allocate request context returning, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfIoTarget::_FormatIoRequest
{
Arg, ItemHRESULT -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0unable to allocate request context returning, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::_FormatIoctlRequest
{
Arg, ItemHRESULT -- 10
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0WDFIOTARGET %10!p!, setting Dispose event %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoTarget::DecrementIoCount
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

94bfa858-11a6-377a-b9bc-c5243af51dc6 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0unable to allocate request context returning, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfIoTarget::_FormatGetSetInformationRequest
{
Arg, ItemHRESULT -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not initialize QueryInterfaceLock for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not initialize DeviceInterfaceLock for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not initialize cleanup event for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not initialize remove event for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! type %13!s! IRP 0x%14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemEnum(_DEVICE_RELATION_TYPE) -- 13
Arg, ItemPtr -- 14
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p! for %14!s! (S%15!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
Arg, ItemEnum(_SYSTEM_POWER_STATE) -- 14
Arg, ItemLong -- 15
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p! for %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 14
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFDEVICE %10!p!, returning %11!s! from processing bus relations" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFDEVICE %10!p! returning %11!d! devices in relations %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0PDO %10!p! PDO %11!p! PDO %12!p! PDO %13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0PDO %10!p! PDO %11!p! PDO %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0PDO %10!p! PDO %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0PDO %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0PnP State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Power State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0Power Policy State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFDEVICE %10!p!, !devobj %11!p! processing delayed deletion from pnp state machine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ProcessDelayedDeletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0WDFDEVICE %10!p! could not allocate IRP to send QI to parent !devobj %11!p!, %12!s!" //   GLOBALS=FxDeviceToMx::GetDriverGlobals(Device) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=PnpPassThroughQI
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pnp state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr pol state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for device power requirement state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for remove event to finish processing" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PnpRemoveDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Received wait wake power irp %10!p! on device %11!p!, but the irp was not requested by the device (the power policy owner)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0Failing wait wake irp %10!p! with %11!s! because wait wake irp %12!p! already pended" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemPtr -- 12
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0wait wake irp %10!p! already canceled" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0already have a ww irp %10!p!, failing new ww irp %11!p! with %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0DeviceWake power state reported in device capabilities %10!s! indicates that device can not signal a wake event, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0DxState specified by driver %10!s! cannot be lighter than lightest available device wake state %11!s!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
Arg, ItemNTSTATUS -- 12
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0DxState specified by driver %10!s! cannot be lighter than PowerDeviceD2 for USB selective suspend %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0Failed to initialize USB selective suspend %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 51 "%0Driver turned off S0Idle optimization. Device will be powered up on resume from Sx even when it is idle" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0Driver turned on S0Idle optimization. Device will remain powered off if idle when resuming from Sx" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 53 "%0Invalid tri-state value for ExcludeD3Cold %10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemLong -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 55 "%0DeviceWake power state reported in device capabilities %10!s! indicates that device can not signal a wake event, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0DxState specified by driver %10!s! cannot be lighter than lightest available device wake state %11!s!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
Arg, ItemNTSTATUS -- 12
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0failing system query power because the device cannot wake the machine from S%10!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyHandleSystemQueryPower
{
Arg, ItemLong -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0Entering DeviceUsageNotification handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0type %10!x!, in path %11!x!, can support paging %12!x!, dump file %13!x!, hiber file %14!x!, boot file %15!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemLong -- 15
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0Usage type %10!x! not supported, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 65 "%0Exit %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemNTSTATUS -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 70 "%0A new state changing pnp irp %10!s! IRP %11!p! arrived while another pnp irp %12!s! IRP %13!p! is still pending WDFDEVICE %14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SetPendingPnpIrp
{
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 71 "%0Could not initialize PowerStateLock for enum info for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateEnumInfo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 72 "%0Could not allocate enum info for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateEnumInfo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 75 "%0The driver failed to return from a callback routine in a reasonable period of time.  This prevented the machine from going to sleep or from hibernating.  The machine crashed because that was the best way to get data about the cause of the crash into a minidump file." //   GLOBALS=FxDeviceToMx::GetDriverGlobals(pDevice) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWatchdog::_WatchdogDpc
{
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 76 "%0Not saving wake settings for WDFDEVICE %10!p! due to system power transition" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::SaveState
{
Arg, ItemPtr -- 10
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 77 "%0WDFINTERRUPT %10!p! failed to connect, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsD0
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 78 "%0WDFINTERRUPT %10!p! failed to disconnect, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsDx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a2bb160c-0b37-334f-ea89-706346919cbf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 84 "%0SystemWake %10!s! and DeviceWake %11!s! power state reported in device capabilities do not support wake. Both the SystemWake and DeviceWake members should be nonzero to support wake-up on this system." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyGetDeviceDeepestDeviceWakeState
{
Arg, ItemEnum(_SYSTEM_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Invalid Allocation Size of 0 requested" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Allocation Fail Count exceeded" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0overflow: allocation tracker (%10!d!) + header (%11!d!) + pool request (%12!I64d!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0overflow: header + pool request (%10!I64d!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
Arg, ItemLongLong -- 10
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0FxPoolDump: NonPagedBytes %10!I64d!, PagedBytes %11!I64d!, NonPagedAllocations %12!d!, PagedAllocations %13!d!,PeakNonPagedBytes %14!I64d!, PeakPagedBytes %15!I64d!,FxPoolDump: PeakNonPagedAllocations %16!d!, PeakPagedAllocations %17!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Arg, ItemLongLong -- 10
Arg, ItemLongLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLongLong -- 14
Arg, ItemLongLong -- 15
Arg, ItemLong -- 16
Arg, ItemLong -- 17
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0FX_POOL 0x%10!p! leaked paged memory alloc 0x%11!p! (tracking block %12!p!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0FX_POOL 0x%10!p! leaked non-paged memory alloc 0x%11!p! (tracking block %12!p!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Initializing Pool 0x%10!p!, Tracking %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxPoolInitialize
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Initializing non-paged lock failed for Pool 0x%10!p!, status %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolInitialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Initializing paged lock failed for Pool 0x%10!p!, status %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolInitialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

a379bc20-ef3c-3ede-589e-d9c96efa2573 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Destroying Pool 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxPoolDestroy
{
Arg, ItemPtr -- 10
}

a39931f8-7035-3e6e-2a8b-9639ef273351 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for CWdfWorkItem object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_WORKITEM FUNC=CWdfWorkItem::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

a39931f8-7035-3e6e-2a8b-9639ef273351 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfWorkItem creation failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_WORKITEM FUNC=CWdfWorkItem::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

a39931f8-7035-3e6e-2a8b-9639ef273351 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WorkItem object created, IWDFWorkItem: %10!p!, Fx object: %11!p!, WDFOBJECT %12!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_WORKITEM FUNC=CWdfWorkItem::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

a39931f8-7035-3e6e-2a8b-9639ef273351 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WorkItem destroyed without calling WdfDeleteObject. Possible reference count problem?" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_WORKITEM FUNC=CWdfWorkItem::~CWdfWorkItem
{
}

a39931f8-7035-3e6e-2a8b-9639ef273351 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Workitem allocation failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_WORKITEM FUNC=CWdfWorkItem::Initialize
{
Arg, ItemHRESULT -- 10
}

a39931f8-7035-3e6e-2a8b-9639ef273351 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: WorkItem 0x%10!p! has been deleted" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_WORKITEM FUNC=CWdfWorkItem::Enqueue
{
Arg, ItemPtr -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for CWdfCmResourceList object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfCmResourceList::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfCmResourceList creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfCmResourceList::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0CmResourceList object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfCmResourceList::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Failed to initialize CmResourceList lock %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfCmResourceList::Initialize
{
Arg, ItemHRESULT -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Resource Descriptor not found %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfCmResourceList::BuildRegisterResourceTable
{
Arg, ItemHRESULT -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: Failed to allocate memory for resource table %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfCmResourceList::BuildRegisterResourceTable
{
Arg, ItemHRESULT -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: Resource Descriptor not found %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfCmResourceList::BuildRegisterResourceTable
{
Arg, ItemHRESULT -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: Resource Descriptor not found %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfCmResourceList::BuildPortResourceTable
{
Arg, ItemHRESULT -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: Failed to allocate memory for resource table %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfCmResourceList::BuildPortResourceTable
{
Arg, ItemHRESULT -- 10
}

aa672415-e304-3989-2a6a-7663b8163ef4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: Resource Descriptor not found %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DEVICE FUNC=CWdfCmResourceList::BuildPortResourceTable
{
Arg, ItemHRESULT -- 10
}

b1ba378b-861f-34f2-f3ac-639fa0718ca5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Handle %10!s! %11!p! (raw object %12!p!) was freed using WdfObjectDereference(), not WdfObjectDelete()" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGOBJECT FUNC=FxObject::~FxObject
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxInterrupt creation failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfInterrupt creation failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Interrupt object created, IWDFInterrupt: %10!p!, Fx object: %11!p!, WDFOBJECT %12!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: WDF_INTERRUPT_INFO Size %10!d! invalid, expected %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::GetInfo
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Policy %10!d! is out of range" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::SetPolicy
{
Arg, ItemLong -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: Priority %10!d! is out of range" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::SetPolicy
{
Arg, ItemLong -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: WDF_INTERRUPT_EXTENDED_POLICY %10!p! Size %11!d! invalid,expected %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::SetExtendedPolicy
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: Policy %10!d! is out of range" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::SetExtendedPolicy
{
Arg, ItemLong -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: Priority %10!d! is out of range" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::SetExtendedPolicy
{
Arg, ItemLong -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: TargetProcessorSet's reserved fields are not zero" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::SetExtendedPolicy
{
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!: Driver called QueueWorkItemForIsr DDI without providing OnInterruptWorkItem callback. %10!s! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::QueueWorkItemForIsr
{
Arg, ItemHRESULT -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!: OnInterruptEnable callback returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::_EvtInterruptEnable
{
Arg, ItemHRESULT -- 10
}

b46da252-300f-3f45-3c4e-d407583ed1e7 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: OnInterruptDisable callback returned failure %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INTERRUPT FUNC=CWdfInterrupt::_EvtInterruptDisable
{
Arg, ItemHRESULT -- 10
}

b5c4793a-2be4-30fd-72a8-2118a7e3b85b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0CWudfOneShotTimer Allocation failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWudfOneShotTimer::CreateAndInitialize
{
}

b5c4793a-2be4-30fd-72a8-2118a7e3b85b WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0CreateTimerQueueTimer Allocation failed, error %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWudfOneShotTimer::Initialize
{
Arg, ItemWINERROR -- 10
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE %10!p! idle (in D0) not sending io present event (already sent)" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::TimedOutIoIncrement
{
Arg, ItemPtr -- 10
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE %10!p! idle (in Dx) not sending io present event (already sent)" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::InDxIoIncrement
{
Arg, ItemPtr -- 10
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE %10!p! in thread %11!p! waiting synchronously for Dx to D0 transition" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of power failure, %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of invalid state , %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! The device is being power-dereferenced without a matching power-reference. This could occur if driver incorrectly calls WdfDeviceResumeIdle without a matching call to WdfDeviceStopIdle." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::IoDecrement
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! power idle state %12!s! dropping event %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::ProcessEventLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleEvents) -- 13
}

b8a80794-2d07-3b1b-0640-bcb8d58cfc48 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: pValue is NULL while cbDataLen is %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::RegistryValueToPropVariant
{
Arg, ItemLong -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: StringCchLength failed with hr = %10!s! data in the registy may be missing NULL terminator" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::RegistryValueToPropVariant
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::RegistryValueToPropVariant
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: StringCchCopy failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::RegistryValueToPropVariant
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: Unrecognized registry data type %10!d! converting to BLOB" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::RegistryValueToPropVariant
{
Arg, ItemLong -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::RegistryValueToPropVariant
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: StringCchLength failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::PropVariantToRegistryValue
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!: StringCchLengthA failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::PropVariantToRegistryValue
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!: Data length 0x%10!I64x! is longer than MAX_INT" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::PropVariantToRegistryValue
{
Arg, ItemLongLongX -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::PropVariantToRegistryValue
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::PropVariantToRegistryValue
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0%!FUNC!: Unsupported variant type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::PropVariantToRegistryValue
{
Arg, ItemLong -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: cbDataLen is non-zero but pwszExpandSz is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::ExpandSzToWstr
{
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0%!FUNC!: ppwszValue is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::ExpandSzToWstr
{
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::ExpandSzToWstr
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0%!FUNC!: Registry value expansion failed for value %10!s!, hr = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::ExpandSzToWstr
{
Arg, ItemWString -- 10
Arg, ItemHRESULT -- 11
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0%!FUNC!: StringCchLength failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::ExpandSzToWstr
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::ExpandSzToWstr
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0%!FUNC!: StringCchCopy failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::ExpandSzToWstr
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0%!FUNC!: arg pwszMultiSz is NULL while cbDataLen is %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
Arg, ItemLong -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0%!FUNC!: OUT args are not non-NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0%!FUNC!: Data is not WCHAR aligned" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0%!FUNC!: StringCchLength failed for %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
Arg, ItemWString -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0%!FUNC!: StringCchCopy failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0%!FUNC!: CWdfDynamicArray<LPWSTR>::Add failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0%!FUNC!: Number of elements is too high %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
Arg, ItemLong -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::MultiSzToWstrArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0%!FUNC!: SizeTToInt failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrToByteArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0%!FUNC!: SizeTToInt failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrToByteArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrToByteArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0%!FUNC!: StringCchCopy failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrToByteArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::NumberToByteArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0%!FUNC!: string array is NULL while count is non-zero: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrArrayToByteArray
{
Arg, ItemLong -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0%!FUNC!: StringCchLength failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrArrayToByteArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0%!FUNC!: Data length 0x%10!I64x! is longer than MAX_INT" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrArrayToByteArray
{
Arg, ItemLongLongX -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrArrayToByteArray
{
Arg, ItemHRESULT -- 10
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0%!FUNC!: StringCchCopy failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrArrayToByteArray
{
}

be90f9d6-aa9f-3896-e555-519a3ed48c0d WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0%!FUNC!: StringCchLength failed with hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfUtilRegPropVariantConv::WstrArrayToByteArray
{
Arg, ItemHRESULT -- 10
}

c54c326f-8ed1-30e6-0393-347a1fb9bcfe WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for UsbTargetDevice object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbTargetDevice::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

c54c326f-8ed1-30e6-0393-347a1fb9bcfe WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfUsbTargetDevice creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbTargetDevice::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

c54c326f-8ed1-30e6-0393-347a1fb9bcfe WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0UsbTargetDevice object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfUsbTargetDevice::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

c54c326f-8ed1-30e6-0393-347a1fb9bcfe WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0unable to allocate USB device control context returning, error = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetDevice::FormatControlRequest
{
Arg, ItemHRESULT -- 10
}

c54c326f-8ed1-30e6-0393-347a1fb9bcfe WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0failed to retrieve config descriptor for config %10!d!, error = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_USB_IOTARGET FUNC=CWdfUsbTargetDevice::RetrieveNumInterfaces
{
Arg, ItemLong -- 10
Arg, ItemHRESULT -- 11
}

c55b5c67-395a-3e17-1768-8091621bea1c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxUserObject::_Create
{
}

c55b5c67-395a-3e17-1768-8091621bea1c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0FxObject::Commit failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxUserObject::_Create
{
Arg, ItemNTSTATUS -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for RemoteTarget object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfRemoteTarget::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfRemoteTarget creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfRemoteTarget::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0RemoteTarget object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfRemoteTarget::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0CreateFile() failed, returning hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OpenTargetHandle
{
Arg, ItemHRESULT -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0OnRemoteTargetQueryRemove() !wudfiotarget 0x%10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnQueryRemove
{
Arg, ItemPtr -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0QueryRemove callback was for an old registration, ignoring." //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnQueryRemove
{
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0OnRemoveCanceled() !wudfiotarget 0x%10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnRemoveCanceled
{
Arg, ItemPtr -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0QueryRemoveCanceled callback was for an old registration, ignoring." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnRemoveCanceled
{
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0OnRemoveComplete() !wudfiotarget 0x%10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnRemoveComplete
{
Arg, ItemPtr -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0QueryRemoveComplete callback was for an old registration, ignoring." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnRemoveComplete
{
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0OnCustomEvent(%10!s!) !wudfiotarget 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnCustomEvent
{
Arg, ItemGuid -- 10
Arg, ItemPtr -- 11
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0CustomEvent callback was for an old registration, ignoring." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OnCustomEvent
{
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0OpenRemoteInterface(...) !wudfiotarget 0x%10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OpenRemoteInterface
{
Arg, ItemPtr -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Unable to allocate memory for file name string, returning hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OpenRemoteInterface
{
Arg, ItemHRESULT -- 10
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0OpenFileByName('%10!s!') !wudfiotarget 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OpenFileByName
{
Arg, ItemWString -- 10
Arg, ItemPtr -- 11
}

cb17b97b-a399-3da6-2ac9-314db01d6e4a WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Unable to allocate memory for file name string, returning hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REMOTE_IOTARGET FUNC=CWdfRemoteTarget::OpenFileByName
{
Arg, ItemHRESULT -- 10
}

cc5fe8a0-e203-36ab-6241-7176d088c06f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: NULL is an invalid paramater" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDeviceInit::RetrieveDevicePropertyStore
{
}

cc5fe8a0-e203-36ab-6241-7176d088c06f WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: RetrievalMode %10!d! ReadWriteMode %11!d! IoctlMode %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfDeviceInit::SetIoTypePreference
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

cf5c4968-c842-3243-0e37-d77c896f0732 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current device power requirement state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevicePwrRequirementMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementEvents) -- 13
}

cf5c4968-c842-3243-0e37-d77c896f0732 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! device power requirement state %12!s! dropping event %13!s!" //   GLOBALS=m_PoxInterface->PkgPnp()->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevicePwrRequirementMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementEvents) -- 13
}

cf5c4968-c842-3243-0e37-d77c896f0732 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering device power requirement state %12!s! from %13!s!" //   GLOBALS=m_PoxInterface->PkgPnp()->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxDevicePwrRequirementMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 13
}

d07f22c1-6595-3892-bd4a-866ea1785b7e WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!:Invalid tag context, 0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfRequestQueue::GetNextRequest
{
Arg, ItemPtr -- 10
}

d07f22c1-6595-3892-bd4a-866ea1785b7e WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Request obj 0x%10!p! on RequestQueue 0x%11!p! cancelled" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfRequestQueue::CancelRoutineInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

d205097f-65d5-32c2-0bd2-fc5d741a630b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Initializing lock failed for EventQueue 0x%10!p!, status %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxEventQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

d205097f-65d5-32c2-0bd2-fc5d741a630b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Initializing state machine lock failed for EventQueue 0x%10!p!, status %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxEventQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

d205097f-65d5-32c2-0bd2-fc5d741a630b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! delaying deletion to outside state machine" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxEventQueue::SetDelayedDeletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

d205097f-65d5-32c2-0bd2-fc5d741a630b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! not queueing work item to process event queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxEventQueue::QueueToThreadWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

d79f3f70-b395-3a99-9279-3b34e7a9cf31 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0For PDOs, FxPkgPnp::PowerPolicyUpdateSystemWakeSource should NOT be a no-op!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyUpdateSystemWakeSource
{
}

d79f3f70-b395-3a99-9279-3b34e7a9cf31 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Entering USB Selective Suspend Idle callback" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxUsbIdleInfo::_UsbIdleCallback
{
}

d79f3f70-b395-3a99-9279-3b34e7a9cf31 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0USB Selective Suspend Idle callback processing is complete" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerPolicyMachine::UsbSSCallbackProcessingComplete
{
}

de897855-b13b-3647-70fa-e7b046796c9b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0AllocatedTagTrackersLock initialization failed: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxDriverGlobalsInitializeDebugExtension
{
Arg, ItemNTSTATUS -- 10
}

de897855-b13b-3647-70fa-e7b046796c9b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Initialize globals for %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxInitialize
{
Arg, ItemPWString -- 10
}

e35ce542-5693-3c98-6f4b-02ac0e173c81 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}

e35ce542-5693-3c98-6f4b-02ac0e173c81 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::TraceDroppedEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectDroppedEvent) -- 13
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed: %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgFdo::_Create
{
Arg, ItemNTSTATUS -- 10
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Entering QueryDeviceRelations handler, type %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryDeviceRelations
{
Arg, ItemEnum(_DEVICE_RELATION_TYPE) -- 10
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Exiting QueryDeviceRelations handler, status %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryDeviceRelations
{
Arg, ItemNTSTATUS -- 10
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Entering QueryInterface handler" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface
{
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Exiting QueryInterface handler, %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface
{
Arg, ItemNTSTATUS -- 10
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Entering QueryCapabilities handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilities
{
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Exiting QueryCapabilities handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilities
{
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Entering QueryCapabilities completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion
{
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Exiting QueryCapabilities completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion
{
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Entering QueryPnpDeviceState completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! returning PNP_DEVICE_STATE 0x%12!d! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Exiting QueryPnpDeviceState completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0PNP start preprocessing failed with %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpSendStartDeviceDownTheStackOverload
{
Arg, ItemNTSTATUS -- 10
}

e472873f-9df2-34ec-d8d0-834f0a959dd7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0PNP start failed with %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpStartDeviceCompletionRoutine
{
Arg, ItemNTSTATUS -- 10
}

e4b85d0e-f137-3880-60c8-ba7a30429b66 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0FxIFR logging started" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxIFRStart
{
}

e4b85d0e-f137-3880-60c8-ba7a30429b66 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0FxIFR has been started with a size override:  size 0x%10!x! bytes, # Pages %11!d!.  An extended IFR size may not be written to a minidump!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxIFRStart
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

e6ba5e03-e7d8-34e5-c70f-06635d1b4016 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Self managed I/O state machine allocation failed for WDFDEVICE 0x%10!p!" //   GLOBALS=PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::_CreateAndInit
{
Arg, ItemPtr -- 10
}

e6ba5e03-e7d8-34e5-c70f-06635d1b4016 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Self managed I/O state machine lock initialization failed for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::_CreateAndInit
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

e6ba5e03-e7d8-34e5-c70f-06635d1b4016 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering self managed io state %12!s! from %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxSelfManagedIoStates) -- 12
Arg, ItemEnum(FxSelfManagedIoStates) -- 13
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_OBJECT_ATTRIBUTES required, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributes
{
Arg, ItemNTSTATUS -- 10
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!, %14!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0ParentObject required in WDF_OBJECT_ATTRIBUTES %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Attributes %10!p! execution level set to %11!d!, out of range, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Attributes %10!p! synchronization scope set to %11!d!, out of range, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
Arg, ItemNTSTATUS -- 12
}

e733bfad-57be-3ff1-14a3-8abca9fa8088 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
Arg, ItemNTSTATUS -- 12
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: FxObject creation failed for Request object %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoRequest::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: CWdfIoRequest creation failed, returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoRequest::CreateAndInitialize
{
Arg, ItemHRESULT -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Request object created, Fx object: %10!p!, WDFOBJECT %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_OBJECT FUNC=CWdfIoRequest::CreateAndInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: Completing a cancelable request IWDFIoRequest 0x%10!p!. This can result in a race condition that causes double completion. Call IWDFIoRequest::UnMarkCancelable before IWDFIoRequest::Complete. If UmarkCancelable fails, do not complete request until OnCancel is invoked." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::CompleteWithInformation
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!:This type of request (0x%10!d!) have must information parameter set to zero" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_INIT FUNC=CWdfIoRequest::CompleteWithInformation
{
Arg, ItemLong -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Unknown WDF NTSTATUS 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::CompleteWithInformation
{
Arg, ItemLong -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0%!FUNC!: Cancel callback cannot be NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::MarkCancelable
{
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0%!FUNC!:WDFRequest 0x%10!p! doesn't belong to any queue" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::MarkCancelable
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0%!FUNC!:WDFRequest 0x%10!p! doesn't belong to any queue" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::UnmarkCancelable
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Invalid operation: The request 0x%10!p! doesn't belong any queue, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfIoRequest::ForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Invalid parameter: The supplied destination queue (IWDFIoQueue:0x%10!p!) cannot be NULL, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfIoRequest::ForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Invalid parameter: The supplied destination queue 0x%10!p! is invalid, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfIoRequest::ForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: IoTarget %10!p!, Request %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoRequest::AsyncSend
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0action 0x%10!x!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoRequest::AsyncSend
{
Arg, ItemLong -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Sending request %10!p!, Irp %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IOTARGET FUNC=CWdfIoRequest::AsyncSend
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0INTERNAL_ERROR: Already in Queue 0x%10!p! CWdfRequest 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::InsertTailRequestQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Request 0x%10!p! already completed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::InsertTailRequestQueue
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0INTERNAL_ERROR: Already in Queue 0x%10!p! CWdfRequest 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::InsertHeadRequestQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Request 0x%10!p! already completed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::InsertHeadRequestQueue
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Request 0x%10!p! has already been completed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_REQUEST FUNC=CWdfIoRequest::SetCompletionEvent
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0%!FUNC!: Host canceling request(0x%10!p!) ID:0%11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::_CancelRoutine
{
Arg, ItemPtr -- 10
Arg, ItemLongLongX -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0CWdfIoRequest 0x%10!p! not on CWdfRequestQueue 0x%11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::RemoveFromRequestQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0Request %10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::CancelSentRequest
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Request %10!p!, PIRP %11!p!, cancel result %12!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::CancelSentRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Request %10!p!, PIRP %11!p!, completed synchronously in cancel call, completing request on target %12!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::CancelSentRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0Could not cancel request %10!p!, already completed" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::CancelSentRequest
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0%!FUNC!: Could not impersonate, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::Impersonate
{
Arg, ItemHRESULT -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Invalid operation: IWDFIoRequest 0x%10!p! doesn't belong to queue, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_DDI FUNC=CWdfIoRequest::Requeue
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0%!FUNC!: IWDFIoRequest 0x%10!p! is not owned by the driver, , %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::VerifierVerifyRequestIsDriverOwned
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0IWDFIoRequest 0x%10!p! has been as a TagRequest in WdfIoQueuePeekNextRequest. A TagRequest can not be used until its been returned by WdfIoQueueRetrieveRequest." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::VerifierVerifyRequestIsDriverOwned
{
Arg, ItemPtr -- 10
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0%!FUNC!: IWDFIoRequest 0x%10!p! should be unmarked cancelable by calling IWDFRequest::UnmarkCancelable, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::VerifierVerifyRequestIsNotCancelable
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

e826bd88-ea99-3f5e-b7b8-0fef30eecfa9 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0%!FUNC!: This call is valid only in IQueueCallbackIoStop callback, IWDFIoRequest 0x%10!p!, %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_IO FUNC=CWdfIoRequest::VerifierVerifyRequestIsInIQueueCallbackIoStopContext
{
Arg, ItemPtr -- 10
Arg, ItemHRESULT -- 11
}

e846fe3d-6281-3873-6765-d36f539280f0 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_OBJECT FUNC=CWudfObjectEx::OnDispose
{
Arg, ItemPtr -- 10
}

e846fe3d-6281-3873-6765-d36f539280f0 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: Could not assign object context, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWudfObjectEx::AssignObjectContext
{
Arg, ItemHRESULT -- 10
}

e846fe3d-6281-3873-6765-d36f539280f0 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: NULL is an invalid input parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_OBJECT FUNC=CWudfObjectEx::RetrieveObjectContext
{
}

e872fc06-cd0c-32cf-458e-f8356bae36cd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed to allocate FxDevicePwrRequirementMachine. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e872fc06-cd0c-32cf-458e-f8356bae36cd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Device Power Requirement State Machine Initialize() failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e872fc06-cd0c-32cf-458e-f8356bae36cd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Device Power Requirement State Machine Init() failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e872fc06-cd0c-32cf-458e-f8356bae36cd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!  unable to allocate lock that guards device power requirement flag. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e872fc06-cd0c-32cf-458e-f8356bae36cd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! FxPox::_PoxRegisterDevice failed. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::InitializeComponents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Obtaining WDF_ROOT_SERVICE_KEY length failed, hr: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::_BuildDriverServiceKeyName
{
Arg, ItemHRESULT -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Obtaining total length of driver service key failed, potenitally driver name is too long. hr: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::_BuildDriverServiceKeyName
{
Arg, ItemHRESULT -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Obtaining total length of driver service key failed, potenitally driver name is too long. hr: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::_BuildDriverServiceKeyName
{
Arg, ItemHRESULT -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Allocation of driver name service key buffer failed hr: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::_BuildDriverServiceKeyName
{
Arg, ItemHRESULT -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0LibraryDriverEntry failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWudfDriverTable::_FxLibraryLoad
{
Arg, ItemNTSTATUS -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0FxDriverEntry failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::_FxDriverLoad
{
Arg, ItemNTSTATUS -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0FxInitialize failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::_FxDriverLoad
{
Arg, ItemNTSTATUS -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Device Stack not in list:0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWudfDriverTable::Remove
{
Arg, ItemPtr -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Global device stack table is empty:0x%10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_GENERAL FUNC=CWudfDriverTable::Remove
{
Arg, ItemPtr -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0%!FUNC!: Not able to create driver global object, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::Initialize
{
Arg, ItemHRESULT -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0%!FUNC!: Unable to create object tracker while tracking is enabled, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::Initialize
{
Arg, ItemHRESULT -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0%!FUNC!: Load driver failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=CWUDF::Initialize
{
Arg, ItemHRESULT -- 10
}

e9df93b0-9aa5-3c11-f0e8-36bc3d8246a4 WUDFx // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0%!FUNC!: IDriverEntry::OnInitialize invoked, %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FX_TRACE_PNP FUNC=CWUDF::Initialize
{
Arg, ItemHRESULT -- 10
}

eab96315-46c1-34bb-b547-5570a93e3924 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Invalid to call on WDFOBJECT 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectAcquireLock
{
Arg, ItemPtr -- 10
}

eab96315-46c1-34bb-b547-5570a93e3924 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Invalid to call on WDFOBJECT 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectReleaseLock
{
Arg, ItemPtr -- 10
}

eab96315-46c1-34bb-b547-5570a93e3924 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Attempt to Delete an Object Which does not allow WdfDeleteObject Handle 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectDelete
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

eb0d8003-f42e-33a8-f6eb-7c433ed2ed7b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0FxCmResList initialize failed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCmResList::Initialize
{
Arg, ItemNTSTATUS -- 10
}

eb0d8003-f42e-33a8-f6eb-7c433ed2ed7b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0UfxResourceObject creation failed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCmResList::Initialize
{
Arg, ItemNTSTATUS -- 10
}

ec870c0c-81ac-36af-af22-90a8b5100ca3 FxDeviceUm // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0%!FUNC!: Failed to set Registry value for S0Idle/SxWake error %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=UmToMx::WriteStateToRegistry
{
Arg, ItemLong -- 10
}

ec870c0c-81ac-36af-af22-90a8b5100ca3 FxDeviceUm // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0%!FUNC!: RegOpenKeyEx returned error %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RD_TRACE_PNP FUNC=UmToMx::ReadStateFromRegistry
{
Arg, ItemLong -- 10
}

ec870c0c-81ac-36af-af22-90a8b5100ca3 FxDeviceUm // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: failed to read registry, RegQueryValueEx returned error %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RD_TRACE_PNP FUNC=UmToMx::ReadStateFromRegistry
{
Arg, ItemLong -- 10
}

ec870c0c-81ac-36af-af22-90a8b5100ca3 FxDeviceUm // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0%!FUNC!: failed to send ioctl to update S0Idle wmi instance %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=UmToMx::UpdateWmiInstanceForS0Idle
{
Arg, ItemNTSTATUS -- 10
}

ec870c0c-81ac-36af-af22-90a8b5100ca3 FxDeviceUm // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0%!FUNC!: failed to send ioctl to update SxWake wmi instance %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FX_TRACE_PNP FUNC=UmToMx::UpdateWmiInstanceForSxWake
{
Arg, ItemNTSTATUS -- 10
}

faf6cefb-42ce-3c99-96e0-69dd6b886912 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Failed to allocate FxCmResList, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCmResList::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}

fef1d459-d9b2-32e6-78c4-8746e3eba60d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Unable to initialize paged lock for VerifierLock 0x%10!p! status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

fef1d459-d9b2-32e6-78c4-8746e3eba60d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Unable to initialize lock for VerifierLock 0x%10!p! status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

fef1d459-d9b2-32e6-78c4-8746e3eba60d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Failed to allocate verifier lock, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

fef1d459-d9b2-32e6-78c4-8746e3eba60d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Lock 0x%10!p! is being destroyed while owned by thread 0x%11!p!, Owning Object 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::~FxVerifierLock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

