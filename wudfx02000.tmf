00d75595-9017-30e0-9679-654650cc409c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Attempting to get context type %10!s! from WDFOBJECT 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=VfWdfObjectGetTypedContext
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}

00d75595-9017-30e0-9679-654650cc409c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Attributes %10!p! ContextTypeInfo is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=VfAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

00d75595-9017-30e0-9679-654650cc409c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFHANDLE %10!p! cannot have contexts added to it, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=VfAddContextToHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

00d75595-9017-30e0-9679-654650cc409c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFHANDLE %10!p! failed to add context, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=VfAddContextToHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

031aaa5c-6ae2-3059-f29b-4e8e59608153 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not initialize m_SentIoEvent event for WFIOTARGET %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::InitModeSpecific
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

031aaa5c-6ae2-3059-f29b-4e8e59608153 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not initialize m_DisposeEventUm event for WFIOTARGET %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::InitModeSpecific
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

031aaa5c-6ae2-3059-f29b-4e8e59608153 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0could not allocate context for request" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
}

031aaa5c-6ae2-3059-f29b-4e8e59608153 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not retrieve i/o buffer, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemNTSTATUS -- 10
}

031aaa5c-6ae2-3059-f29b-4e8e59608153 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Could not allocate context for request" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
}

031aaa5c-6ae2-3059-f29b-4e8e59608153 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Could not retrieve input buffer, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}

031aaa5c-6ae2-3059-f29b-4e8e59608153 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Could not retrieve output buffer, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}

037e8e90-60da-3bf8-7bd5-d36c748ad345 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFWORKITEM %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove.  Possible reference count problem?" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::~FxWorkItem
{
Arg, ItemPtr -- 10
}

037e8e90-60da-3bf8-7bd5-d36c748ad345 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not initialize m_WorkItemCompleted event %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Initialize
{
Arg, ItemNTSTATUS -- 10
}

037e8e90-60da-3bf8-7bd5-d36c748ad345 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0ParentObject %10!p! cannot automatically synchronize callbacks with a WorkItem since it is not configured for passive level callback constraints.  Use a WDFDPC instead or set AutomaticSerialization to FALSE.%11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

037e8e90-60da-3bf8-7bd5-d36c748ad345 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not allocate IoWorkItem, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Initialize
{
Arg, ItemNTSTATUS -- 10
}

037e8e90-60da-3bf8-7bd5-d36c748ad345 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Previously queued WDFWORKITEM 0x%10!p! is already pending. Ignoring the request to queue again" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Enqueue
{
Arg, ItemPtr -- 10
}

037e8e90-60da-3bf8-7bd5-d36c748ad345 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFWORKITEM 0x%10!p! is already deleted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Enqueue
{
Arg, ItemPtr -- 10
}

037e8e90-60da-3bf8-7bd5-d36c748ad345 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Calling WdfWorkItemFlush from within the WDFWORKITEM %10!p! callback will lead to deadlock, PRKTHREAD %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::FlushAndWait
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

044a194a-9b81-31b0-c6dc-2e08d69803b9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Insufficient query buffer size for file object query Required size %10!d!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObject::_ObjectQuery
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

044a194a-9b81-31b0-c6dc-2e08d69803b9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0NULL query buffer for file object query, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObject::_ObjectQuery
{
Arg, ItemNTSTATUS -- 10
}

044a194a-9b81-31b0-c6dc-2e08d69803b9 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Wrong struct version provided for file object query, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObject::_ObjectQuery
{
Arg, ItemNTSTATUS -- 10
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed: %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgFdo::_Create
{
Arg, ItemNTSTATUS -- 10
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Entering QueryDeviceRelations handler, type %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryDeviceRelations
{
Arg, ItemEnum(_DEVICE_RELATION_TYPE) -- 10
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Exiting QueryDeviceRelations handler, status %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryDeviceRelations
{
Arg, ItemNTSTATUS -- 10
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Entering QueryInterface handler" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface
{
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Exiting QueryInterface handler, %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface
{
Arg, ItemNTSTATUS -- 10
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Entering QueryCapabilities handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilities
{
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Exiting QueryCapabilities handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilities
{
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Entering QueryCapabilities completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion
{
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Exiting QueryCapabilities completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion
{
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Entering QueryPnpDeviceState completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! returning PNP_DEVICE_STATE 0x%12!d! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Exiting QueryPnpDeviceState completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0PNP start preprocessing failed with %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpSendStartDeviceDownTheStackOverload
{
Arg, ItemNTSTATUS -- 10
}

0550ea83-d604-33af-c6ff-96363f32cb42 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0PNP start failed with %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpStartDeviceCompletionRoutine
{
Arg, ItemNTSTATUS -- 10
}

078ac936-05a0-3142-5660-fdd635602512 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0For PDOs, FxPkgPnp::PowerPolicyUpdateSystemWakeSource should NOT be a no-op!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyUpdateSystemWakeSource
{
}

078ac936-05a0-3142-5660-fdd635602512 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Entering USB Selective Suspend Idle callback" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxUsbIdleInfo::_UsbIdleCallback
{
}

078ac936-05a0-3142-5660-fdd635602512 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0USB Selective Suspend Idle callback processing is complete" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerPolicyMachine::UsbSSCallbackProcessingComplete
{
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0ReuseParams Size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestReuse
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0ReuseParams Flags 0x%10!x!, valid mask 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestReuse
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0This call is not valid on the Read request, you should call WdfRequestRetrieveOutputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0This call is not valid on the Write request, you should call WdfRequestRetrieveInputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0This call is not valid on the read request, you should call WdfRequestRetrieveOutputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFREQUEST 0x%10!p! buffer size %11!I64d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0This call is not valid on write request, you should call WdfRequestRetrieveInputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFREQUEST 0x%10!p! buffer size %11!I64d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0WDFREQUEST %10!p! must be a WDFQUEUE presented request" //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0Cannot send-and-forget WDFREQUEST 0x%10!p! with formatted IO context, %11!s!" //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0WDFREQUEST %10!p! is a WDFQUEUE presented request with no completion routine, %11!s!" //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0Enter: WDFREQUEST %10!p! to be cancelled" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCancelSentRequest
{
Arg, ItemPtr -- 10
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0Params size %10!d! incorrect, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetParameters
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0Params Size 0x%10!x!, expected 0x%11!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetCompletionParams
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 63 "%0GetFileobject failed with %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetFileObject
{
Arg, ItemNTSTATUS -- 10
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 69 "%0WDFREQUEST %10!p! doesn't belong to any queue" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetIoQueue
{
Arg, ItemPtr -- 10
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 70 "%0Getting queue handle for Create request is not allowed for WDFREQUEST 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfRequestGetIoQueue
{
Arg, ItemPtr -- 10
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 71 "%0WDFREQUEST %10!p! doesn't belong to any queue, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=Vf_VerifyWdfRequestForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 77 "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRequeue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 79 "%0WDFREQUEST %10!p! doesn't belong to any queue" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestMarkCancelable
{
Arg, ItemPtr -- 10
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 81 "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestMarkCancelableEx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0b649730-46a2-3b48-8640-ec697d187e67 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 83 "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestUnmarkCancelable
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

0e1ed6f3-095d-3790-a443-f6a3fd578d99 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Failed to allocate FxCmResList, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCmResList::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}

0ee8ff30-800b-32d8-005d-321997e59ac3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not allocate FxCxPnpPowerCallbackContext" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPrePostCallback::_InitializeContext
{
}

10e09c12-a727-39a1-5677-3d6d8b592850 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0CompanionEventCallbacks size %10!d! is invalid, exptected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetCompanionEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

11a3540d-6fc9-3ec5-271c-447c52368496 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_WORKITEM_CONFIG Size got %10!d!, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

11a3540d-6fc9-3ec5-271c-447c52368496 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Supplied EvtWorkItemFunc == NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate
{
Arg, ItemNTSTATUS -- 10
}

1243e71b-ac97-340d-b4c3-c0e5eeca1741 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Send WDFIOTARGET %10!p!, No Dispatch Queue Found for Major Function %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSelf::Send
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

1243e71b-ac97-340d-b4c3-c0e5eeca1741 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Only Read/Write/Control/Internal-Control IRPs can be forwarded to Self IO Target 0x%10!p!, %11!s!, IRP_MN %12!x!, Device 0x%13!p!, %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSelf::Send
{
Arg, ItemPtr -- 10
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Driver is trying to delete WDFREQUEST 0x%10!p! while it is still active on WDFIOTARGET 0x%11!p!." //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequestBase::Vf_VerifyDispose
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Request %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Request %10!p!, PIRP %11!p!, cancel result %12!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Request %10!p!, PIRP %11!p!, completed synchronously in cancel call, completing request on target %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Could not cancel request %10!p!, already completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Failed to initialize timer for request %10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequestBase::CreateTimer
{
Arg, ItemPtr -- 10
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Request %10!p!, did not cancel timer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer
{
Arg, ItemPtr -- 10
}

1322fadf-55ca-3cd2-5935-9a9bfbe98f4f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Request %10!p!, canceled timer successfully" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer
{
Arg, ItemPtr -- 10
}

13e3ac92-25e6-3113-9ae4-e4f26a0ad55c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Recursive acquire of callback lock! 0x%10!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxCallbackSpinLock::Lock
{
Arg, ItemPtr -- 10
}

1b0169b7-5945-3c7a-0604-661e6d4e2e1e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failure. Cannot create Dispatcher object." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxMessageDispatch::_CreateAndInitialize
{
}

1b2ff959-117d-3034-ca6e-a068ec87a269 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not open '%10!s!' service parameters key with access rights 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Arg, ItemString -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

1b2ff959-117d-3034-ca6e-a068ec87a269 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not open '%10!s!' service parameters key with access rights 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Arg, ItemString -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

1c05f193-c53d-32a9-4362-9f15057c2b36 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Initializing state machine lock failed for EventQueue 0x%10!p!, status %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxEventQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

1c05f193-c53d-32a9-4362-9f15057c2b36 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! delaying deletion to outside state machine" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxEventQueue::SetDelayedDeletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

1c05f193-c53d-32a9-4362-9f15057c2b36 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! not queueing work item to process event queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxEventQueue::QueueToThreadWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

1fe4f752-86de-3382-741b-b331c10520a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Self managed I/O state machine allocation failed for WDFDEVICE 0x%10!p!" //   GLOBALS=PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::_CreateAndInit
{
Arg, ItemPtr -- 10
}

1fe4f752-86de-3382-741b-b331c10520a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Self managed I/O state machine lock initialization failed for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::_CreateAndInit
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

1fe4f752-86de-3382-741b-b331c10520a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering self managed io state %12!s! from %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxSelfManagedIoStates) -- 12
Arg, ItemEnum(FxSelfManagedIoStates) -- 13
}

20b4b786-4a09-345b-900e-b6fc7fb10d12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Failed to allocate Resource table %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxRegisterResourceInfo::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}

20b4b786-4a09-345b-900e-b6fc7fb10d12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to allocate Resource table %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPortResourceInfo::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}

22650553-3600-3b00-46a0-a409e9e3a356 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failure. Cannot create Companion Dispatcher object." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCompanionDispatch::_CreateAndInitialize
{
}

22650553-3600-3b00-46a0-a409e9e3a356 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Cannot find TaskQueue with Id %10!u!, failing DispatchTask, WDFCOMPANION 0x%11!p!, %12!s!" //   GLOBALS=m_Companion->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCompanionDispatch::DispatchTask
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

22650553-3600-3b00-46a0-a409e9e3a356 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Failed to enqueue task into WDFTASKQUEUE 0x%10!p!, WDFCOMPANION 0x%11!p!, %12!s!" //   GLOBALS=m_Companion->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxCompanionDispatch::DispatchTask
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

242ce5df-4b4e-3d18-dbbf-5f1b362bf8ce um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Request %10!p!, waiting on event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

242ce5df-4b4e-3d18-dbbf-5f1b362bf8ce um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Request %10!p!, wait on event %11!p! done" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

242ce5df-4b4e-3d18-dbbf-5f1b362bf8ce um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0SyncRequest %10!p!, signaling event %11!p! on SelfDestruct" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::SelfDestruct
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

24bb5a4f-faf8-3439-e294-ae0b0e1a6870 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not allocate WDFSTRING handle, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfStringCreate
{
Arg, ItemNTSTATUS -- 10
}

24cbc9b0-fe3c-38a7-b993-9435e9c6cbe7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxWaitLock::_Create
{
Arg, ItemNTSTATUS -- 10
}

24cbc9b0-fe3c-38a7-b993-9435e9c6cbe7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0faield to initialize wait lock: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxWaitLock::_Create
{
Arg, ItemNTSTATUS -- 10
}

261375b1-a3f1-30ed-cbed-a05dae2e1b37 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}

261375b1-a3f1-30ed-cbed-a05dae2e1b37 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}

261375b1-a3f1-30ed-cbed-a05dae2e1b37 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Attributes %10!p! ContextTypeInfo is NULL, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=FxObjectAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

261375b1-a3f1-30ed-cbed-a05dae2e1b37 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFHANDLE %10!p! cannot have contexts added to it, %11!s!" //   GLOBALS=object->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=imp_WdfObjectAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

261375b1-a3f1-30ed-cbed-a05dae2e1b37 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Attempting to get context type %10!s! from WDFOBJECT 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=imp_WdfObjectGetTypedContextWorker
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0FxUsbDevice SubmitSync failed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SendSyncRequest
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to initialize FxSyncRequest" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SendSyncUmUrb
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0FxUsbDevice SubmitSync failed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SendSyncUmUrb
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Failed to initialize FxSyncRequest" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Failed to initialize second FxSyncRequest" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Failed to validate FxSyncRequest target" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Failed to validate second FxSyncRequest target" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Failed to OpenUSBCommunicationChannel with USB target" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Could not retrieve config descriptor size, config.wTotalLength %10!d! < sizeof(config descriptor) (%11!d!), %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Could not allocate %10!d! bytes for config descriptor, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Defective USB device reported two different config descriptor wTotalLength values: %10!d! and %11!d!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFUSBDEVICE %10!p!, Request %11!p!, setting target failed, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatStringRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Control transfer buffer is limited to 0xFFFF bytes in size, %10!I64d! requested" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemLongLong -- 10
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFUSBDEVICE %10!p!, Request %11!p!, setting target failed, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFUSBDEVICE %10!p! cannot be auto configured for a single interface since there are %11!d! interfaces on the device, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigSingle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting 0 for bInterfaceNumber %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigSingle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFUSBDEVICE %10!p! set AlternateSetting 0 for interface 0failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigSingle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting 0 for bInterfaceNumber %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFUSBDEVICE %10!p! set AlternateSetting 0 for bInterfaceNumber %11!d!failed, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting %11!d! for bInterfaceNumber %12!d!, returning %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0WDFUSBDEVICE %10!p! set AlternateSetting %11!d! for bInterfaceNumber %12!d!failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

28345cee-b5e7-3dba-42bb-218952269f4b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFUSBDEVICE %10!p! interface pairs set (%11!d!) is not equal to actual # of interfaces (%12!d!) reported by the device, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Invoke EvtCompanionAdd for %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDriver::AddCompanion
{
Arg, ItemString -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0EvtCompanionAdd created WDFCOMPANION %10!p! returned %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDriver::AddCompanion
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Driver did not create a %10!s! in EvtDriverAddDevice, status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxDriver::InvokeDeviceAdd
{
Arg, ItemString -- 10
Arg, ItemNTSTATUS -- 11
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Driver returned %10!s! without creating a %11!s!, converting to %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDriver::InvokeDeviceAdd
{
Arg, ItemNTSTATUS -- 10
Arg, ItemString -- 11
Arg, ItemNTSTATUS -- 12
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Enter AddDevice DevStack %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemPtr -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Registry key open failed for the PDO key, winerror %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemWINERROR -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Registry path string too long or badly formed path. Invalid configuration HRESULT %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Failed to allocate memory for Config path HRESULT %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Failed to copy the configuration path status %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Device Instance ID string too long or badly formed path. Invalid configuration %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Failed to allocate memory for DevInstanceID %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Unable to copy DevInstanceID %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Unable to determine KernelDeviceName length%10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Failed to allocate memory for KernelDeviceName %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Unable to copy kernel device name KernelDeviceName %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemHRESULT -- 10
}

28358791-9bcc-3511-0345-2bee30fb5c0e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Exit, status %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Unable to open driver's service key, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to allocate memory for image path string, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Failed to get Image name from service key, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0ERROR: string not terminated with NULL, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0ERROR: GetNameFromPath could not find a name, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0ERROR: size computation failed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0ERROR: ExAllocatePoolWithTag failed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}

2bd5a678-fa09-3f98-450e-9a8f2a7739f3 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0ERROR: failed to copy string buffer, HRESULT 0x%10!x!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

2c250bf5-ed2a-354a-4c36-48052b946d0d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Initialize globals for %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxInitialize
{
Arg, ItemPWString -- 10
}

2d2facb2-ecf0-3bc0-c5c3-f035365df421 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Interger overflow occured when duplicating string %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxDuplicateUnicodeString
{
Arg, ItemNTSTATUS -- 10
}

2d2facb2-ecf0-3bc0-c5c3-f035365df421 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to allocate memory when duplicating string %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxDuplicateUnicodeString
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Action %10!d! undefined or out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetStop
{
Arg, ItemLong -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Action %10!d! undefined or out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetPurge
{
Arg, ItemLong -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Expected non NULL TargetDeviceObject in OpenParams, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0The open type WdfIoTargetOpenUseExistingDevice is not supported in UMDF drivers. It is supported in KMDF drivers only, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0OpenParams %10!p! TargetFileObject is NULL but a state callback (query remove %11!p!, remove canceled %12!p!, remove complete %13!p!) was specified, %14!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Expected valid OpenParams TargetDeviceName string, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0The open type WdfIoTargetOpenLocalTargetByFile is not supported in KMDF drivers. It is supported in UMDF drivers only, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0The open type is WdfIoTargetOpenLocalTargetByFile but a state callback (query remove %10!p!, remove canceled %11!p!, remove complete %12!p!) was specified, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0OpenParams Type (%10!d!) incorrect, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFDEVICE 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetCreate
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0OpenParams size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0exit WDFIOTARGET 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetCloseForQueryRemove
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetClose
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetGetDevice
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0exit WDFIOTARGET 0x%10!p!, WDFDEVICE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetGetDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Failed to initialize FxSyncRequest for WDFIOTARGET 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, MJ code 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0invalid options, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0invalid input buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0could not format MJ 0x%10!x! request, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, MJ code 0x%12!x!, WDFMEMORY 0x%13!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0invalid memory offsets, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0exit WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0Failed to initialize FxSyncRequest for WDFIOTARGET 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, internal %13!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0invalid options, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0invalid input buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0invalid output buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0could not format IOCTL 0x%10!x! request, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, internal %13!d!, input WDFMEMORY 0x%14!p!, output WDFMEMORY 0x%15!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0Invalid input memory offsets, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0Invalid output memory offsets, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
Arg, ItemNTSTATUS -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0Exit WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0Input WDFQUEUE 0x%10!p! belongs to WDFDEVICE 0x%11!p!, but Self Io Target 0x%12!p! corresponds to the WDFDEVICE 0x%13!p!, %14!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0Queue cannot be configured for automatic dispatching after WdfControlDeviceFinishInitializingis called on the WDFDEVICE %10!p! is called %11!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0Queue cannot be configured for automatic dispatchingafter the WDFDEVICE %10!p! is started, %11!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 61 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileHandle
{
Arg, ItemPtr -- 10
}

2f15d14d-fdde-31c7-3dd0-4ea708dd7eb7 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 62 "%0exit WDFIOTARGET 0x%10!p!, WDM file handle 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileHandle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

2fd09799-7be9-3a8d-3487-6df35c3d1112 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Invalid to call on WDFOBJECT 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectAcquireLock
{
Arg, ItemPtr -- 10
}

2fd09799-7be9-3a8d-3487-6df35c3d1112 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Invalid to call on WDFOBJECT 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectReleaseLock
{
Arg, ItemPtr -- 10
}

2fd09799-7be9-3a8d-3487-6df35c3d1112 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Attempt to Delete an Object Which does not allow WdfDeleteObject Handle 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectDelete
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0ImpersonationLevel is not a valid level, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestImpersonate
{
Arg, ItemNTSTATUS -- 10
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0EvtRequestImpersonate must not be NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestImpersonate
{
Arg, ItemNTSTATUS -- 10
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestIsFromUserModeDriver
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestSetUserModeDriverInitiatedIo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetUserModeDriverInitiatedIo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestSetActivityId
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveActivityId
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFREQUEST 0x%10!p! Activity ID is not set for the request, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveActivityId
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

3241b92b-a4b9-3a75-41f7-2183cce48bf6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetEffectiveIoType
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

335e4948-c2a2-3d49-ca95-7dc1a7608d35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Reg value name %10!s!, DataLength %11!d!, Data buffer length is invalid, STATUS_OBJECT_TYPE_MISMATCH" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyMultiSzString
{
Arg, ItemPWString -- 10
Arg, ItemLong -- 11
}

335e4948-c2a2-3d49-ca95-7dc1a7608d35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Read value name %10!s!, DataLength %11!d!, Data buffer from registry does not have double NULL terminal chars, STATUS_OBJECT_TYPE_MISMATCH" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyMultiSzString
{
Arg, ItemPWString -- 10
Arg, ItemLong -- 11
}

43240924-18d8-3391-409f-904592ee0c92 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxTaskQueue::Create
{
Arg, ItemNTSTATUS -- 10
}

43240924-18d8-3391-409f-904592ee0c92 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDF_TASK_QUEUE_CONFIG.Size is invalid. Get %10!d!, expect %11!d!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxTaskQueue::Initialize
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

43240924-18d8-3391-409f-904592ee0c92 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Failed to create event, error: %10!s!, returning %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxTaskQueue::Initialize
{
Arg, ItemWINERROR -- 10
Arg, ItemNTSTATUS -- 11
}

43240924-18d8-3391-409f-904592ee0c92 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0EvtTaskExecuteSync cannot be NULL, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxTaskQueue::Initialize
{
Arg, ItemNTSTATUS -- 10
}

43240924-18d8-3391-409f-904592ee0c92 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Companion's task callback failed, returning %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxTaskQueue::DispathTaskSync
{
Arg, ItemNTSTATUS -- 10
}

43240924-18d8-3391-409f-904592ee0c92 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WaitForSingleObject failed, error: %10!s!, returning %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxTaskQueue::SequentialDispathTaskSync
{
Arg, ItemWINERROR -- 10
Arg, ItemLong -- 11
}

43240924-18d8-3391-409f-904592ee0c92 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0SetEvent failed, error: %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxTaskQueue::SequentialDispathTaskSync
{
Arg, ItemWINERROR -- 10
}

44d2ba0f-0b33-3dbc-a567-0b216b747037 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not allocate workitem: %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxUsbPipeContinuousReader::Config
{
Arg, ItemNTSTATUS -- 10
}

44d2ba0f-0b33-3dbc-a567-0b216b747037 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not initialize ReadCompletedEvent: %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::Config
{
Arg, ItemNTSTATUS -- 10
}

44d2ba0f-0b33-3dbc-a567-0b216b747037 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFUSBPIPE %10!p! not the right type, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

44d2ba0f-0b33-3dbc-a567-0b216b747037 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFUSBPIPE %10!p!, buffer size truncated, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

44d2ba0f-0b33-3dbc-a567-0b216b747037 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Pipe %10!p!, sending __in transaction on a __out endpoint" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
}

44d2ba0f-0b33-3dbc-a567-0b216b747037 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Pipe %10!p!, sending __out transaction on an __in endpoint" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
}

44d2ba0f-0b33-3dbc-a567-0b216b747037 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Must set EvtDeviceRemoveAddedResources if EvtDeviceFilterAddResourceRequirements (%10!p!) is set" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::FdoInitialize
{
Arg, ItemPtr -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Deleting !devobj %10!p!, WDFDEVICE %11!p!, attached to !devobj %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxDevice::Destroy
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Deleting !devobj %10!p!, WDFDEVICE %11!p!, attached to !devobj %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxDevice::DestructorInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Failed to open hw registry key to read hw access settings" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0invalid direct hardware access value in registry %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Failed to read direct hardware access value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0DirectHardwareAccess = %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Invalid Register Access mode value in registry %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Failed to read Register Access mode value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0RegisterAccessMode = %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Invalid File object Policy value in registry %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Failed to read File Object Policy value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0FileObjectPolicy = %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Invalid Fs Context Use Policy value in registry %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Failed to read Fs Context Use Policy value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0FsContextUsePolicy = %10!u!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceRegistrySettings
{
Arg, ItemLong -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFDEVICE %10!p! allocate buffer for symbolic name failed, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLinkW
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFDEVICE %10!p!  create symbolic link failed, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLinkW
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFDEVICE %10!p! failed to assign interface property, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::AssignProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Query for unified property buffer failed, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_QueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::FxValidateInterfacePropertyData
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFDEVICE %10!p! cannot assign interface property for an interface not yet registered with WDF, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::FxValidateInterfacePropertyData
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0Handle to hardware key not yet available" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Failed to open hw registry key to read hw access settings" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Failed to read kernel mode client policy value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0Failed to read file object policy value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0Failed to read method neither action value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Failed to read method neither action value in registry" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0Failed to allocate memory for string buffer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
}

49ddf7e1-b65c-395d-7201-feaf8a4b26cc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Failed to read Group id value from registry %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::RetrieveDeviceInfoRegistrySettings
{
Arg, ItemWINERROR -- 10
}

4ada2093-d7f9-3f31-46ae-4b758abd702d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxUserObject::_Create
{
}

4ada2093-d7f9-3f31-46ae-4b758abd702d um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0FxObject::Commit failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxUserObject::_Create
{
Arg, ItemNTSTATUS -- 10
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0This function can only be called by a WDF extension driver, Driver 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValiateCx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Invalid CxFileObjectConfig Size %10!d!, expected %11!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Invalid CxFileObjectConfig->AutoForwardCleanupClose value 0x%10!x!, expected WDF_TRI_STATE value" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Out of range CxFileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Invalid CxFileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Invalid Size in WDFCX_PNPPOWER_EVENT_CALLBACKS: %10!d!, expected %11!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePrePrepareHardwareFailedCleanup if EvtCxDevicePrePrepareHardware is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreD0EntryFailedCleanup if EvtCxDevicePreD0Entry is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreSelfManagedIoInitFailedCleanup if EvtCxDevicePreSelfManagedIoInit is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}

4b034620-c961-3345-c2b7-8069f61caff6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreSelfManagedIoRestartFailedCleanup if EvtCxDevicePreSelfManagedIoRestart is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}

4c694a0f-0e3a-3b88-6dce-893993129806 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Zero BufferSize not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCreatePreallocated
{
Arg, ItemNTSTATUS -- 10
}

4c694a0f-0e3a-3b88-6dce-893993129806 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Zero BufferSize not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryAssignBuffer
{
Arg, ItemNTSTATUS -- 10
}

4ce1b02d-c74b-3e11-201b-014f6f172c78 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDRIVER 0x%10!p!  couldn't allocate WDFCXDEVICE_INIT" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFCXDEVICE_INIT::_AllocateCxDeviceInit
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Attributes->ParentObject 0x%10!p! must have WDFDEVICE as an eventual ancestor, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Attributes->ParentObject 0x%10!p! ancestor is WDFDEVICE %11!p!, but not the same WDFDEVICE 0x%12!p! passed to WdfIoTargetCreate, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not allocate memory for target, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create
{
Arg, ItemNTSTATUS -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Commit failed for target, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create
{
Arg, ItemNTSTATUS -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Reopen only supported if the open type is WdfIoTargetOpenByName WDFIOTARGET %10!p! %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Could not allocate memory for target name for WDFIOTARGET %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Could not allocate memory for target name for WDFIOTARGET %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Opening WDFIOTARGET %10!p! which is removed, state %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Opening an already open WDFIOTARGET %10!p!, open state %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Opening WDFIOTARGET %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFIOTARGET %10!p!, could not register pnp notification, %11!s! not treated as an error" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFIOTARGET %10!p! could not transition to started state, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0enter:  WDFIOTARGET %10!p!, reason %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Closing WDFIOTARGET %10!p! which is opening, waiting on event %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Closing WDFIOTARGET %10!p!, reason:   delete" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Closing WDFIOTARGET %10!p!, reason:   query remove" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Closing WDFIOTARGET %10!p!, reason:   close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Closing WDFIOTARGET %10!p! which is not open" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFIOTARGET %10!p!:  fileobj %11!p!, devobj %12!p!, handle %13!p!, notify handle %14!I64d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemLongLong -- 14
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFIOTARGET %10!p!, waiting for stop to complete" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0WDFIOTARGET %10!p! derefing PDO %11!p! on close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFIOTARGET %10!p! derefing FileObj %11!p! on close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFIOTARGET %10!p! closing handle %11!p! on close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

4f5d6f4f-817d-32f5-547c-839f40e45d34 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0WDFIOTARGET %10!p! cleared pointers %11!p! state %12!s!, open state %13!d!, pdo %14!p!, fileobj %15!p!, handle %16!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::ClearTargetPointers
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
Arg, ItemPtr -- 16
}

557e5bb9-e10b-35f9-7e77-856861cde45e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Handle %10!s! %11!p! (raw object %12!p!) was freed using WdfObjectDereference(), not WdfObjectDelete()" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGOBJECT FUNC=FxObject::~FxObject
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

557e5bb9-e10b-35f9-7e77-856861cde45e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDF Verifier has detected an excessive number of allocated WDF objects. Investigate with !wdfDriverInfo <driverName> 0x41 or 0x50" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::Vf_VerifyLeakDetectionConsiderObject
{
}

557e5bb9-e10b-35f9-7e77-856861cde45e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDF Verifier found %10!u! objects allocated, limit=%11!u!, and the scaled limit=%12!u!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::Vf_VerifyLeakDetectionConsiderObject
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Couldn't create object FileObjectInfo, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::Initialize
{
Arg, ItemNTSTATUS -- 10
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Couldn't create object FileObjectInfo, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::Initialize
{
Arg, ItemNTSTATUS -- 10
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Driver 0x%10!p! - Device 0x%11!p! - synchronization scope: %12!s! should beWdfSynchronizationScopeNone, %13!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 12
Arg, ItemNTSTATUS -- 13
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WdfSynchronizationScopeQueue is not allowed on FileObject, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints
{
Arg, ItemNTSTATUS -- 10
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WdfSynchronizationScopeDevice or WdfSynchronizationScopeInheritFromParent allowed only if the parent WDFDEVICE 0x%10!p!, ExecutionLevel is passive, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Device 0x%10!p! - Driver 0x%11!p! - WdfFileObjectCanBeOptional (%12!d!) is not compatible with wdf extension Driver 0x%13!p! - WdfFileObjectCanBeOptional (%14!d!), %15!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureFileObjectClass
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemLong -- 14
Arg, ItemNTSTATUS -- 15
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Converting file object class for Driver 0x%10!p! - Device 0x%11!p!, from 0x%12!x! to 0x%13!x!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureFileObjectClass
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Unable to create an internal queue for creates for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::PostCreateDeviceInitialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Must have EvtIoDefault registered to receive WdfRequestTypeCreate requests for WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::ConfigureForwarding
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Another WDFQUEUE 0x%10!p! is already configured for auto dispatching create request, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::ConfigureForwarding
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! %12!s! IRP 0x%13!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgGeneral::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemPtr -- 13
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Exclusive WDFDEVICE 0x%10!p!, only one open handle is allowed" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Could not create WDFFILEOBJECT for WDFDEVICE 0x%10!p!, failing IRP_MJ_CREATE %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Couldn't allocate file object context 0x%10!p! for device 0x%11!p! - driver 0x%12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Could not create request for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Couldn't allocate request context for device 0x%10!p! - driver 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

58680ddd-6808-34c6-6393-4f9523a9f1c0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

5fa939ba-71cf-3caa-a095-da4b345f1829 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering not power policy owner state %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::NotPowerPolicyOwnerEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 13
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Waitblock creation failed for CWdfInterrupt object %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0failed to initialize interrupt %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeInternal
{
Arg, ItemNTSTATUS -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Multiple connection attempts for !WDFINTERRUPT 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::ConnectInternal
{
Arg, ItemPtr -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Connect message to reflector returned failure %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::ConnectInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Disconnect message to reflector returned failure %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::DisconnectInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0SetPolicy message to reflector returned failure %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::SetPolicyInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0ResetInterruptInfo message to reflector returned failure %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::ResetInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0RevokeResources message to reflector returned failure %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::RevokeResourcesInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0FlushQueuedDpcs message to reflector returned failure %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::FlushQueuedDpcs
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Failed to assign interrupt resource to interrupt objectbecause interrupt resource is for level-triggered interruptwhich is not supported on this platform. See the docs for info onsupported platforms. %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::AssignResourcesInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0The resource descriptor indicates that this is a shared edge-triggered interrupt. UMDF only supports sharing of level-triggered interrupts. Please check if your device firmware mistakenly declares this resource as shared instead of device exclusive. If the resource is in fact shared, then UMDF does not support this device." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxInterrupt::AssignResourcesInternal
{
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0AssignResources message to reflector returned failure %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::AssignResourcesInternal
{
Arg, ItemHRESULT -- 10
}

6687ff2a-eb64-3141-4a78-30f27a4f6d96 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0AcknowledgeInterrupt message to reflector returned failure. Check UMDF log for failure reason. %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::ThreadpoolWaitCallback
{
Arg, ItemHRESULT -- 10
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Thread 0x%10!p! already owns lock 0x%11!p! for object 0x%12!p!, WDFOBJECT 0x%13!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Lock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Thread 0x%10!p! Is Attempting to release a Lock 0x%11!p! for Object 0x%12!p! it does not own!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Unlock:  Can't get per thread entry for thread %10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Thread has entry, but no locks recorded as held for passive!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0this 0x%10!p!, perThreadList 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Thread has entry, but no locks recorded as held for dispatch!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0this 0x%10!p!, perThreadList 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Object Type 0x%10!x! does not have a lock order defined in fx\inc\FxVerifierLock.hpp" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::InitializeLockOrder
{
Arg, ItemLong -- 10
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Thread 0x%10!p! does not have an entry" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::GetThreadTableEntry
{
Arg, ItemPtr -- 10
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0OldEntry Thread 0x%10!p! not Current! 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::ReleaseOrReplaceThreadTableEntry
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0No Memory to allocate thread table" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::AllocateThreadTable
{
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Thread 0x%10!p! Attempted to acquire lock on Object 0x%11!p!, ObjectType 0x%12!x!, at Level 0x%13!x! out of sequence." //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Highest Lock Currently held is level 0x%10!x! for Object 0x%11!p!, ObjectType 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0List of Already Acquired Locks and Objects:" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
}

688439ac-7a11-3d35-fd29-82fcddbf2f35 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Object 0x%10!p!, ObjectType 0x%11!x!, LockLevel 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

72e78dd4-52c8-39c3-96db-f22660724d64 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Impersonate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

72e78dd4-52c8-39c3-96db-f22660724d64 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFREQUEST 0x%10!p!, Could not impersonate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Impersonate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

72e78dd4-52c8-39c3-96db-f22660724d64 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Unable to obtain requestor ID. WDFREQUEST 0x%10!p! is already completed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetRequestorProcessId
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

775637ce-b109-3d0d-60a6-f378a0b8391c companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFCOMPANION 0x%10!p! already created, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCompanionCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

775637ce-b109-3d0d-60a6-f378a0b8391c companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Task queues can only be created in EvtDriverDeviceAddcallback, WDFCOMPANION 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCompanionCreateTaskQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

775637ce-b109-3d0d-60a6-f378a0b8391c companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Task queue with id %10!u! is already present, WDFCOMPANION 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCompanionCreateTaskQueue
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_OBJECT_ATTRIBUTES required, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributesForParentHandle
{
Arg, ItemNTSTATUS -- 10
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributesForParentHandle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0ParentObject required in WDF_OBJECT_ATTRIBUTES %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributesForParentHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

7e25c679-87e9-324c-afc9-9aeffecde900 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFIOTARGET %10!p!, setting Dispose event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::PrintDisposeMessage
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFIOTARGET %10!p!, Waiting on Dispose event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::WaitForDisposeEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Sending Pended WDFREQUEST %10!p!, Irp %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitPendedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Completing Pended WDFREQUEST %10!p!, Irp %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitPendedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFIOTARGET %10!p! started status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Start
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFIOTARGET %10!p! is being started while it is being stopped or purged by another thread. WdfIoTargetStart and WdfIoTargetStop/WdfIoTargetPurge must be called synchronously. After the driver calls one of these functions, it must not call the other function before the first one returns." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoStartState
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p! is being canceled on another thread, allowing other thread to complete request, not resending" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::DrainPendedRequestsLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFIOTARGET %10!p! stopped, but it is currently in the %11!s! state, not started or stopped" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoStopState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFIOTARGET %10!p! is already in the process of being stopped or purged from another thread. Driver must wait for the first WdfIoTargetStop or WdfIoTargetPurge to complete before calling it again." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoStopState
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFIOTARGET %10!p! stopped" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Stop
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFIOTARGET %10!p! purged, but it is currently in the %11!s! state, not started, stopped or purged" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoPurgeState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFIOTARGET %10!p! is already in the process of being purged or stopped from another thread. Driver must wait for the first WdfIoTargetPurge or WdfIoTargetStop to complete before calling it again." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoPurgeState
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFIOTARGET %10!p! purged" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Purge
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFIOTARGET %10!p! is being deleted while it is being stopped/purged by another thread. Driver must wait for WdfIoTargetStop or WdfIoTargetPurge to complete before deleting the object." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoRemoveState
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Init WDFIOTARGET %10!p!, unexpected NULL, m_InStackDevice %11!p!, m_Driver %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Init
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFREQUEST %10!p! has not been formatted, cannot send, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Vf_VerifySubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFREQUEST %10!p! is already pending on a WDFIOTARGET" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Vf_VerifySubmitLocked
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFREQUEST %10!p! already sent to a target" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0WDFREQUEST %10!p!, could not create timer, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFIOTARGET %10!p! state %11!s!, sending WDFREQUEST %12!p! cannot ignore current state, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0ignoring WDFIOTARGET %10!p! state, sending WDFREQUEST %11!p!, state %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0failing WDFREQUEST %10!p!, WDFIOTARGET %11!p! not accepting requests, state %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Pending WDFREQUEST %10!p!, WDFIOTARGET %11!p! is paused, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0Starting timer on WDFREQUEST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Failed to initialize sync event for WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0WDFREQUEST %10!p!, Action 0x%11!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Sending WDFREQUEST %10!p!, Irp %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RemoveCompletedRequestLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0WDFREQUEST %10!p! completed in timer callback" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0WDFIOTARGET %10!p!, setting stop event %11!p! in timer callback" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0WDFREQUEST %10!p! completed in from cancel" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CompleteCanceledRequest
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0WDFIOTARGET %10!p!, setting stop event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CompleteCanceledRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0WDFREQUEST %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0WDFREQUEST %10!p! completed in completion routine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0WDFIOTARGET %10!p!, setting stop event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0WDFREQUEST %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0WDFREQUEST %10!p! deferring completion due to outstanding completion references" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 51 "%0WDFREQUEST %10!p! completed in completion routine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0WDFIOTARGET %10!p!, setting stop event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 55 "%0Pended WDFREQUEST %10!p! canceled" //   GLOBALS=pRequest->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::_RequestCancelled
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0Cancelling pending I/O on WDFIOTARGET %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CancelSentIo
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0Ignoring WDFIOTARGET %10!p! state to send request" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSyncRequestIgnoreTargetState
{
Arg, ItemPtr -- 10
}

80bc4100-b00c-3ccd-bac8-f69f9332f295 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0WDFIOTARGET %10!p! has changed IoType with outstanding IO" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::UpdateTargetIoType
{
Arg, ItemPtr -- 10
}

80d694cd-dd57-3ccc-c512-ae06a832eae5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Irp 0x%10!p! (Context 0x%11!p!) not on IRP queue 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxIrpQueue::Vf_VerifyRemoveIrpFromQueueByContext
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

80d694cd-dd57-3ccc-c512-ae06a832eae5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Irp 0x%10!p! on Queue 0x%11!p! Cancelled" //   GLOBALS=p->m_LockObject->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxIrpQueue::_WdmCancelRoutineInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

8186573d-88c3-351b-a6d1-6349a2a8a408 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Target WDFMEMORY 0x%10!p! is ReadOnly" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=IFxMemory::CopyFromPtr
{
Arg, ItemPtr -- 10
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_INTERRUPT_CONFIG size 0x%10!x! incorrect, expected 0x%11!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0NULL EvtInterruptIsr in WDF_INTERRUPT_CONFIG structure 0x%10!p! passed" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFINTERRUPTs can only be created during: (1) EvtDriverDeviceAdd when the WDFDEVICE %10!p! is initially created, or (2) EvtDevicePrepareHardware, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Not NULL InterruptRaw or InterruptTranslated in WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0CanWakeDevice set in WDF_INTERRUPT_CONFIG structure  0x%10!p!during EvtDriverDeviceAdd, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0NULL InterruptRaw or InterruptTranslated in WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Driver cannot specify ShareVector different from WdfUseDefault in EvtDevicePrepareHardware callback,WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Driver cannot specify an interrupt as CanWakeDevice if the CM_RESOURCE_INTERRUPT_WAKE_HINT is not present.WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Driver cannot specify an interrupt as CanWakeDevice if it is not power policy powner. WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Driver cannot specify an interrupt as CanWakeDevice for a PDO WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Driver can provide either EvtInterruptDpc or EvtInterruptWorkItem callback but not both. WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Driver cannot specify WaitLock when handling interrupts at DIRQL, WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0CanWakeDevice set in WDF_INTERRUPT_CONFIG structure for aninterrupt not marked as passive 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0The current version of Windows does not support the handling of interrupts at passive-level, WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Driver cannot specify SpinLock when handling interrupts at passive-level, WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDF_INTERRUPT_INFO %10!p! Size %11!d! invalid, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptGetInfo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Policy %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetPolicy
{
Arg, ItemLong -- 10
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Priority %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetPolicy
{
Arg, ItemLong -- 10
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDF_INTERRUPT_EXTENDED_POLICY %10!p! Size %11!d! invalid, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Policy %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy
{
Arg, ItemLong -- 10
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Priority %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy
{
Arg, ItemLong -- 10
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0TargetProcessorSet's reserved fields are not zero" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy
{
}

83ce41ac-7bc8-3374-e263-4dd557fccf12 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFINTERRUPT %10!p! is handled at DIRQL. This API is not available for DIQRL interrupt handling." //   GLOBALS=pFxInterrupt->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptTryToAcquireLock
{
Arg, ItemPtr -- 10
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not allocate memory for %10!d! settings for bInterfaceNumber %11!d! (Protocol %12!d!, Class %13!d!, SubClass %14!d!), %15!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemNTSTATUS -- 15
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Interface Number %10!d! does not have contiguous alternate settings,expected %11!d! settings, found alt setting %12!d!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Interface Number %10!d! does not have contiguous alternate settings,expected consecutive %11!d! settings, but alt setting %12!d! missing %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Interface Number %10!d! does not have a valid endpoint descriptor,%11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFUSBINTERFACE %10!p! has interface num %11!d!, select setting by descriptor specified interface num %12!d!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSettingByDescriptor
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Failed to initialize FxSyncRequest" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting
{
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Urb header length 0x%10!x! is less than expected 0x%11!x!%12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Unable to allocate memory %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Unable to allocate memory for the pipes %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Init pipe failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Commit pipe failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}

87898b8d-aa56-3e31-166a-fa5b6a889ccc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFUSBINTERFACE %10!p! not configured, cannot retrieve configured setting index" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::GetConfiguredSettingIndex
{
Arg, ItemPtr -- 10
}

893fd910-b9e0-328f-6218-532d55ba032e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Received set device power irp 0x%10!p! on WDFDEVICE 0x%11!p! !devobj 0x%12!p!, but the irp was not requested by the device (the power policy owner)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::DispatchDeviceSetPower
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

8c269f80-f483-3803-f1cd-11f241ed4636 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Params size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceSelectSetting
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

8c269f80-f483-3803-f1cd-11f241ed4636 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0InterfaceDescriptor passed in is NULL %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceSelectSetting
{
Arg, ItemNTSTATUS -- 10
}

8c269f80-f483-3803-f1cd-11f241ed4636 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0URB or URB fields passed in are invalid Urb 0x%10!p!  %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceSelectSetting
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

8c269f80-f483-3803-f1cd-11f241ed4636 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0EndpointInfo Size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceGetEndpointInformation
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

8c269f80-f483-3803-f1cd-11f241ed4636 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0PipeInfo Size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceGetConfiguredPipe
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFTIMER %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::~FxTimer
{
Arg, ItemPtr -- 10
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to initialize timer %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Initialize
{
Arg, ItemNTSTATUS -- 10
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0ParentObject %10!p! cannot automatically synchronize callbacks with a Timer since it is configured for passive level callback constraints. Set AutomaticSerialization to FALSE. %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not allocate workitem: %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Initialize
{
Arg, ItemNTSTATUS -- 10
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Deleting WDFTIMER %10!p! from with in the callback will lead to deadlock, PRKTHREAD %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::FlushAndRundown
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Calling WdfTimerStart when the timer object %10!p! is running down will lead to a crash" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Start
{
Arg, ItemPtr -- 10
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFTIMER 0x%10!p! is been stopped by PRKTHREAD 0x%11!p!. Ignoring the request to start timer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Start
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Calling WdfTimerStop from within the WDFTIMER %10!p! callback will lead to deadlock, PRKTHREAD %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

8f5e6eeb-3f84-39b2-3ad5-1de0b3561988 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Detected multiple calls to WdfTimerStop for WDFTIMER 0x%10!p!, stop in progress on PRKTHREAD 0x%11!p!, current PRKTHREAD 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt
{
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt
{
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! failed to allocate FxWakeInterruptMachine. %11!s!." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE 0x%10!p! failed to initialize FxWakeInterruptMachine. %11!s!." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! failed to init FxWakeInterruptMachine. %11!s!." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFDEVICE 0x%10!p! created wake interrupt" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0not enough memory to allocate WDFINTERRUPT for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::_CreateAndInit
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0FxInterrupt Commit failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0The specified object 0x%10!p! is not a valid parent for a WDFINTERRUPT, WDF_INTERRUPT_CONFIG structure 0x%11!p! passed, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Could not allocate waitlock, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeWorker
{
Arg, ItemNTSTATUS -- 10
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Could not allocate workitem, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeWorker
{
Arg, ItemNTSTATUS -- 10
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Is MSI? %10!d!, MSI-ID %11!d!, AffinityPolicy %12!s!, Priority %13!s!, Group %14!d!, Affinity 0x%15!I64x!, Irql 0x%16!x!, Vector 0x%17!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::AssignResources
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemEnum(_WDF_INTERRUPT_POLICY) -- 12
Arg, ItemEnum(_WDF_INTERRUPT_PRIORITY) -- 13
Arg, ItemLong -- 14
Arg, ItemLongLongX -- 15
Arg, ItemLong -- 16
Arg, ItemLong -- 17
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0You cannot apply policy at this stage for WDFINTERRUPT 0x%10!p! For interrupts created in EvtDevicePrepareHardware you must use EvtDeviceFilter APIs or use a pre-process routine to handle the IRP_MN_FILTER_RESOURCE_REQUIREMENT, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::SetPolicy
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0IoConnectInterrupt(Ex) Failed, SpinLock 0x%10!p!, Vector 0x%11!x!, IRQL 0x%12!x!, Synchronize IRQL 0x%13!x!, Mode 0x%14!x!, ShareVector %15!s!, ProcessorGroup %16!d!, ProcessorEnableMask 0x%17!I64x!, FloatingSave %18!s!, %19!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemString -- 15
Arg, ItemLong -- 16
Arg, ItemLongLongX -- 17
Arg, ItemString -- 18
Arg, ItemNTSTATUS -- 19
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0EvtInterruptEnable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0EvtInterruptDisable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Disconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Force disconnect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceDisconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

95e0d45d-279a-3463-219b-38cec5854eef um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Force connect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceReconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage
{
Arg, ItemNTSTATUS -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not commit FxRequest %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage
{
Arg, ItemNTSTATUS -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Handle create failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create
{
Arg, ItemNTSTATUS -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Irp %10!p! Ownership %11!s! FxRequest %12!p!, status %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create
{
Arg, ItemPtr -- 10
Arg, ItemEnum(FxRequestIrpOwnership) -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Completing Cancelable WDFREQUEST %10!p!.  This results in a race condition in the device driver that can cause double completions.  Call WdfRequestUnmarkCancelable before WdfRequestComplete.  If WdfRequestUnmarkCancelable returns STATUS_CANCELLED, do not complete the request until the EvtIoCancel handler is called.  The straightforward way to ensure this is to complete a canceled request from the EvIoCancel callback." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyCompleteInternal
{
Arg, ItemPtr -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFREQUEST %10!p!, MJ 0x%11!x!, Information 0x%12!I64x! is greater then buffer length 0x%13!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyCompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemLong -- 13
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Converting WDF NTSTATUS value 0x%10!x!..." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Arg, ItemLong -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Unknown WDF NTSTATUS 0x%10!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Arg, ItemLong -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0... to %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Arg, ItemNTSTATUS -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFREQUEST 0x%10!p!, PIRP 0x%11!p!, Major Function 0x%12!x!,  completed with outstanding references on WDFMEMORY 0x%13!p! or 0x%14!p! retrieved from this request" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFMEMORY 0x%10!p!, buffer %11!p!, PMDL %12!p!, length %13!I64d! bytes" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLongLong -- 13
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0IOCTL output WDFMEMORY 0x%10!p!, buffer %11!p!, PMDL %12!p!, length %13!I64d! bytes" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLongLong -- 13
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFREQUEST %10!p! cannot send and forget will not execute completion routine %11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyPreProcessSendAndForget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFREQUEST %10!p! cannot send and forget a create request which has a WDFFILEOBJECT created for it, it must have a completion routine and be post processsed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyPreProcessSendAndForget
{
Arg, ItemPtr -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Attempt to get UserMode Buffer Pointer for WDFDEVICE 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Driver must use buffered or direct I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFREQUEST %10!p! InputBufferLength length is zero, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Unrecognized Major Function 0x%10!x! on WDFDEVICE 0x%11!p! WDFREQUEST 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFREQUEST 0x%10!p! length is zero, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0WDFREQUEST 0x%10!p! IOCTL output buffer length is zero, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState
{
Arg, ItemPtr -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Already in FxIrpQueue 0x%10!p! WDFREQUEST 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyInsertIrpQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0WDFREQUEST 0x%10!p! not on IrpQueue" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::RemoveFromIrpQueue
{
Arg, ItemPtr -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! while it is still active on WDFIOTARGET 0x%11!p!." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0WDFREQUEST %10!p! doesn't belong to any queue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! without specifying an IRP with WDF_REQUEST_REUSE_MUST_COMPLETE flag, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! holding aninternal allocated IRP with WDF_REQUEST_REUSE_MUST_COMPLETE flag, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! with WDF_REQUEST_REUSE_MUST_COMPLETE flag while request is being referenced, reference count:%11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0Attempt to release an IRP reference without adding one first WDFREQUEST 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ReleaseIrpReference
{
Arg, ItemPtr -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0WDFREQUEST %10!p! deferred the dispose operation. This normally indicates that at least one of its children asked for passive level disposal. This is not supported." //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifierBreakpoint_RequestEarlyDisposeDeferred
{
Arg, ItemPtr -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 51 "%0WDFREQUEST 0x%10!p! is not owned by the driver, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsDriverOwned
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0WDFREQUEST 0x%10!p! has been used as a TagRequest in WdfIoQueueFindRequest. A TagRequest cannot be used until it is retrieved by WdfIoQueueRetrieveFoundRequest" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsDriverOwned
{
Arg, ItemPtr -- 10
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 53 "%0WDFREQUEST 0x%10!p! is not cancelable, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsCancelable
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 54 "%0WDFREQUEST 0x%10!p! should be unmarked cancelable by calling WdfRequestUnmarkCancelable, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsNotCancelable
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0This call is valid only in EvtIoStop callback, WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::Vf_VerifyRequestIsInEvtIoStopContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0WDFREQUEST 0x%10!p! is already completed, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsNotCompleted
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0Request 0x%10!p! is not returned by WdfIoQueueFindRequest, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::Vf_VerifyRequestIsTagRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0Request 0x%10!p! was not allocated for an incoming IRP, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::Vf_VerifyRequestIsAllocatedFromIo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0WDFREQUEST %10!p! doesn't have an IRP, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsCurrentStackValid
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 61 "%0IRP %10!p! of WDFREQUEST %11!p! doesn't have a valid stack location, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsCurrentStackValid
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

970092a0-ab41-3298-7a02-05e62e3b4309 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 62 "%0IRP %10!p! of WDFREQUEST %11!p! cannot be completed, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestCanBeCompleted
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not initialize QueryInterfaceLock for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not initialize DeviceInterfaceLock for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not initialize cleanup event for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not initialize remove event for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! type %13!s! IRP 0x%14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemEnum(_DEVICE_RELATION_TYPE) -- 13
Arg, ItemPtr -- 14
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p! for %14!s! (S%15!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
Arg, ItemEnum(_SYSTEM_POWER_STATE) -- 14
Arg, ItemLong -- 15
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p! for %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 14
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFDEVICE %10!p!, WDFCHILDLIST %11!p! returned %12!s! from processing bus relations" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFDEVICE %10!p!, returning %11!s! from processing bus relations" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFDEVICE %10!p! returning %11!d! devices in relations %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0PDO %10!p! PDO %11!p! PDO %12!p! PDO %13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0PDO %10!p! PDO %11!p! PDO %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0PDO %10!p! PDO %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0PDO %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFDEVICE %10!p! could not allocate device relations for type %11!d! string,  %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryDeviceRelations
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0PnP State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Power State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0Power Policy State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFDEVICE %10!p!, !devobj %11!p! processing delayed deletion from pnp state machine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ProcessDelayedDeletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0WDFDEVICE %10!p! could not allocate IRP to send QI to parent !devobj %11!p!, %12!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=PnpPassThroughQI
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pnp state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr pol state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for device power requirement state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for remove event to finish processing" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PnpRemoveDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Received wait wake power irp %10!p! on device %11!p!, but the irp was not requested by the device (the power policy owner)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0Failing wait wake irp %10!p! with %11!s! because wait wake irp %12!p! already pended" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemPtr -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0wait wake irp %10!p! already canceled" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0already have a ww irp %10!p!, failing new ww irp %11!p! with %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0DeviceWake power state reported in device capabilities %10!s! indicates that device can not signal a wake event, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0DxState specified by driver %10!s! cannot be lighter than lightest available device wake state %11!s!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
Arg, ItemNTSTATUS -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0DxState specified by driver %10!s! cannot be lighter than PowerDeviceD2 for USB selective suspend %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0Failed to initialize USB selective suspend %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0A previous call to assign S0-idle policy specified that the idle timeout %10!s! be determined by the power manager. This decision cannot be changed. %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemString -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 51 "%0Driver turned off S0Idle optimization. Device will be powered up on resume from Sx even when it is idle" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0Driver turned on S0Idle optimization. Device will remain powered off if idle when resuming from Sx" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 53 "%0Invalid tri-state value for ExcludeD3Cold %10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemLong -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 55 "%0DeviceWake power state reported in device capabilities %10!s! indicates that device can not signal a wake event, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0DxState specified by driver %10!s! cannot be lighter than lightest available device wake state %11!s!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
Arg, ItemNTSTATUS -- 12
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0failing system query power because the device cannot wake the machine from S%10!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyHandleSystemQueryPower
{
Arg, ItemLong -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0WdfDeviceFailedAttemptRestart is only available for UMDF 2.15 and later drivers. Reverting to WdfDeviceFailedNoRestart." //   GLOBALS=CallerFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxPkgPnp::SetDeviceFailed
{
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0Entering DeviceUsageNotification handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0type %10!x!, in path %11!x!, can support paging %12!x!, dump file %13!x!, hiber file %14!x!, boot file %15!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemLong -- 15
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 61 "%0Usage type %10!x! not supported, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 66 "%0Exit %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemNTSTATUS -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 71 "%0A new state changing pnp irp %10!s! IRP %11!p! arrived while another pnp irp %12!s! IRP %13!p! is still pending WDFDEVICE %14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SetPendingPnpIrp
{
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 72 "%0Could not initialize enum info for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateEnumInfo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 73 "%0Could not allocate enum info for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateEnumInfo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 76 "%0The driver failed to return from a callback routine in a reasonable period of time.  This prevented the machine from going to sleep or from hibernating.  The machine crashed because that was the best way to get data about the cause of the crash into a minidump file." //   GLOBALS=pDevice->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWatchdog::_WatchdogDpc
{
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 77 "%0Not saving wake settings for WDFDEVICE %10!p! due to system power transition" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::SaveState
{
Arg, ItemPtr -- 10
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 78 "%0WDFINTERRUPT %10!p! failed to connect, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsD0
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 79 "%0WDFINTERRUPT %10!p! failed to disconnect, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsDx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

97d4c02e-f8f2-341e-3b58-4c207938b3de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 85 "%0SystemWake %10!s! and DeviceWake %11!s! power state reported in device capabilities do not support wake. Both the SystemWake and DeviceWake members should be nonzero to support wake-up on this system." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyGetDeviceDeepestDeviceWakeState
{
Arg, ItemEnum(_SYSTEM_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
}

97e83d29-fdde-3c57-1a78-abb81b33f697 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0FxDriver 0x%10!p! not disposed: this maybe a driver reference count problem with WDFDRIVER 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDRIVER FUNC=FxDriver::~FxDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97e83d29-fdde-3c57-1a78-abb81b33f697 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Cannot close Driver Parameters key %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxDriver::~FxDriver
{
Arg, ItemNTSTATUS -- 10
}

97e83d29-fdde-3c57-1a78-abb81b33f697 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Unloading WDFDRIVER %10!p!, PDRIVER_OBJECT_UM %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxDriver::Unload
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97e83d29-fdde-3c57-1a78-abb81b33f697 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Driver unload routine Exit WDFDRIVER %10!p!, PDRIVER_OBJECT_UM %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxDriver::Unload
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

97e83d29-fdde-3c57-1a78-abb81b33f697 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Driver Object %10!p!, reg path %11!s! cannot be unloaded, no DriverUnload routine specified" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxDriver::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
}

97e83d29-fdde-3c57-1a78-abb81b33f697 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Cannot open Driver Parameters key %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxDriver::Initialize
{
Arg, ItemNTSTATUS -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed: %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::_Create
{
Arg, ItemNTSTATUS -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 100 "%0Power Resume: WDFQUEUE 0x%10!p! is now powered on and I/O has resumed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 101 "%0Acknowledging WDFREQUEST %10!p! on WDFQUEUE %11!p! %12!s! requeue option" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessAcknowledgedRequests
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 102 "%0Waiting for all threads to stop dispatching requests so that WDFQUEUE 0x%10!p! can be powered off" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::StartPowerTransitionOff
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 103 "%0Waiting for all inflight requests to be acknowledged  on WDFQUEUE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::StopProcessingForPower
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 104 "%0Dispatching requests from worker thread" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::_DeferredDispatchThreadThunk
{
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not configure queue: %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::_Create
{
Arg, ItemNTSTATUS -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Invalid dispatch type specified %10!d!, Queue 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0EvtIoInternalDeviceControl is not supported for UMDF, Queue 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0EvtIoInternalDeviceControl is not supported for UMDF, Queue 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0At least one of EvtIoDefault|EvtIoRead|EvtIoWrite|EvtIoDeviceControl|EvtIoInternalDeviceControl must be set %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemNTSTATUS -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Cannot set io callback events on a manual WDFQUEUE 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Cannot have  NumberOfPresentedRequests other than 0 on a Sequential or manual WDFQUEUE 0x%10!p!.Make Sure you set NumberOfPresentedRequests to 0, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Could not allocate workitem: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemNTSTATUS -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0EvtIoDefault 0x%10!p!, EvtIoRead 0x%11!p!, EvtIoWrite 0x%12!p!, EvtIoDeviceControl 0x%13!p! for WDFQUEUE 0x%14!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFQUEUE 0x%10!p! Synchronization scope is set to device; WDF extension drivers are not allowed to use this type of synchronization, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFQUEUE 0x%10!p! Synchronization scope is set to device but the Device ExecutionLevel: 0x%11!x! doesn't match Queue ExecutionLevel: 0x%12!x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Invalid WDFQUEUE 0x%10!p! state" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::SetState
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFQUEUE 0x%10!p! is shut down, preventing queue from accepting requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::SetState
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WdfIoQueueRetrieveFoundRequest is allowed only on a manual queue 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyGetRequestUpdateFlags
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Driver called WdfIoQueueRetrieveNextRequest on a sequential WDFQUEUE 0x%10!p! with no outstanding requests. This can cause a race with automatically dispatched requests. Call WdfIoQueueRetrieveNextRequest before completing the current request(s)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyGetRequestUpdateFlags
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Cannot be called on a parallel WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFQUEUE 0x%10!p! is powered off, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFQUEUE 0x%10!p! is stopped, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0FindRequest is allowed only on a manaul queue 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::PeekRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Cannot forward a request to the same WDFQUEUE 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0Cannot forward a request to a different WDFDEVICE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequest
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Requeue is allowed only for a manual queue, WDFREQUEST 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Requeue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::Requeue
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0WDFQUEUE 0x%10!p! is not accepting requests, state is %11!s!, %12!s!completing WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0Queuing WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, %12!s!WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0Current thread 0x%10!p! is not at the passive-level %11!s!, posting to worker thread for WDFQUEUE 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CanThreadDispatchEventsLocked
{
Arg, ItemPtr -- 10
Arg, ItemListByte(Low,APC,DPC) -- 11
Arg, ItemPtr -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0Presentation lock for WDFQUEUE 0x%10!p! is already held, deferring to dpc or workitem" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CanThreadDispatchEventsLocked
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0Thread %10!p! is processing WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0WDFQUEUE 0x%10!p! Power Transition State %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxIoQueuePowerInvalid,FxIoQueuePowerOn,FxIoQueuePowerOff,FxIoQueuePowerStartingTransition,FxIoQueuePowerStopping,FxIoQueuePowerStoppingNotifyingDriver,FxIoQueuePowerStoppingDriverNotified,FxIoQueuePowerPurge,FxIoQueuePowerPurgeNotifyingDriver,FxIoQueuePowerPurgeDriverNotified,FxIoQueuePowerRestarting,FxIoQueuePowerRestartingNotifyingDriver,FxIoQueuePowerRestartingDriverNotified,FxIoQueuePowerLast) -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0WDFQUEUE 0x%10!p! not in dispatching state, current state is %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 51 "%0Calling driver EvtIoRead for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 53 "%0Calling driver EvtIoWrite for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 54 "%0Calling driver EvtIoDeviceControl for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 55 "%0Calling driver EvtIoInternalDeviceControl for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0Calling driver EvtIoDefault for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0Driver has no event callback for %10!s!, completing WDFREQUEST 0x%11!p! with %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0WDFQUEUE 0x%10!p! is not a Manual queue, ReadyNotify is only valid on a manual Queue, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 61 "%0WDFQUEUE 0x%10!p! already has a ReadyNotify callback 0x%11!p!registered, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 62 "%0WDFQUEUE 0x%10!p! does not have a ReadyNotify to cancel, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 63 "%0WDFQUEUE 0x%10!p! should be stopped before clearing ReadyNotify callback 0x%11!p! registered, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 64 "%0WDFQUEUE 0x%10!p! is already deleted, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 65 "%0WDFQUEUE 0x%10!p! already has a IdleComplete callback registered 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 66 "%0All WDFQUEUE 0x%10!p! requests cancelled" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 67 "%0Cancelling WDFREQUEST 0x%10!p!, WDFQUEUE 0x%11!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 68 "%0All driver cancellable requests cancelled  in WDFQUEUE 0x%10!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 69 "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdleSynchronously
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 70 "%0WDFQUEUE 0x%10!p! is already deleted %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 71 "%0WDFQUEUE 0x%10!p! already has a PurgeComplete callback registered 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 72 "%0All WDFQUEUE 0x%10!p! requests cancelled" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 73 "%0Cancelling WDFREQUEST 0x%10!p!, WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 74 "%0All driver cancellable requests cancelled  in WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 75 "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurgeSynchronously
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 76 "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueDrainSynchronously
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 77 "%0WDFREQUEST 0x%10!p! was cancelled while on WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CancelForQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 78 "%0WDFREQUEST 0x%10!p! is on a cancellation list for WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyValidateCompletedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 79 "%0WDFREQUEST 0x%10!p! was cancelled in driver for WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyCancelForDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 80 "%0WDFREQUEST 0x%10!p! is already on list, FxRequest::m_ListEntry is busy!, WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyCancelForDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 81 "%0WDFQUEUE 0x%10!p! is idle, calling driver callback" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessIdleComplete
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 82 "%0WDFQUEUE 0x%10!p! is purged, calling driver callback" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPurgeComplete
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 83 "%0ReadyNotify notify method is NULL on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessReadyNotify
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 84 "%0Calling CancelRoutine routine for WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessCancelledRequests
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 85 "%0Calling CanceledOnQueue routine for WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessCancelledRequestsOnQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 86 "%0Power Stop: WDFQUEUE 0x%10!p! is powering off with in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 87 "%0Power Stop: WDFQUEUE 0x%10!p! is powering off without in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 88 "%0Power Stop: WDFQUEUE 0x%10!p! is purging with in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 89 "%0Power purge: WDFQUEUE 0x%10!p! is purging without in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 90 "%0Power Stop Notifying Driver, WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 91 "%0Power Purge Notifying Driver WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 92 "%0Power Stop: Waiting for Driver to complete or acknowledge in-flight requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 93 "%0Power Stop: Waiting for Driver to complete or acknowledge in-flight requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 94 "%0Power Stop: WDFQUEUE 0x%10!p! is now powered off with no in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 95 "%0Power Stop: Driver has acknowledged all in-flight requests, but WDFQUEUE 0x%10!p! has outstanding callbacks" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 96 "%0Power Resume: Driver has power paused requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 97 "%0Power Resume: Driver has no power paused requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 98 "%0Power Resume, Notifying Driver, WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

9a97a066-a27a-3a8a-1a57-ec8d4af9a4a1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 99 "%0Power Resume: Driver has no callback for EvtIoResume registered on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}

9ad145ea-8325-328d-d7c2-d836d13b67dd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0failed to send ioctl to update %10!s! WMI instance %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::UpdateWmiInstance
{
Arg, ItemString -- 10
Arg, ItemNTSTATUS -- 11
}

9ad145ea-8325-328d-d7c2-d836d13b67dd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0RegOpenKeyEx returned error %10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ReadStateFromRegistry
{
Arg, ItemLong -- 10
}

9ad145ea-8325-328d-d7c2-d836d13b67dd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0failed to read registry, RegQueryValueEx returned error %10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ReadStateFromRegistry
{
Arg, ItemLong -- 10
}

9ad145ea-8325-328d-d7c2-d836d13b67dd um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Failed to set Registry value for S0Idle/SxWake error %10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::WriteStateToRegistry
{
Arg, ItemLong -- 10
}

9b2fc046-efb9-3ff8-2ed0-475210cd0701 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! Failed to allocate I/O request %11!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIrp::AllocateIrp
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9c475a54-80bb-3720-ac85-5cd680bd1452 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Created UserObject Handle 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGUSEROBJECT FUNC=imp_WdfObjectCreate
{
Arg, ItemPtr -- 10
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not allocate memory for a WDFKEY, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryOpenKey
{
Arg, ItemNTSTATUS -- 10
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0new WDFKEY object open failed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryOpenKey
{
Arg, ItemNTSTATUS -- 10
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not allocate memory for WDFKEY, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryCreateKey
{
Arg, ItemNTSTATUS -- 10
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Registry key creation failed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryCreateKey
{
Arg, ItemNTSTATUS -- 10
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFKEY %10!p! QueryValue failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=traceLevel FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryValue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFKEY %10!p! value %11!s! has empty data, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFKEY %10!p! WDFMEMORY object create failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFKEY %10!p! QueryPartial failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFKEY %10!p! QueryPartial failed: %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFKEY %10!p! value %11!s! has empty data, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFKEY %10!p!, WDFCOLLECTION %11!p!, collection add failed %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFKEY %10!p!: WDFSTRING creation failed: %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFKEY %10!p! invalid UNICODE_STRING MaximumLength 0, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFKEY %10!p!, QueryPartial failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFKEY %10!p! value %11!s! has empty data, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFKEY %10!p! QueryPartial failed, Length %11!d! > max %12!d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0WDFKEY %10!p! QueryPartial failed, Length %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFKEY %10!p!, QueryULong, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryULong
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFKEY %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignValue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0WDFKEY %10!p!, WDFMEMORY %11!p! Offsets overflowed, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0WDFKEY %10!p!, WDFMEMORY %11!p! BufferLength in Offsets truncated, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0WDFKEY handle %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0WDFKEY %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignULong
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0WDFKEY %10!p! allocate temporary buffer failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0WDFKEY %10!p! set value failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0WDFKEY handle %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0WDFCOLLECTION %10!p!, collection too large to fit into a ULONG, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0WDFKEY %10!p!,  WDFCOLLECTION %11!p! contains non string objects, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0WDFKEY %10!p! allocate for query buffer failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9d20eb04-d2e3-3ed9-f7d2-40f683ad1e0f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0WDFKEY %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9dbd71fe-08f0-35fa-9fe9-c191088e27a6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Failed to allocate tag tracker, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_OBJECT_ATTRIBUTES required, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributes
{
Arg, ItemNTSTATUS -- 10
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!, %14!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0ParentObject required in WDF_OBJECT_ATTRIBUTES %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Attributes %10!p! execution level set to %11!d!, out of range, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Attributes %10!p! synchronization scope set to %11!d!, out of range, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
Arg, ItemNTSTATUS -- 12
}

9ec16943-8e5c-33d1-f9e9-6bf2274addf2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
Arg, ItemNTSTATUS -- 12
}

a0b2daa0-ee0b-352e-ab23-13d2e5ac9d65 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0FxInterruptThreadpool creation failed, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterruptThreadpool::_CreateAndInit
{
Arg, ItemHRESULT -- 10
}

a0b2daa0-ee0b-352e-ab23-13d2e5ac9d65 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Threadpool creation failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterruptThreadpool::Initialize
{
Arg, ItemWINERROR -- 10
}

a0b2daa0-ee0b-352e-ab23-13d2e5ac9d65 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0%!FUNC!: Failed to set minimum threads (%10!d!) in threadpool, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterruptThreadpool::Initialize
{
Arg, ItemLong -- 10
Arg, ItemWINERROR -- 11
}

a0b2daa0-ee0b-352e-ab23-13d2e5ac9d65 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Waitblock creation failed %10!s!" //   GLOBALS=driverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterruptWaitblock::_CreateAndInit
{
Arg, ItemHRESULT -- 10
}

a0b2daa0-ee0b-352e-ab23-13d2e5ac9d65 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Waitblock init failed %10!s!" //   GLOBALS=driverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterruptWaitblock::_CreateAndInit
{
Arg, ItemHRESULT -- 10
}

a0b2daa0-ee0b-352e-ab23-13d2e5ac9d65 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Event creation failed for FxInterrupt object %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterruptWaitblock::Initialize
{
Arg, ItemWINERROR -- 10
}

a0b2daa0-ee0b-352e-ab23-13d2e5ac9d65 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Event creation failed for FxInterrupt object %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterruptWaitblock::Initialize
{
Arg, ItemWINERROR -- 10
}

a25738f6-7f49-3fdc-62d6-2018bb6af893 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Failed to %10!s! device interface %11!s!" //   GLOBALS=FxDevice::GetFxDevice(m_Device)->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxDeviceInterface::SetState
{
Arg, ItemString -- 10
Arg, ItemNTSTATUS -- 11
}

a474cfea-8135-3226-0c48-d98b46d8376f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0A NULL Descriptor is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}

a474cfea-8135-3226-0c48-d98b46d8376f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0A NULL Buffer is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}

a474cfea-8135-3226-0c48-d98b46d8376f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Buffer is NULL, but a length (0x%10!x!) is specified" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Arg, ItemLong -- 10
}

a474cfea-8135-3226-0c48-d98b46d8376f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0A NULL MDL is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}

a474cfea-8135-3226-0c48-d98b46d8376f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0MDL is NULL, but a length (0x%10!x!) is specified" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Arg, ItemLong -- 10
}

a474cfea-8135-3226-0c48-d98b46d8376f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0A NULL WDFMEMORY handle is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}

a474cfea-8135-3226-0c48-d98b46d8376f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Memory offset values are not valid %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Arg, ItemNTSTATUS -- 10
}

ac2ceee6-f903-328a-4d10-bd40a2c35cae um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to allocate verifier lock, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE %10!p! !devobj %11!p! If the power framework is made responsible for determining the idle timeout, then the first call to assign S0-idle policy must occur before the first start IRP is completed. However, in this case, it occurred after the first start IRP was completed. %12!s!." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::UseSystemManagedIdleTimeout
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE %10!p! !devobj %11!p! Calls to assign S0-idle settings and to specify power framework settings are happening in parallel. The driver needs to serialize these calls with respect to each other. %12!s!." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::UseSystemManagedIdleTimeout
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE %10!p! !devobj %11!p! The driver's S0-idle settings and/or power framework settings did not take effect because they were supplied too late. The driver must ensure that the settings are provided before the first start IRP is completed." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::FreezeIdleTimeoutManagementStatus
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE %10!p! !devobj %11!p! The driver specified power framework settings, but did not opt for system-managed idle timeout." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::FreezeIdleTimeoutManagementStatus
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because the Event is already enqueued." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current state %12!s!, policy event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
Arg, ItemEnum(FxPowerPolicyEvent) -- 14
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power policy state %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PowerPolicyEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 13
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Failed to allocate D0 request to disarm from wake from S0 to allow arm for wake from Sx, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSystemSleepNeedWake
{
Arg, ItemNTSTATUS -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWake
{
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWakeNP
{
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFDEVICE %10!p! powering down before child devices have powered down. This usually indicates a faulty child device that completed the Sx irp before sending the Dx irp" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleeping
{
Arg, ItemPtr -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Attempting to send wait wake request for EvtDeviceArmWakeFromSx() failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingSendWake
{
Arg, ItemNTSTATUS -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0Could not allocate wake request for wake from S0, revert arming, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableSendWake
{
Arg, ItemNTSTATUS -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0PowerDeviceD0 requested by WDFDEVICE 0x%10!p! !devobj 0x%11!p!, is being completed by upper driver without sending it to driver that requested it" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolDevicePowerUpComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Could not request D%10!d! irp for device %11!p! (WDFDEVICE %12!p!), %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0Requesting D%10!d! irp, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0Requesting wait wake irp for S%10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
Arg, ItemLong -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Requesting wait wake irp for S%10!d! failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0Completing system power irp %10!p! (S%11!d!), %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCompleteSystemPowerIrp
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Successfully got WaitWake irp %10!p! for cancelling" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
Arg, ItemPtr -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Cancel of irp %10!p! returned %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0No WaitWake irp to cancel" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0WDFDEVICE %10!p! !devobj %11!p! Completion of WaitWake irp %12!p!, %13!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0Completion of WaitWake irp %10!p!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0Not completing WaitWake irp %10!p! in completion routine" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0WDFDEVICE %10!p!, !devobj %11!p! Completion of UsbSS irp" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyUsbSelectiveSuspendCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

af879088-f902-34e5-7398-ab8c2c50aec2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0WDFDEVICE %10!p! !devobj 0x%11!p! not idling out because there are %12!d! children who are powered up" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCanIdlePowerDown
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

b072852e-481d-3b2f-a21d-b5f07870f0de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE %10!p! is not a PNP device, device interface creation not allowed %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b072852e-481d-3b2f-a21d-b5f07870f0de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE %10!p! DeviceInterface object creation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b072852e-481d-3b2f-a21d-b5f07870f0de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE %10!p!, DeviceInterface object initialization failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b072852e-481d-3b2f-a21d-b5f07870f0de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE %10!p! is not a PNP device, device interfaces not allowed" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceSetDeviceInterfaceState
{
Arg, ItemPtr -- 10
}

b072852e-481d-3b2f-a21d-b5f07870f0de um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE %10!p! is not a PNP device, device interface creation not allowed %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b0a24d05-02a1-3651-254f-457f14ca345e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0FxIFR logging started" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxIFRStart
{
}

b0a24d05-02a1-3651-254f-457f14ca345e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0FxIFR has been started with a size override:  size 0x%10!x! bytes, # Pages %11!d!.  An extended IFR size may not be written to a minidump!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxIFRStart
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

b0a24d05-02a1-3651-254f-457f14ca345e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0FxIFR requested an allocation of size 0x%10!x! bytes, Allocated memory was of size 0x%11!x! bytes" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDRIVER FUNC=FxIFRStart
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

b14b100f-4056-3297-ea69-784ae004ca9f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}

b14b100f-4056-3297-ea69-784ae004ca9f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::TraceDroppedEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectDroppedEvent) -- 13
}

b1547456-7fe8-365a-c692-36833b1fbe38 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE %10!p!, could not allocate callback lock, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b1547456-7fe8-365a-c692-36833b1fbe38 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFHANDLE %10!p! does not have a WDFDEVICE as an ancestor" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::_SearchForDevice
{
Arg, ItemPtr -- 10
}

b1547456-7fe8-365a-c692-36833b1fbe38 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFHANDLE %10!p! does not have a callbacks interface in its object tree(WDFDEVICE %11!p!)" //   GLOBALS=pOrigParent->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::_SearchForDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

b1547456-7fe8-365a-c692-36833b1fbe38 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE %10!p! could not allocate a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b1547456-7fe8-365a-c692-36833b1fbe38 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE %10!p! failed to initialize (add) a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b1547456-7fe8-365a-c692-36833b1fbe38 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFDEVICE %10!p! failed to initialize a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b1547456-7fe8-365a-c692-36833b1fbe38 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFDEVICE %10!p! failed to initialize (commit) a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

b3520cc1-6fca-3157-68c5-47e5a49ef6d6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed to allocate FxDevicePwrRequirementMachine. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

b3520cc1-6fca-3157-68c5-47e5a49ef6d6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Device Power Requirement State Machine Initialize() failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

b3520cc1-6fca-3157-68c5-47e5a49ef6d6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Device Power Requirement State Machine Init() failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

b3520cc1-6fca-3157-68c5-47e5a49ef6d6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! FxPox::PoxRegisterDevice failed. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::InitializeComponents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

b3520cc1-6fca-3157-68c5-47e5a49ef6d6 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!. The client driver has failed the EvtDeviceWdmPostPoFxRegisterDevice callback with %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::InitializeComponents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Composite device detected: Converting absolute interface index %10!d! to relative interface index %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SetWinUsbHandle
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to retrieve WinUsb interface handle" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SetWinUsbHandle
{
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Unable to allocate memory %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::MakeAndConfigurePipes
{
Arg, ItemNTSTATUS -- 10
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Unable to allocate memory for the pipes %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::MakeAndConfigurePipes
{
Arg, ItemNTSTATUS -- 10
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Init pipe failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::MakeAndConfigurePipes
{
Arg, ItemNTSTATUS -- 10
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Commit pipe failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::MakeAndConfigurePipes
{
Arg, ItemNTSTATUS -- 10
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Send UMURB_FUNCTION_QUERY_PIPE failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::MakeAndConfigurePipes
{
Arg, ItemNTSTATUS -- 10
}

b98f4599-d301-3de2-d21d-836a201887f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0UpdatePipeAttributes failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::UpdatePipeAttributes
{
Arg, ItemNTSTATUS -- 10
}

ba403c4c-506d-3a0b-5acb-de1006c9c6b4 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Callback: Driver released the callback lock 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCallbackLock::CheckOwnership
{
Arg, ItemPtr -- 10
}

bde3652a-fccb-3d7e-7ef9-3474b6469869 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFSPINLOCK %10!p! is associated with an interrupt, cannot be used for normal sync operations" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfSpinLockAcquire
{
Arg, ItemPtr -- 10
}

bde3652a-fccb-3d7e-7ef9-3474b6469869 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFSPINLOCK %10!p! is associated with an interrupt, cannot be used for normal sync operations" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfSpinLockRelease
{
Arg, ItemPtr -- 10
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE %10!p! idle (in D0) not sending io present event (already sent)" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::TimedOutIoIncrement
{
Arg, ItemPtr -- 10
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE %10!p! idle (in Dx) not sending io present event (already sent)" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::InDxIoIncrement
{
Arg, ItemPtr -- 10
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE %10!p! in thread %11!p! waiting synchronously for Dx to D0 transition" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of power failure, %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of invalid state , %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! The device is being power-dereferenced without a matching power-reference. This could occur if driver incorrectly calls WdfDeviceResumeIdle without a matching call to WdfDeviceStopIdle." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::IoDecrement
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! power idle state %12!s! dropping event %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::ProcessEventLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleEvents) -- 13
}

be0f285e-3102-3a45-0c55-a27d5758daa0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}

c06cdcd8-1c3f-3c07-1b0f-6a12ace321cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not create collection object: %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionCreate
{
Arg, ItemNTSTATUS -- 10
}

c06cdcd8-1c3f-3c07-1b0f-6a12ace321cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not create collection object: STATUS_INSUFFICIENT_RESOURCES" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionCreate
{
}

c06cdcd8-1c3f-3c07-1b0f-6a12ace321cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Index %10!d! is not valid in WDFCOLLECTION %11!p! (count is %12!d!), %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionRemoveItem
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

c06cdcd8-1c3f-3c07-1b0f-6a12ace321cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFOBJECT %10!p! not in WDFCOLLECTION %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionRemove
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c19b0cf8-97e4-3a26-1bce-8952892d12f2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Recursive acquire of callback lock 0x%10!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxCallbackMutexLock::Lock
{
Arg, ItemPtr -- 10
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_IO_QUEUE_CONFIG Size 0x%10!x!, expected for v1.7 size 0x%11!x! or v1.9 size 0x%12!x! or current version size 0x%13!x!, %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Parameter to receive WDFQUEUE handle is not optional for non default queue %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
Arg, ItemNTSTATUS -- 10
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Default queue can only be created before WdfControlDeviceFinishInitializingon the WDFDEVICE %10!p! is called %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Default queue can only be created before the WDFDEVICE 0x%10!p! is started, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Queue Creation failed for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Create failed for FxPkgIo 0x%10!p!, WDFDEVICE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Created WDFQUEUE 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
}

c20c8a5f-d6dd-3269-2d12-74ee00c1e5a2 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Invalid WDF_REQUEST_PARAMETERS size %10!d! %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueFindRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Constructed FxPkgIo 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::FxPkgIo
{
Arg, ItemPtr -- 10
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Destroyed FxPkgIo 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::~FxPkgIo
{
Arg, ItemPtr -- 10
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! %12!s!, IRP_MN %13!x!, IRP 0x%14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0DispatchContext 0x%10!p! is invalid, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::Vf_VerifyDispatchContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Driver cannot change the IRP type in its dispatch callback Irp 0x%10!p!, %11!s!, IRP_MN %12!x!, Device 0x%13!p!, %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0No queue configured for WDFDEVICE 0x%10!p!, failing IRP 0x%11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Could not create WDFREQUEST, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemNTSTATUS -- 10
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Default Queue Already Configured for FxPkgIo 0x%10!p!, WDFDEVICE 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::InitializeDefaultQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Invalid MajorFunction %10!s!, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureDynamicDispatching
{
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 10
Arg, ItemNTSTATUS -- 11
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Driver %10!p! has already set a dispatch callback for %11!s!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgIo::ConfigureDynamicDispatching
{
Arg, ItemPtr -- 10
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
Arg, ItemNTSTATUS -- 12
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Couldn't create object DynamicDispatchInfo, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgIo::ConfigureDynamicDispatching
{
Arg, ItemNTSTATUS -- 10
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Must have EvtIoDefault or %10!s! specific dispatch event registered for WDFQUEUE 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Default WDFQUEUE 0x%10!p! cannot be configured to dispatch specific type of request, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0%10!s! is already configured forWDFQUEUE 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0QueueAttributes->ParentObject 0x%10!p! must have WDFDEVICE as an eventual ancestor, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::CreateQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Attributes->ParentObject 0x%10!p! ancestor is WDFDEVICE %11!p!, but not the same WDFDEVICE 0x%12!p! passed to WdfIoQueueCreate, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::CreateQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0I/O Package already has a default queue. SetFilter must be called before creating a default queue %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::SetFilter
{
Arg, ItemNTSTATUS -- 10
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Perform %10!s! for all queues of WDFDEVICE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxPkgIo::StopProcessingForPower
{
Arg, ItemEnum(FxIoStopProcessingForPowerAction) -- 10
Arg, ItemPtr -- 11
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0Power resume all queues of WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxPkgIo::ResumeProcessingForPower
{
Arg, ItemPtr -- 10
}

c38f7e28-f1b6-3088-1580-9cabc03ac8ee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0Restart queues from purged state for WDFDEVICE 0x%10!p! due to device restart" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxPkgIo::ResetStateForRestart
{
Arg, ItemPtr -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Failed to initialize m_OpenedEvent, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::InitRemoteModeSpecific
{
Arg, ItemNTSTATUS -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to Create RemoteDispatcher, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::InitRemoteModeSpecific
{
Arg, ItemNTSTATUS -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0CreateFile for WDFIOTARGET %10!p! returned status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::OpenTargetHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFIOTARGET %10!p! has no target file object, could not get handle" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::GetTargetHandle
{
Arg, ItemPtr -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFIOTARGET %10!p! could not bind remote dispatcher to new handle, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::BindToHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFIOTARGET %10!p! Unbinding RemoteDispatcher %11!p! to handle %12!p! on close" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::UnbindHandle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFIOTARGET %10!p! could not allocate resources for notification registration, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::RegisterForPnpNotification
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFIOTARGET %10!p! failed to register for Pnp notification, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::RegisterForPnpNotification
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFIOTARGET %10!p! registered for Pnp notification, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::RegisterForPnpNotification
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Failed to create WDF File Object, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::OpenLocalTargetByFile
{
Arg, ItemNTSTATUS -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0QueryRemove callback was for an old registration, ignoring." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnQueryRemove
{
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFIOTARGET %10!p!: query remove notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnQueryRemove
{
Arg, ItemPtr -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFIOTARGET %10!p!: query remove, default action (close for QR)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnQueryRemove
{
Arg, ItemPtr -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0RemoveComplete callback was for an old registration, ignoring." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnRemoveComplete
{
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFIOTARGET %10!p!: remove complete notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnRemoveComplete
{
Arg, ItemPtr -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDFIOTARGET %10!p!: remove complete, default action (close)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnRemoveComplete
{
Arg, ItemPtr -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0RemoveCanceled callback was for an old registration, ignoring." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnRemoveCanceled
{
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFIOTARGET %10!p!: remove canceled notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnRemoveCanceled
{
Arg, ItemPtr -- 10
}

c4519f04-3496-3907-26c7-1c4fa313b36f um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFIOTARGET %10!p!: remove canceled, default action (reopen)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemoteNotificationCallback::OnRemoveCanceled
{
Arg, ItemPtr -- 10
}

c76e72a2-c178-3d7e-fd22-6e78fb1286e1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0BufferSize == 0 not allowed,  %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCreate
{
Arg, ItemNTSTATUS -- 10
}

c76e72a2-c178-3d7e-fd22-6e78fb1286e1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Zero bytes to copy not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCopyToBuffer
{
Arg, ItemNTSTATUS -- 10
}

c76e72a2-c178-3d7e-fd22-6e78fb1286e1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Zero bytes to copy not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCopyFromBuffer
{
Arg, ItemNTSTATUS -- 10
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because the Event is already enqueued." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current power state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE %10!p! !devobj 0x%11!p! current state %12!s! event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
Arg, ItemEnum(FxPowerEvent) -- 14
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering Power State %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PowerEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0EvtDeviceD0EntryPostInterruptsEnabed WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerD0StartingConnectInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0EvtDeviceSelfManagedIoStop failed %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemNTSTATUS -- 10
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0PowerReference on parent WDFDEVICE %10!p! for child WDFDEVICE %11!p! failed, %12!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartingChild
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0EvtDeviceSelfManagedIoStop failed %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDx
{
Arg, ItemNTSTATUS -- 10
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStoppedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0EvtDeviceD0EntryPostInterruptsEnabed WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0EvtDeviceD0EntryPostInterruptsEnabed WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Force disconnecting interupts on !devobj %10!p!, WDFDEVICE %11!p!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptFailedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerInitialDmaEnableFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Force disconnecting interrupts on !devobj 0x%10!p!, WDFDEVICE %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DisconnectInterruptNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! WW !irp 0x%12!p! is a source of wake" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerMakeWakeRequestNonCancelable
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

c7ef20be-aa8e-364d-ecce-e33b0f73f00a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Interrupt(s) disconnect on WDFDEVICE %10!p! failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerConnectInterruptFailed
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s! because of a full queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFDEVICE 0x%10!p! !devobj %11!p! current state %12!s!, policy event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
Arg, ItemEnum(FxPnpEvent) -- 14
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering PnP State %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PnpEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 13
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0could not query caps for stack, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventHardwareAvailable
{
Arg, ItemNTSTATUS -- 10
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0EvtDeviceQueryRemove failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver
{
Arg, ItemNTSTATUS -- 10
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0EvtDeviceQueryRemove returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver
{
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query remove" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveEnsureDeviceAwake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Failing QueryRemoveDevice because the driver has indicated that it cannot be stopped, count %10!d!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
Arg, ItemLong -- 10
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Failing QueryRemoveDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!, boot %13!d!)" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0EvtDeviceQueryStop failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopAskDriver
{
Arg, ItemNTSTATUS -- 10
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0EvtDeviceQueryStop returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopAskDriver
{
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query stop" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopEnsureDeviceAwake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Failing QueryStopDevice because the driver has indicated that it cannot be stopped, count %10!d!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
Arg, ItemLong -- 10
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Failing QueryStopDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!, boot %13!d!)" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0EvtDevicePrepareHardware returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpPrepareHardware
{
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0EvtDeviceReleaseHardware returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpReleaseHardware
{
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Entering PnpMatchResources" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Could not allocate raw resource list for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0Could not allocate translated resource list for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0Not enough interrupt objects created by WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Exiting PnpMatchResources %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemNTSTATUS -- 10
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, driver cannot change the assigned PnP resources, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, driver cannot change the assigned PnP resources, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not an interrupt resource, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not an interrupt resource, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Multi-message MSI 2.2 interrupts must be created sequentially, WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0The PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! was already used to create a wakable interrupt 0x%11!p!, WDFDEVICE 0x%12!p! and any functional interrupt being shared with wakable interrupt can not use passive level handling" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0The PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! was already used to create a passive level interrupt 0x%11!p!, WDFDEVICE 0x%12!p! and is now being used to create a wakable interrupt. A functional passive level interrupt can not be shared with wakable interrupt" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0The PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! was already used to create interrupt 0x%11!p!, WDFDEVICE 0x%12!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

c7f04bfc-a59f-3271-e88b-bfaae31921b5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0All the MSI 2.2 interrupts for PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! are already created, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

c861f5c0-0581-3f38-4f31-d54ae79330e0 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Lower stack returned error for query pnp device state, %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryPnpDeviceStateCompletionRoutine
{
Arg, ItemNTSTATUS -- 10
}

ceb656bb-8230-3092-9f16-5446330a86cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

ceb656bb-8230-3092-9f16-5446330a86cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

ceb656bb-8230-3092-9f16-5446330a86cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set except impersonation flags %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

ceb656bb-8230-3092-9f16-5446330a86cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDF_REQUEST_SEND_OPTION impersonation flags may only be set on Create requests. %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions
{
Arg, ItemNTSTATUS -- 10
}

ceb656bb-8230-3092-9f16-5446330a86cf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Driver must set WDF_REQUEST_SEND_OPTION_IMPERSONATION_IGNORE_FAILURE with WDF_REQUEST_SEND_OPTION_IMPERSONATE_CLIENT. %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions
{
Arg, ItemNTSTATUS -- 10
}

cffed251-e158-383d-0e06-36206f749dab um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current wake interrupt state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWakeInterruptMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxWakeInterruptStates) -- 12
Arg, ItemEnum(FxWakeInterruptEvents) -- 13
}

cffed251-e158-383d-0e06-36206f749dab um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! wake interrupt state %12!s! dropping event %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWakeInterruptMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxWakeInterruptStates) -- 12
Arg, ItemEnum(FxWakeInterruptEvents) -- 13
}

cffed251-e158-383d-0e06-36206f749dab um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering wake interrupt state %12!s! from %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxWakeInterruptMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxWakeInterruptStates) -- 12
Arg, ItemEnum(FxWakeInterruptStates) -- 13
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Invalid Allocation Size of 0 requested" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Allocation Fail Count exceeded" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0overflow: allocation tracker (%10!d!) + header (%11!d!) + pool request (%12!I64d!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0overflow: header + pool request (%10!I64d!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
Arg, ItemLongLong -- 10
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0FxPoolDump: NonPagedBytes %10!I64d!, PagedBytes %11!I64d!, NonPagedAllocations %12!d!, PagedAllocations %13!d!,PeakNonPagedBytes %14!I64d!, PeakPagedBytes %15!I64d!,FxPoolDump: PeakNonPagedAllocations %16!d!, PeakPagedAllocations %17!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Arg, ItemLongLong -- 10
Arg, ItemLongLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLongLong -- 14
Arg, ItemLongLong -- 15
Arg, ItemLong -- 16
Arg, ItemLong -- 17
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0FX_POOL 0x%10!p! leaked paged memory alloc 0x%11!p! (tracking block %12!p!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0FX_POOL 0x%10!p! leaked non-paged memory alloc 0x%11!p! (tracking block %12!p!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Initializing Pool 0x%10!p!, Tracking %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxPoolInitialize
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Initializing paged lock failed for Pool 0x%10!p!, status %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolInitialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

d0d94ecf-8906-34de-ad46-ea1f025e343a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Destroying Pool 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxPoolDestroy
{
Arg, ItemPtr -- 10
}

d148c40f-f491-303e-1199-bcdaab5c6e0a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Resource Descriptor not found %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCmResList::BuildRegisterResourceTable
{
Arg, ItemNTSTATUS -- 10
}

d148c40f-f491-303e-1199-bcdaab5c6e0a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Failed to allocate memory for resource table %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCmResList::BuildRegisterResourceTable
{
Arg, ItemNTSTATUS -- 10
}

d148c40f-f491-303e-1199-bcdaab5c6e0a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Resource Descriptor not found %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCmResList::BuildRegisterResourceTable
{
Arg, ItemNTSTATUS -- 10
}

d148c40f-f491-303e-1199-bcdaab5c6e0a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Resource Descriptor not found %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCmResList::BuildPortResourceTable
{
Arg, ItemNTSTATUS -- 10
}

d148c40f-f491-303e-1199-bcdaab5c6e0a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Failed to allocate memory for resource table %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCmResList::BuildPortResourceTable
{
Arg, ItemNTSTATUS -- 10
}

d148c40f-f491-303e-1199-bcdaab5c6e0a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Resource Descriptor not found %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCmResList::BuildPortResourceTable
{
Arg, ItemNTSTATUS -- 10
}

d148c40f-f491-303e-1199-bcdaab5c6e0a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Resource Descriptor not found %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCmResList::CheckForConnectionResources
{
Arg, ItemNTSTATUS -- 10
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0EvtDeviceD0Entry WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Entry::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0EvtCxDevice%10!s!D0Entry WDFDEVICE 0x%11!p! !devobj 0x%12!p!, old state %13!s! failed, %14!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Entry::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 13
Arg, ItemNTSTATUS -- 14
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0EvtDeviceD0Exit WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Exit::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0EvtCxDevice%10!s!D0Exit WDFDEVICE 0x%11!p! !devobj 0x%12!p!, new state %13!s! failed, %14!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Exit::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 13
Arg, ItemNTSTATUS -- 14
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0EvtDevicePrepareHardware WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDevicePrepareHardware::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0EvtCxDevice%10!s!PrepareHardware WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDevicePrepareHardware::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0EvtDeviceReleaseHardware WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceReleaseHardware::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0EvtCxDevice%10!s!ReleaseHardware WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceReleaseHardware::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0EvtDeviceSelfManagedIoInit WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoInit::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0EvtCxDevice%10!s!SelfManagedIoInit WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoInit::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0EvtDeviceSelfManagedIoInit WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0EvtCxDevice%10!s!SelfManagedIoSuspend WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0EvtDeviceSelfManagedIoRestart WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

d50b59ad-9788-3292-87da-8df298455711 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0EvtCxDevice%10!s!SelfManagedIoRestart WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0IoTypeConfig size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceInitSetIoTypeEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Invalid FileObjectConfig Size %10!d!, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Invalid FileObjectConfig->AutoForwardCleanupClose value 0x%10!x!, expected WDF_TRI_STATE value" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Out of range FileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0FileObjectConfig->FileObjectClass value (%10!d!) has been updated to a UMDF-supported value %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Invalid FileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0PnpPowerEventCallbacks size %10!d! is invalid, exptected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPnpPowerEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Driver can provide either EvtDeviceUsageNotification or EvtDeviceUsageNotificationEx callback but not both" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPnpPowerEventCallbacks
{
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0PowerPolicyEventCallbacks size %10!d! is invalid, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPowerPolicyEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0PowerPolicyEventCallbacks can have either EvtDeviceArmWakeFromSx or EvtDeviceArmWakeFromSxWithReason callback pointer, but not both" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPowerPolicyEventCallbacks
{
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0Out of range WDF_RELEASE_HARDWARE_ORDER_ON_FAILURE %10!d!" //   GLOBALS=DeviceInit->DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetReleaseHardwareOrderOnFailure
{
Arg, ItemLong -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitOpenRegistryKey
{
Arg, ItemNTSTATUS -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0Not a PWDFDEVICE_INIT for an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetFilter
{
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitQueryProperty
{
Arg, ItemNTSTATUS -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Arg, ItemNTSTATUS -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfFdoInitQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfFdoInitAllocAndQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

d86f6503-adc4-382c-2be3-c529fdbeb373 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitAllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

dae18797-1e70-3ae2-efe1-7611834433e5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Size overflow, could not add pool header, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolAddHeaderSize
{
Arg, ItemNTSTATUS -- 10
}

dae18797-1e70-3ae2-efe1-7611834433e5 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Size overflow, could not add pool tracker, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolAddHeaderSize
{
Arg, ItemNTSTATUS -- 10
}

dcabf2ef-db9c-363b-0664-a7019503557a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Out of range ReadWriteIoType %10!d!, %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::AssignIoType
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

dcabf2ef-db9c-363b-0664-a7019503557a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Out of range DeviceControlIoType %10!d!, %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::AssignIoType
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

dcabf2ef-db9c-363b-0664-a7019503557a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WdfDeviceIoNeither not supported for ReadWriteIoType or DeviceControlIoType, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::AssignIoType
{
Arg, ItemNTSTATUS -- 10
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WdfFileObjectWdfCanUseFsContexts is specified, but the Create IRP %10!p! doesn't have a fileObject" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxFileObject::_CreateFileObject
{
Arg, ItemPtr -- 10
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0PFILE_OBJECT in close IRP is NULL, *Possible Leak of FxFileObject*" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxFileObject::_DestroyFileObject
{
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not find WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_DestroyFileObject
{
Arg, ItemPtr -- 10
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Did a different PFILE_OBJECT get passed to IRP_MJ_CLOSE than did to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_DestroyFileObject
{
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0NULL passed for PFILE_OBJECT when FileObject support is requested in an I/O request" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm
{
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Since this is a serial port device, framework is using a workaround to allow this" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm
{
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Could not locate WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm
{
Arg, ItemPtr -- 10
}

dea41d6e-9153-32c9-2673-393c61b12667 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Did a different PFILE_OBJECT get passed to the request than was to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm
{
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Device 0x%10!p! is not the power policy owner, caller cannot set S0 idle settings %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Expected Settings Size %10!d!, got %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0a field (DxState, IdleCaps, Enabled, or UserControlOfIdleSettings) is out range, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0value of field PowerUpIdleDeviceOnSystemWake is out of range, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0value of field PowerUpIdleDeviceOnSystemWake should be set only when IdleCaps is IdleCannotWakeFromS0, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFDEVICE %10!p!, value of field IdleTimeoutType is out of range, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Device 0x%10!p! is not the power policy owner, caller cannot set Sx wake settings %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Expected Settings Size %10!x!, got %11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0a field (DxState, Enabled, or UserControlOfIdleSettings) is out range, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0The subkey cannot be of length zero, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceOpenDevicemapKey
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Unable to allocate memory for WDFKEY object, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceOpenDevicemapKey
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFDEVICE 0x%10!p! DeviceState Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceGetDeviceState
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFDEVICE 0x%10!p!, DeviceState Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetDeviceState
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFDEVICE 0x%10!p! DeviceState WDF_TRI_STATE %11!s! value out of range, value is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetDeviceState
{
Arg, ItemPtr -- 10
Arg, ItemString -- 11
Arg, ItemLong -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDFDEVICE 0x%10!p!   already createdSTATUS_INVALID_DEVICE_STATE" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate
{
Arg, ItemPtr -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Device init: has device class or SDDL set, but does not have a name, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Client called WdfDeviceInitAllowSelfTarget. Self IO Targets are supported only for FDOs, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFDEVICE %10!p!, SymbolicLinkName has no length, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFDEVICE %10!p! already has a symbolic link associated with it, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0WDFDEVICE 0x%10!p! is not a PnP device %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0exit WDFDEVICE %10!p!, Property %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFDEVICE %10!p! is not a PnP device, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0exit WDFDEVICE %10!p!, Property %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Invalid FailedAction %10!d!" //   GLOBALS=pObjectFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetFailed
{
Arg, ItemLong -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0WDFDEVICE %10!p!, !devobj %11!p! SetFailed %12!s!" //   GLOBALS=pObjectFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_FAILED_ACTION) -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0WDFDEVICE %10!p! WdfDeviceStopIdle does nothing if you are not the power policy owner for the stack, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 37 "%0WDFDEVICE %10!p! WdfDeviceStopIdle, WaitForD0 %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 38 "%0WdfDeviceResumeIdle does nothing if you are not the power policy owner for the stack" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=ResumeIdleWorker
{
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 39 "%0WDFDEVICE 0x%10!p! PnpCapabilities Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPnpCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 40 "%0WDFDEVICE 0x%10!p! PnpCapabilities WDF_TRI_STATE %11!s! value out of range, value is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPnpCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemString -- 11
Arg, ItemLong -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 41 "%0WDFDEVICE 0x%10!p! PowerCapabilities Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 42 "%0WDFDEVICE 0x%10!p! PowerCapabilities WDF_TRI_STATE %11!s! value out of range, value is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemString -- 11
Arg, ItemLong -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 43 "%0WDFDEVICE 0x%10!p! PowerCapabilities DeviceState is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 44 "%0WDFDEVICE 0x%10!p! PowerCapabilities DeviceWake %11!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 45 "%0WDFDEVICE 0x%10!p! PowerCapabilities SystemWake %11!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 46 "%0WDFDEVICE 0x%10!p! PowerCapabilities IdealDxStateForSx %11!d! can only be set by the power policy owner" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 47 "%0WDFDEVICE 0x%10!p! PowerCapabilities IdealDxStateForSx %11!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 48 "%0Invalid RequestType %10!s!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 49 "%0Input WDFQUEUE 0x%10!p! doesn't belong to the WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 50 "%0Queue cannot be configured for automatic dispatching after WdfControlDeviceFinishInitializingis called on the WDFDEVICE %10!p! is called %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 51 "%0Queue cannot be configured for automatic dispatchingafter the WDFDEVICE %10!p! is started, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 52 "%0No default Queue configured for Device 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=imp_WdfDeviceGetDefaultQueue
{
Arg, ItemPtr -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 53 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 54 "%0Property buffer size is non-zero, while the buffer is NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 55 "%0Property buffer size is zero, while the buffer is non-NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 56 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAllocAndQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 57 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignProperty
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 58 "%0Property buffer size is zero, while the buffer is non-NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignProperty
{
Arg, ItemNTSTATUS -- 10
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 59 "%0Invalid MajorFunction provided %10!s!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback
{
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 60 "%0Driver cannot set IRP dispatch callback after WdfControlDeviceFinishInitializing is called on the WDFDEVICE %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 61 "%0Driver cannot set IRP dispatch callback after the WDFDEVICE %10!p! is started, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 62 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! %12!s!, IRP_MN %13!x!, IRP 0x%14!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 63 "%0Flags 0x%10!x! are invalid, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 64 "%0Only Read/Write/Control/Internal-Control IRPs can be forwarded to I/O Queue 0x%10!p!, Irp 0x%11!p!, %12!s!, IRP_MN %13!x!, Device 0x%14!p!, %15!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemNTSTATUS -- 15
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 65 "%0I/O Queue 0x%10!p! cannot handle Irp 0x%11!p!, %12!s!, IRP_MN %13!x!, Device 0x%14!p!, %15!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemNTSTATUS -- 15
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 66 "%0No parent device for Device 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 67 "%0WdfPdoInitSetForwardRequestToParent not called on Device 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df17cfe3-501e-3a73-deda-5a2dd8460a72 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 68 "%0Cannot forward a request to a different Device 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

df1f09b8-82ea-3c86-f189-94b0bf78a94c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current device power requirement state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevicePwrRequirementMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementEvents) -- 13
}

df1f09b8-82ea-3c86-f189-94b0bf78a94c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! device power requirement state %12!s! dropping event %13!s!" //   GLOBALS=m_PoxInterface->PkgPnp()->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevicePwrRequirementMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementEvents) -- 13
}

df1f09b8-82ea-3c86-f189-94b0bf78a94c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering device power requirement state %12!s! from %13!s!" //   GLOBALS=m_PoxInterface->PkgPnp()->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxDevicePwrRequirementMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 13
}

e6518cf6-0cad-3865-e6a7-7e64b38c2eee um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Could not allocate workitem: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxDisposeList::Initialize
{
Arg, ItemNTSTATUS -- 10
}

e84b5aa1-751f-3fb5-d60f-21d5a2bab5bc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WdfRequestGetCompletionParams will not return valid information if the request is not formatted using WdfIoTargetFormatxxx DDIs" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CopyCompletionParams
{
}

e84b5aa1-751f-3fb5-d60f-21d5a2bab5bc um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}

e88093a6-5da9-38fa-5040-5fd7e31249e6 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Unable to initialize paged lock for VerifierLock 0x%10!p! status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

e88093a6-5da9-38fa-5040-5fd7e31249e6 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Failed to allocate verifier lock, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}

e88093a6-5da9-38fa-5040-5fd7e31249e6 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Lock 0x%10!p! is being destroyed while owned by thread 0x%11!p!, Owning Object 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::~FxVerifierLock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

e93c12f3-9878-3ada-00d9-52378ed0bb8a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Validation of the config descriptor failed due to a bad common descriptor header, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemNTSTATUS -- 10
}

e93c12f3-9878-3ada-00d9-52378ed0bb8a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Validation of interface descriptors in config descriptor failed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemNTSTATUS -- 10
}

e93c12f3-9878-3ada-00d9-52378ed0bb8a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not allocate memory for %10!d! interfaces, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

e93c12f3-9878-3ada-00d9-52378ed0bb8a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not allocate memory for interface object #%10!d!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

e93c12f3-9878-3ada-00d9-52378ed0bb8a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Config descriptor indicated there were %10!d! interfaces, but did not find any interface descriptors in config descriptor %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e93c12f3-9878-3ada-00d9-52378ed0bb8a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Config descriptor indicated there were 0 interfaces, but an interface descriptor was found" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
}

e93c12f3-9878-3ada-00d9-52378ed0bb8a um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Config descriptor indicated there were %10!d! interfaces, only found %11!d! interfaces" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0FxDevice 0x%10!p! not disposed: this maybe a driver reference count problem with WDFDEVICE %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxDevice::~FxDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE %10!p! !devobj %11!p! created, but EvtDriverDeviceAdd returned status %12!s! or failure in creation" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::DeleteDeviceFromFailedCreateNoDelete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Could not retrieve property %10!d! length, %11!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Could not allocate WDFMEMORY, %10!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemNTSTATUS -- 10
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Could not query for full buffer, size %10!d!, for property %11!d!, %12!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0Could not commit memory object, %10!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemNTSTATUS -- 10
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Could not retrieve property, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0Could not allocate WDFMEMORY, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0Could not query for full buffer, size %10!d!, for property, %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Could not commit memory object, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}

e9519826-54fe-3f76-1757-0f0edef1da06 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Device OpenKey/QueryProperty was called with invalid DeviceInit and Device parameters, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_ValidateOpenKeyParams
{
Arg, ItemNTSTATUS -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFUSBPIPE %10!p! continuous reader queueing work item to recover from failed allocation" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked
{
Arg, ItemPtr -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not Queue workitem" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked
{
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFUSBPIPE %10!p! continuous reader not queueing work item,WorkItemQueued = %11!d!, target state %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFUSBPIPE %10!p! is being reset, continuous reader %11!p! FxRequest %12!p! PIRP %13!p! is deferred for later." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFUSBPIPE %10!p! continuous reader, format failed, %11!s!, repeater %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemPtr -- 12
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WDFUSBPIPE %10!p! continuous reader, buffer alloc failed, but there are %11!d! readers left out of a max of %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0WDFUSBPIPE %10!p! continuous reader, buffer alloc failed, but not in started state" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0WDFUSBPIPE %10!p! continuous reader FxRequest %11!p! PIRP %12!p! returned with %13!s!" //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFUSBPIPE %10!p! continuous reader %11!p! FxRequest %12!p! PIRP %13!p! canceled" //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFUSBPIPE %10!p! continuous reader %11!p! FxRequest %12!p! PIRP %13!p! got asynchronously canceled" //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFUSBPIPE %10!p! converting stop action %11!s! to %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoStopState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_SENT_IO_ACTION) -- 11
Arg, ItemEnum(_WDF_IO_TARGET_SENT_IO_ACTION) -- 12
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFUSBPIPE %10!p! is stopped from EvtUsbTargetPipeReadersFailed callback" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoStopState
{
Arg, ItemPtr -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFUSBPIPE %10!p! converting purge action %11!s! to %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoPurgeState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_PURGE_IO_ACTION) -- 11
Arg, ItemEnum(_WDF_IO_TARGET_PURGE_IO_ACTION) -- 12
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFUSBPIPE %10!p! is purged from EvtUsbTargetPipeReadersFailed callback" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoPurgeState
{
Arg, ItemPtr -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFUSBPIPE %10!p! was not stopped in EvtDeviceD0Exit callback" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoRemoveState
{
Arg, ItemPtr -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDFUSBPIPE %10!p!, waiting for continuous reader work item to complete" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFUSBPIPE %10!p!, cancelling for continuous reader (max of %11!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFUSBPIPE %10!p!, waiting for all i/o to complete" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Continuous reader already initialized on WDFUSBPIPE %10!p! %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::InitContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_FormatTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Failed to initialize FxSyncRequest" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_SendTransfer
{
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_SendTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFUSBPIPE %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_SendTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatAbortRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

eb73d73a-344d-3c7b-1588-843ca861e7b1 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatResetRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

f20fdc06-e2eb-378a-b165-a19165929fd4 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0USB Configuration packet contains bad data, expected at least %10!d! remaining bytes in config descriptor at offset %11!I64d!, total size is %12!I64d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateConfigDescriptorHeaders
{
Arg, ItemLong -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
}

f20fdc06-e2eb-378a-b165-a19165929fd4 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0USB Configuration packet contains bad data, descriptor at offset %10!I64d! specified bLength %11!d!, only %12!I64d! bytes remaining in config descriptor, total size is %13!I64d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateConfigDescriptorHeaders
{
Arg, ItemLongLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemLongLong -- 13
}

f20fdc06-e2eb-378a-b165-a19165929fd4 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0USB Configuration packet contains bad data, descriptor at offset %10!I64d! contains bLength == 0, this is due to a broken device or driver" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateConfigDescriptorHeaders
{
Arg, ItemLongLong -- 10
}

f20fdc06-e2eb-378a-b165-a19165929fd4 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0USB Configuration packet contains bad data, found descriptor #%10!d! of type %11!d! at offset %12!I64d!, expected minimum bLength of %13!I64d!, found %14!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateDescriptorType
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemLongLong -- 13
Arg, ItemLong -- 14
}

f2e0fe4c-a190-3058-9f14-6c64bcfd91db um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0PWDF_TIMER_CONFIG Size %10!d!, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

f2e0fe4c-a190-3058-9f14-6c64bcfd91db um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Period value %10!u! for a periodic timer cannot be greater than MAXLONG, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

f2e0fe4c-a190-3058-9f14-6c64bcfd91db um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0TolerableDelay value %10!u! cannot be greater than MAXLONG, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

f2e0fe4c-a190-3058-9f14-6c64bcfd91db um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0UseHighResolutionTimer option is not supported for UMDF %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Arg, ItemNTSTATUS -- 10
}

f2e0fe4c-a190-3058-9f14-6c64bcfd91db um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Passive level periodic timer is not supported. Use one shot timer and queue the next timer from the callback or use a dedicated thread, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Arg, ItemNTSTATUS -- 10
}

f45c62da-f56a-3d62-d9e0-47c249cb042c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0releasing %10!s! %11!p! on object %12!p! that was not acquired, !wdftagtracker %13!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::UpdateTagHistory
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}

f45c62da-f56a-3d62-d9e0-47c249cb042c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Dropped references on a tag tracker, show references with: !wdftagtracker %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
}

f45c62da-f56a-3d62-d9e0-47c249cb042c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
Arg, ItemLong -- 13
}

f45c62da-f56a-3d62-d9e0-47c249cb042c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Possibly Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!).  Is benign unless there are other outstanding leaked references." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
Arg, ItemLong -- 13
}

f6258275-0c60-3a2e-0729-6162b8c53a13 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFDEVICE 0x%10!p! WdfEventType %11!d! not expected %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDevicePostEvent
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

f6258275-0c60-3a2e-0729-6162b8c53a13 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFDEVICE 0x%10!p! Failed to post event %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDevicePostEvent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f6258275-0c60-3a2e-0729-6162b8c53a13 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Property buffer size is zero, while the buffer is non-NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignInterfaceProperty
{
Arg, ItemNTSTATUS -- 10
}

f6258275-0c60-3a2e-0729-6162b8c53a13 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Property buffer size is non-zero, while the buffer is NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryInterfaceProperty
{
Arg, ItemNTSTATUS -- 10
}

f6258275-0c60-3a2e-0729-6162b8c53a13 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Property buffer size is zero, while the buffer is non-NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryInterfaceProperty
{
Arg, ItemNTSTATUS -- 10
}

f6258275-0c60-3a2e-0729-6162b8c53a13 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0HidNotifyPresence(%10!s!) failed, %11!s! - Make sure to call WdfDeviceInitEnableHidInterface in EvtDriverDeviceAdd before calling WdfDeviceHidNotifyPresence." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceHidNotifyPresence
{
Arg, ItemString -- 10
Arg, ItemNTSTATUS -- 11
}

f714991b-3d96-334a-b8fb-d1b1d7b0b08e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WorkItem destroyed without calling FxSystemWorkItem::Delete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::~FxSystemWorkItem
{
}

f714991b-3d96-334a-b8fb-d1b1d7b0b08e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Could not initialize m_WorkItemCompleted event status %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::Initialize
{
Arg, ItemNTSTATUS -- 10
}

f714991b-3d96-334a-b8fb-d1b1d7b0b08e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0Could not initialize m_RemoveEvent event status %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::Initialize
{
Arg, ItemNTSTATUS -- 10
}

f714991b-3d96-334a-b8fb-d1b1d7b0b08e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not allocate IoWorkItem, insufficient resources" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::Initialize
{
}

f714991b-3d96-334a-b8fb-d1b1d7b0b08e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WorkItem 0x%10!p! already enqueued IoWorkItem 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::EnqueueWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

f714991b-3d96-334a-b8fb-d1b1d7b0b08e um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0WorkItem 0x%10!p! is already deleted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::EnqueueWorker
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0Memory allocation failed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxCompanion::Create
{
Arg, ItemNTSTATUS -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Invoke EvtCompanionPrePrepareHardware (if present) for WDFCOMPANION %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchPrepareHardware
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0EvtCompanionPrepareHardware is not set for WDFCOMPANION 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchPrepareHardware
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0Could not allocate raw resource list for WDFCOMPANION 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchPrepareHardware
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Could not allocate translated resource list for WDFCOMPANION 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchPrepareHardware
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0EvtCompanionPrePrepareHardware for WDFCOMPANION %10!p! returned %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchPrepareHardware
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Invoke EvtCompanionPostReleaseHardware (if present) for WDFCOMPANION %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchReleaseHardware
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0EvtCompanionReleaseHardware is not set for WDFCOMPANION 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchReleaseHardware
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0EvtCompanionPostReleaseHardware for WDFCOMPANION %10!p! returned %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchReleaseHardware
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0Invoke EvtCompanionPreD0Entry (if present) for WDFCOMPANION %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchD0Entry
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0EvtCompanionD0Entry is not set for WDFCOMPANION 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchD0Entry
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0EvtCompanionPreD0Entry for WDFCOMPANION %10!p! returned %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchD0Entry
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0Invoke EvtCompanionPostD0Exit (if present) for WDFCOMPANION %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchD0Exit
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0EvtCompanionD0Exit is not set for WDFCOMPANION 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchD0Exit
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0EvtCompanionPostD0Exit for WDFCOMPANION %10!p! returned %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanion::DispatchD0Exit
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0WDFCOMPANION %10!p! created, but EvtDriverDeviceAdd failed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanion::DeleteCompanionFromFailedCreate
{
Arg, ItemPtr -- 10
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0Invalid TaskQueueId specified for WdfTaskQueueCreate, WDFCOMPANION 0x%10!p!, %11!s!" //   GLOBALS=Companion->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTaskQueueLookup::Insert
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0Failed to allocate task queue array of size(%10!u!) to insert new task queue ,WDFCOMPANION 0x%11!p!, %12!s!" //   GLOBALS=Companion->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTaskQueueLookup::Insert
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WdfTaskQueueCreate called with out of order sequence of TaskQueueId(%10!u!). Previous TaskQueueId was %11!u!, expecting %12!u!, WDFCOMPANION 0x%13!p!, %14!s!" //   GLOBALS=Companion->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTaskQueueLookup::Insert
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}

f9562edc-7493-360f-3f4a-73a8b5ac68d2 companion // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Failed to resize task queue array from %10!u! to %11!u! for new task queue insertion, WDFCOMPANION 0x%12!p!, %13!s!," //   GLOBALS=Companion->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTaskQueueLookup::Insert
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFUSBPIPE %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSetNoMaximumPacketSizeCheck
{
Arg, ItemPtr -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFUSBPIPE %10!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeWriteSynchronously
{
Arg, ItemPtr -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForWrite
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFUSBPIPE %10!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeReadSynchronously
{
Arg, ItemPtr -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Config %10!p! incorrect size %11!d!, expected %12!d! %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0NULL EvtUsbTargetPipeReadComplete not allowed %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0TransferLength of 0 not allowed %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0HeaderLength + TransferLength overflow %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0HeaderLength + TransferLength + TrailerLength overflow %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 20 "%0WDFUSBPIPE %10!p! type %11!s!, only bulk or interrupt pipes can be configured for continous readers, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_USB_PIPE_TYPE) -- 11
Arg, ItemNTSTATUS -- 12
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 21 "%0WDFUSBPIPE %10!p!, wrong direction for continuous reader, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0TransferLength %10!I64d! not a valid transer length (not integral of max packet size %11!d!) %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemLongLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0Failed to initialize FxSyncRequest" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0Pipe %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Arg, ItemPtr -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Invalid request options" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFUSBPIPE %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0Pipe %10!p!, Request %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0Pipe %10!p!, Request %11!p!, status %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0Failed to initialize FxSyncRequest" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 31 "%0WDFUSBPIPE %10!p! reset" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Arg, ItemPtr -- 10
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0Invalid request options" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 33 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 34 "%0WDFUSBPIPE %10!p! reset, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 35 "%0Pipe %10!p!, Request %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForReset
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

fa34443c-442f-3bdb-917f-78e25d84badf um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 36 "%0Pipe %10!p!, Request %11!p! = 0x%12!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForReset
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}

faba3034-141b-3c2d-9982-51c8dc682b54 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_DRIVER_CONFIG got Size %10!d!, expected v1.1 size %11!d! or cur ver size %12!d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

faba3034-141b-3c2d-9982-51c8dc682b54 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0DriverInitFlags 0x%10!x! invalid, valid flags are 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

faba3034-141b-3c2d-9982-51c8dc682b54 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0DriverInitFlags missing WdfDriverInitCompanion, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
Arg, ItemNTSTATUS -- 10
}

faba3034-141b-3c2d-9982-51c8dc682b54 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WdfDriverCreate can only be called one time per WDM PDRIVER_OBJECT %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

faba3034-141b-3c2d-9982-51c8dc682b54 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0Invalid Driver flags or EvtDriverDeviceAdd callback already addedSTATUS_INVALID_PARAMETER" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
}

faba3034-141b-3c2d-9982-51c8dc682b54 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0VersionAvailableParams Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverIsVersionAvailable
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

faba3034-141b-3c2d-9982-51c8dc682b54 um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0IsVersionAvailable, current WDF ver major %10!d!, minor %11!d!, caller asking about major %12!d!, minor %13!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverIsVersionAvailable
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDF_USB_DEVICE_CREATE_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceCreateWithParameters
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0Information size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceRetrieveInformation
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 12 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, StringIndex %13!d!, LandID 0x%14!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 13 "%0WDFMEMORY %10!p! length must be even number of WCHARs, but is %11!I64d! in length, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 14 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 15 "%0Params size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 16 "%0Params Type %10!d! not a valid value, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 17 "%0Params Type %10!d! not supported for UMDF, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 18 "%0WDFUSBDEVICE %10!p! number of interfaces found in the config descriptor does not match bNumInterfaces in config descriptor, failing config operation %11!s!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WdfUsbTargetDeviceSelectConfigType) -- 11
Arg, ItemNTSTATUS -- 12
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 19 "%0WDFUSBDEVICE %10!p! succeeding config operation %11!s! on zero interfaces immediately, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WdfUsbTargetDeviceSelectConfigType) -- 11
Arg, ItemNTSTATUS -- 12
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 22 "%0WDFUSBDEVICE %10!p! SettingPairs Array passed is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 23 "%0WDFUSBDEVICE %10!p! MultiInterface.NumberInterfaces %11!d! != %12!d! (reported num interfaces), %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 24 "%0WDFUSBDEVICE %10!p! SettingPairs contains invalid SettingIndex for WDFUSBINTERFACE %11!p!. Setting index passed in: %12!d!, max index: %13!d!, returning %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 25 "%0Failed to initialize FxSyncRequest" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 26 "%0WDFUSBDEVICE %10!p! control transfer sync" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 27 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 28 "%0WDFUSBDEVICE %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 29 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 30 "%0format control request WDFUSBDEVICE %10!p!, WDFREQWUEST %11!p!, WDFMEMORY %12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}

fbf9112b-2d0b-308f-a834-6b232119048c um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 32 "%0WDFUSBDEVICE %10!p! has %11!d! interfaces, index %12!d! requested, returning NULL handle" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceGetInterface
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}

ff637906-5623-3f0c-1945-284b9e6c1f3b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 10 "%0WDFSPINLOCK %10!p! being released by thread 0x%11!p!, but was never acquired!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxSpinLock::ReleaseLock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}

ff637906-5623-3f0c-1945-284b9e6c1f3b um // SRC=Unknown_cxx00 MJ= MN=
#typev Unknown_cxx00 11 "%0WDFSPINLOCK 0x%10!p! not owned by thread 0x%11!p!, owned by thread 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxSpinLock::ReleaseLock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}

