023c279e-415f-3147-1a7f-a580fb396223 provagent // SRC=exception.h MJ= MN=
#typev exception_h21 10 "%0%!FUNC!: std::bad_alloc caught; out of memory." //   LEVEL=TRACE_LEVEL_ERROR
{
}

023c279e-415f-3147-1a7f-a580fb396223 provagent // SRC=exception.h MJ= MN=
#typev exception_h26 11 "%0%!FUNC!: std::exception caught (what=%10!s!)" //   LEVEL=TRACE_LEVEL_ERROR
{
e.what(), ItemString -- 10
}

023c279e-415f-3147-1a7f-a580fb396223 provagent // SRC=exception.h MJ= MN=
#typev exception_h32 12 "%0%!FUNC!: Unknown c++ exception caught by (...)" //   LEVEL=TRACE_LEVEL_ERROR
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp104 12 "%0%!FUNC!: Activation method = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
methodName.c_str(), ItemWString -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp114 13 "%0%!FUNC!: Delay=%10!s! RetryInterval=%11!s! RetryCount=%12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
Delay.c_str(), ItemWString -- 10
RetryInterval.c_str(), ItemWString -- 11
RetryCount.c_str(), ItemWString -- 12
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp135 14 "%0%!FUNC!: Delay received from provisioning xml = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
delay.c_str(), ItemWString -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp147 15 "%0%!FUNC!: Failed to parse delay" //   LEVEL=TRACE_LEVEL_ERROR
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp152 16 "%0%!FUNC!: Parsed: Hours=%10!d! Minutes=%11!d! Seconds=%12!d! TotalDelayInSeconds=%13!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hours, ItemLong -- 10
minutes, ItemLong -- 11
seconds, ItemLong -- 12
delayInSeconds, ItemULongLong -- 13
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp193 17 "%0%!FUNC!: Task start boundary : %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
startTime, ItemWString -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp213 18 "%0%!FUNC!: Task end boundary : %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
endTime, ItemWString -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp258 19 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp274 20 "%0%!FUNC!: %10!d! existing instances found" //   LEVEL=TRACE_LEVEL_VERBOSE
{
count, ItemLong -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp282 21 "%0%!FUNC!: Unable to get running task instance %10!d! (hr=%11!s!)" //   LEVEL=TRACE_LEVEL_WARNING
{
i, ItemLong -- 10
hr, ItemHRESULT -- 11
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp286 22 "%0%!FUNC!: Stopping existing instance %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
i, ItemLong -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp290 23 "%0%!FUNC!: Unable to stop existing instance (hr=%10!s!)" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp295 24 "%0%!FUNC!: <-----" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp311 25 "%0%!FUNC!: Parsing refresh parameters" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp319 26 "%0%!FUNC!: Unable to instantiate Task Service. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp322 27 "%0%!FUNC!:Task Service instantiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp330 28 "%0%!FUNC!: Unable to connect to the Task Service. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp333 29 "%0%!FUNC!: Connected to Task Service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp340 30 "%0%!FUNC!: Unable to open the root folder. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp343 31 "%0%!FUNC!: Task root folder obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp345 32 "%0%!FUNC!: Loading task xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp351 33 "%0%!FUNC!: Adding activation task data to task xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp359 34 "%0%!FUNC!: CreateTaskParameters() failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp372 35 "%0%!FUNC!: Unable to get delay" //   LEVEL=TRACE_LEVEL_ERROR
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp380 36 "%0%!FUNC!: Creating task boundaries" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp386 37 "%0%!FUNC!: Adding time trigger information to task xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp410 38 "%0%!FUNC!: Creating retry interval for task" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp432 39 "%0%!FUNC!: GetTask for %10!s! returned %11!#x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
taskPath.c_str(), ItemWString -- 10
hrExistingTask, ItemLong -- 11
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp442 40 "%0%!FUNC!: Storing activation parameters in registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp455 41 "%0%!FUNC!: Unable to store activation parameters in registry: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp468 42 "%0%!FUNC!: Registering activation task" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp484 43 "%0%!FUNC!: Unable to register task: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp502 44 "%0%!FUNC!: Unable to instantiate Task Service. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp505 45 "%0%!FUNC!:Task Service instantiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp513 46 "%0%!FUNC!: Unable to connect to the Task Service. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp516 47 "%0%!FUNC!: Connected to Task Service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp523 48 "%0%!FUNC!: Unable to open the task folder. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp526 49 "%0%!FUNC!: Task folder obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp534 50 "%0%!FUNC!: Unable to delete the task. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp537 51 "%0%!FUNC!: Task deleted" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp539 52 "%0%!FUNC!: Removing activation parameters from registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp560 53 "%0%!FUNC!: Unable to delete activation parameters from registry. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp563 54 "%0%!FUNC!: Activation parameters deleted from registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp70 10 "%0%!FUNC!: Creating the activation task" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

08522ef2-25ba-3fe2-b857-03db650535c2 provcore // SRC=activationhandler.cpp MJ= MN=
#typev activationhandler_cpp80 11 "%0%!FUNC!: Removing the activation task" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp147 15 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp206 16 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp231 17 "%0%!FUNC!: Checking for access for network account id %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pszNetworkAccountId, ItemWString -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp247 18 "%0%!FUNC!: Instantiating provisioning agent for network account id %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pszNetworkAccountId, ItemWString -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp269 19 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp277 20 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp297 21 "%0%!FUNC!: Failed to create ProvisioningAgent instance" //   LEVEL=TRACE_LEVEL_ERROR
{
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp305 22 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp36 10 "%0%!FUNC!: -----> networkAccountId = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
MbaeNetworkAccountId.c_str(), ItemWString -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp42 11 "%0%!FUNC!: <----- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp52 12 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp56 13 "%0%!FUNC!: <----- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

0edf5cbf-a51a-335d-2b15-666d3cc9900a provagent // SRC=ProvisioningAgent.cpp MJ= MN=
#typev ProvisioningAgent_cpp84 14 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp101 15 "%0%!FUNC!: Name=%10!s! Priority=%11!d! Guid=%12!s! Media=WWAN" //   LEVEL=TRACE_LEVEL_VERBOSE
{
profileName.c_str(), ItemWString -- 10
priority, ItemLong -- 11
&interfaceGuid, ItemGuid -- 12
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp127 16 "%0%!FUNC!: Out of memory. Could not allocate profile list" //   LEVEL=TRACE_LEVEL_ERROR
{
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp133 17 "%0%!FUNC!: Copying profiles to WCM_PROFILE_INFO_LIST" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp150 18 "%0%!FUNC!: Name=%10!s! Guid=%11!s! Media=%12!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
wcmProfileList->ProfileInfo[iter].strProfileName, ItemWString -- 10
&(wcmProfileList->ProfileInfo[iter].AdapterGUID), ItemGuid -- 11
WcmMediaTypeToString(wcmProfileList->ProfileInfo[iter].Media).c_str(), ItemWString -- 12
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp158 19 "%0%!FUNC!: WCM_PROFILE_INFO_LIST Count=%10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
wcmProfileList->dwNumberOfItems, ItemLong -- 10
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp36 10 "%0%!FUNC!: WlanOpenHandle failed with error code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwResult, ItemWINERROR -- 10
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp50 11 "%0%!FUNC!: WlanEnumInterfaces failed with error code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwResult, ItemWINERROR -- 10
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp57 12 "%0%!FUNC!: No WLAN interfaces" //   LEVEL=TRACE_LEVEL_ERROR
{
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp72 13 "%0%!FUNC!: Name=%10!s! Priority=%11!d! Guid=%12!s! Media=WLAN" //   LEVEL=TRACE_LEVEL_VERBOSE
{
profileName.c_str(), ItemWString -- 10
priority, ItemLong -- 11
&Interface.InterfaceGuid, ItemGuid -- 12
}

0f464bdd-0de4-3d8d-e5f2-ac5ced5131a4 provcore // SRC=ProfileListUtil.cpp MJ= MN=
#typev ProfileListUtil_cpp92 14 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp113 16 "%0%!FUNC!: Provisioned CarrierId: %10!s! Provisioned SubscriberId: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
provisionedCarrierId.c_str(), ItemWString -- 10
provisionedSubscriberId.c_str(), ItemWString -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp120 17 "%0%!FUNC!: <----- Provisioned Profile: %10!s! hr = %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileName.c_str(), ItemWString -- 10
hr, ItemHRESULT -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp126 18 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp134 19 "%0%!FUNC!: Cannot retrieve carrierId id from network account id" //   LEVEL=TRACE_LEVEL_ERROR
{
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp141 20 "%0Retrieved carrierId as %10!s! for network account id %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
carrierId.c_str(), ItemWString -- 10
AccountId.c_str(), ItemWString -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp164 21 "%0Interface %10!s! does not have provisioning data on profile %11!s! (hr=%12!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&guid, ItemGuid -- 10
ProfileName.c_str(), ItemWString -- 11
hr, ItemHRESULT -- 12
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp174 22 "%0GetCarrierSubscriberFromBlob failed for Interface %10!s! (hr=%11!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&guid, ItemGuid -- 10
hr, ItemHRESULT -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp177 23 "%0%!FUNC!: Provisioned CarrierId: %10!s! Provisioned SubscriberId: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
provisionedCarrierId.c_str(), ItemWString -- 10
provisionedSubscriberId.c_str(), ItemWString -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp188 24 "%0%!FUNC!: <----- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp212 25 "%0%!FUNC!: Changing cost on from %10!08x! to %11!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
oldConnectionCost, ItemLong -- 10
CostData.ConnectionCost, ItemLong -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp233 26 "%0%!FUNC!: Changing usage from %10!d! to %11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
oldUsage, ItemLong -- 10
m_UsageInMegabytes, ItemLong -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp250 27 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp278 28 "%0%!FUNC!: <----- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp286 29 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp294 30 "%0%!FUNC!: LastSyncTime is invalid" //   LEVEL=TRACE_LEVEL_ERROR
{
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp302 31 "%0%!FUNC!: unable to convert last sync time: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp317 32 "%0%!FUNC!: <----- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp44 10 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp65 11 "%0%!FUNC!: <----- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp71 12 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp87 13 "%0Retrieved interface as %10!s! for network account id %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&interfaceGuid, ItemGuid -- 10
MbaeNetworkAccountId.c_str(), ItemWString -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp95 14 "%0Retrieved default profile as %10!s! for interface %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
defaultProfileName.c_str(), ItemWString -- 10
&interfaceGuid, ItemGuid -- 11
}

15355003-82db-33bc-a930-77dc72bc8a7d provagent // SRC=ProvisionedProfile.cpp MJ= MN=
#typev ProvisionedProfile_cpp99 15 "%0Interface %10!s! does not have provisioning data on profile %11!s! (hr=%12!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
defaultProfileName.c_str(), ItemWString -- 11
hr, ItemHRESULT -- 12
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp107 16 "%0%!FUNC!: Getting the mbn profile-interface list" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp115 17 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp127 18 "%0%!FUNC!: WwanGetProfileList failed for interface %10!s! with error code = %11!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
dwResult, ItemLong -- 11
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp137 19 "%0%!FUNC!: Adding interface %10!s! and profile %11!s! to list" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
Profile.strProfileName, ItemWString -- 11
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp162 20 "%0%!FUNC!: WcmQueryParameter failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
profilePair.second.c_str(), ItemWString -- 10
&profilePair.first, ItemGuid -- 11
dwResult, ItemLong -- 12
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp169 21 "%0%!FUNC!: Setting plan information for profile %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
profilePair.second.c_str(), ItemWString -- 10
&profilePair.first, ItemGuid -- 11
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp206 22 "%0%!FUNC!: WcmQueryParameter failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
interfaceProfile.second.c_str(), ItemWString -- 10
&interfaceProfile.first, ItemGuid -- 11
dwResult, ItemLong -- 12
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp213 23 "%0%!FUNC!: Setting plan information for profile %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
interfaceProfile.second.c_str(), ItemWString -- 10
&interfaceProfile.first, ItemGuid -- 11
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp258 24 "%0%!FUNC!: No Plans node" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp267 25 "%0%!FUNC!: No Plan nodes specified" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp300 26 "%0%!FUNC!: Setting plan %10!s! for wlan profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
planName.c_str(), ItemWString -- 10
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp320 27 "%0%!FUNC!: Setting plan %10!s! for mbn profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
planName.c_str(), ItemWString -- 10
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp35 10 "%0%!FUNC!: Getting the wlan profile-interface list" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp50 11 "%0%!FUNC!: WlanOpenHandle failed with error code = %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwResult, ItemLong -- 10
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp63 12 "%0%!FUNC!: WlanEnumInterfaces failed with error code = %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwResult, ItemLong -- 10
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp70 13 "%0%!FUNC!: No WLAN interfaces" //   LEVEL=TRACE_LEVEL_WARNING
{
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp87 14 "%0%!FUNC!: WlanGetProfileList failed for interface %10!s! with error code = %11!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
Interface.strInterfaceDescription, ItemWString -- 10
dwResult, ItemLong -- 11
}

17be5ca0-8217-3548-33d7-2167f3fa98ef provcore // SRC=planhandler.cpp MJ= MN=
#typev planhandler_cpp97 15 "%0%!FUNC!: Adding interface %10!s! and profile %11!s! to list" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&Interface.InterfaceGuid, ItemGuid -- 10
Profile.strProfileName, ItemWString -- 11
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h27 10 "%0%!FUNC!: HrException caught: error=%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h32 11 "%0%!FUNC!: **** Xml::Exception caught ****" //   LEVEL=TRACE_LEVEL_ERROR
{
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h33 12 "%0%!FUNC!: Code=%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h34 13 "%0%!FUNC!: Description=%10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
static_cast<LPCWSTR>(e.Description()), ItemWString -- 10
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h37 14 "%0%!FUNC!: Converting parse error to PROVCORE_E_XML_MALFORMED" //   LEVEL=TRACE_LEVEL_ERROR
{
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h44 15 "%0%!FUNC!: AtlException caught; error=%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h48 16 "%0%!FUNC!: std::bad_alloc caught; out of memory." //   LEVEL=TRACE_LEVEL_ERROR
{
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h53 17 "%0%!FUNC!: std::exception caught (what=%10!s!)" //   LEVEL=TRACE_LEVEL_ERROR
{
e.what(), ItemString -- 10
}

181f5cd0-abee-3d06-3fb4-2a600bea84e0 provcore // SRC=exception.h MJ= MN=
#typev exception_h59 18 "%0%!FUNC!: Unknown c++ exception caught by (...)" //   LEVEL=TRACE_LEVEL_ERROR
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp115 19 "%0%!FUNC!: Unable to retrieve interface object info for interface %10!s!: hr = %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
&intfGuid, ItemGuid -- 10
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp123 20 "%0%!FUNC!: interface=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&intfGuid, ItemGuid -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp130 21 "%0%!FUNC!: Interface found. guid == %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&intfGuid, ItemGuid -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp131 22 "%0%!FUNC!: Interface name = %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
pInterfaceObject->strInterfaceDescription, ItemWString -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp137 23 "%0%!FUNC!: Unable to find interface." //   LEVEL=TRACE_LEVEL_ERROR
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp144 24 "%0%!FUNC!: Opening handle to the WWAN service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp154 25 "%0%!FUNC!: Unable to open the handle: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp172 26 "%0%!FUNC!: Locating interface for deviceId %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
DeviceId.c_str(), ItemWString -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp178 27 "%0%!FUNC!: FindInterfaceUsingDeviceId failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp184 28 "%0%!FUNC!: Locating interface for subscriber %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
SubscriberId.c_str(), ItemWString -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp190 29 "%0%!FUNC!: FindInterfaceUsingSubscriberId failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp196 30 "%0%!FUNC!: SubscriberId and DeviceId are both empty" //   LEVEL=TRACE_LEVEL_ERROR
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp208 31 "%0%!FUNC!: subscriberId="%10!s!" readystatus=%11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pInterfaceObject.readyObject.readyInfo.SubscriberId, ItemWString -- 10
pInterfaceObject.readyObject.uStatus, ItemLong -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp218 32 "%0%!FUNC!: SubscriberId matches" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp233 33 "%0%!FUNC!: deviceId="%10!s!" readystatus=%11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pInterfaceObject.deviceObject.deviceCaps.DeviceId, ItemWString -- 10
pInterfaceObject.deviceObject.uStatus, ItemLong -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp243 34 "%0%!FUNC!: DeviceId matches" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp310 35 "%0%!FUNC!: WwanConnect returned %10!s! (id=%11!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
connectionId, ItemLong -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp318 36 "%0%!FUNC!: WwanDisconnect returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp36 10 "%0%!FUNC!: Unable to retrieve profile list for interface %10!s!: hr = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
&InterfaceGuid, ItemGuid -- 10
hr, ItemHRESULT -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp390 37 "%0%!FUNC!: Unable to retrieve interface object for interface %10!s!: hr = %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
&InterfaceGuid, ItemGuid -- 10
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp41 11 "%0%!FUNC!: Enumerating %10!d! profile(s)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pProfileList->dwNumberOfItems, ItemLong -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp444 38 "%0%!FUNC!: Registering for MSM and PNP notifications" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp45 12 "%0%!FUNC!: Retrieving profile "%10!s!"" //   LEVEL=TRACE_LEVEL_VERBOSE
{
currentProfileName, ItemWString -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp457 39 "%0%!FUNC!: WwanRegisterNotification error:  hr = %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp470 40 "%0%!FUNC!: Deregistering for notification" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp483 41 "%0%!FUNC!: WwanRegisterNotification error:  hr = %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp508 42 "%0%!FUNC!: Unable to retrieve interface object for interface %10!s!: hr = %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
&InterfaceGuid, ItemGuid -- 10
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp52 13 "%0%!FUNC!: Unable to retrieve profile: hr = %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp545 43 "%0%!FUNC!: Unable to retrieve interface object for interface %10!s!: hr = %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
&InterfaceGuid, ItemGuid -- 10
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp575 44 "%0%!FUNC!: Unable to retrieve interface object for interface %10!s!: hr = %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
&InterfaceGuid, ItemGuid -- 10
HRESULT_FROM_WIN32(errCode), ItemHRESULT -- 11
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp60 14 "%0%!FUNC!: Default profile name = "%10!s!"" //   LEVEL=TRACE_LEVEL_INFORMATION
{
currentProfileName, ItemWString -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp604 45 "%0%!FUNC!: Locating the default profile..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp609 46 "%0%!FUNC!: Could not locate default profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp617 47 "%0%!FUNC!: Default profile not provisioned for specified carrier and subscriber: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwResult, ItemWINERROR -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp636 48 "%0%!FUNC!: Locating the purchase profile..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp640 49 "%0%!FUNC!: Could not locate purchase profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp648 50 "%0%!FUNC!: Purchase profile not provisioned for specified carrier and subscriber: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwResult, ItemWINERROR -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp66 15 "%0%!FUNC!: Unable to find profile." //   LEVEL=TRACE_LEVEL_ERROR
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp83 16 "%0%!FUNC!: WwanEnumerateInterfaces failed with error code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
errCode, ItemWINERROR -- 10
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp90 17 "%0%!FUNC!: No WWAN interfaces" //   LEVEL=TRACE_LEVEL_ERROR
{
}

184e2ea9-7ab3-3ca2-1609-b4ebc387a20e provcore // SRC=wwanutil.cpp MJ= MN=
#typev wwanutil_cpp94 18 "%0%!FUNC!: Enumerating %10!d! interfaces" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pInterfaceList->dwNumberOfItems, ItemLong -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp102 12 "%0%!FUNC!: No data class names to set" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp132 14 "%0%!FUNC!: Setting the wcm_intf_opcode_bearer_classes opcode on the default profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp141 15 "%0%!FUNC!: WcmSetParameterFromString failed for opcode wcm_intf_opcode_bearer_classes with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp148 16 "%0%!FUNC!: Setting the wcm_intf_opcode_bearer_classes opcode on the purchase profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp157 17 "%0%!FUNC!: WcmSetParameterFromString failed for opcode wcm_intf_opcode_bearer_classes with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp183 18 "%0%!FUNC!: No customer support phone number to set" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp191 19 "%0%!FUNC!: Setting the wcm_intf_opcode_support_number opcode" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp200 20 "%0%!FUNC!: WcmSetParameterFromBlob failed for opcode wcm_intf_opcode_support_number with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp242 21 "%0%!FUNC!: No <CarrierNetworkMetadata>; nothing to do" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp252 22 "%0%!FUNC!: No <NetworkSettings>, <DataClassFriendlyNames> or <CustomerSupportPhoneNumber> node" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp263 23 "%0%!FUNC!: No Network Settings to set. Previously provisioned settings will be deleted." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp276 24 "%0%!FUNC!: No Data Class Names to set. Previously provisioned names will be deleted." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp289 25 "%0%!FUNC!: No Customer Support Phone Number to set. Previously provisioned settings will be deleted." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp294 26 "%0%!FUNC!: Nothing to provision here" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp309 27 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp314 28 "%0%!FUNC!: Retrieving the provisioned default profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp318 29 "%0%!FUNC!: Could not locate provisioned default profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp325 30 "%0%!FUNC!: Setting the Network connection settings" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp330 31 "%0%!FUNC!: Retrieving the provisioned purchase profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp334 32 "%0%!FUNC!: Could not locate provisioned purchase profile: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp341 33 "%0%!FUNC!: Setting the Data Class Friendly Names" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp348 34 "%0%!FUNC!: Setting the Customer support phone number" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp386 35 "%0%!FUNC!: Deleting the carrier settings for carrierId=%10!s! subscriberId=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Params.CarrierId.c_str(), ItemWString -- 10
m_Params.SubscriberId.c_str(), ItemWString -- 11
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp407 36 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp412 37 "%0%!FUNC!: Retrieving the provisioned default profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp416 38 "%0%!FUNC!: Could not locate provisioned default profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp424 39 "%0%!FUNC!: Deleting the wcm_intf_opcode_connection_settings opcode" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp432 40 "%0%!FUNC!: WcmDeleteParameter failed for opcode wcm_intf_opcode_connection_settings with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp458 41 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp463 42 "%0%!FUNC!: Retrieving the provisioned default profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp467 43 "%0%!FUNC!: Could not locate provisioned default profile: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp471 44 "%0%!FUNC!: Retrieving the provisioned purchase profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp475 45 "%0%!FUNC!: Could not locate provisioned purchase profile: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp484 46 "%0%!FUNC!: Deleting the wcm_intf_opcode_bearer_classes opcode for the default profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp492 47 "%0%!FUNC!: WcmDeleteParameter failed for opcode wcm_intf_opcode_bearer_classes with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp498 48 "%0%!FUNC!: Deleting the wcm_intf_opcode_bearer_classes opcode for the purchase profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp506 49 "%0%!FUNC!: WcmDeleteParameter failed for opcode wcm_intf_opcode_bearer_classes with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp533 50 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp538 51 "%0%!FUNC!: Retrieving the provisioned default profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp542 52 "%0%!FUNC!: Could not locate provisioned default profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp550 53 "%0%!FUNC!: Deleting the wcm_intf_opcode_support_number opcode" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp558 54 "%0%!FUNC!: WcmDeleteParameter failed for opcode wcm_intf_opcode_support_number with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp65 10 "%0%!FUNC!: Setting the wcm_intf_opcode_connection_settings opcode" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

1eb2ffee-d412-31bd-15e3-bba772cb6f9c provcore // SRC=NetworkSettingHandler.cpp MJ= MN=
#typev NetworkSettingHandler_cpp75 11 "%0%!FUNC!: WcmSetParameterFromBlob failed for opcode wcm_intf_opcode_connection_settings with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp150 11 "%0%!FUNC!: Task deletion flag not present in task params" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp172 12 "%0%!FUNC!: Parsing refresh parameters" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp182 13 "%0%!FUNC!: Unable to instantiate Task Service. %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp185 14 "%0%!FUNC!:Task Service instantiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp193 15 "%0%!FUNC!: Unable to connect to the Task Service. %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp196 16 "%0%!FUNC!: Connected to Task Service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp203 17 "%0%!FUNC!: Unable to open the root folder. %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp206 18 "%0%!FUNC!: Task root folder obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp208 19 "%0%!FUNC!: Loading task xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp214 20 "%0%!FUNC!: Adding task payload to task xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp222 21 "%0%!FUNC!: CreateTaskParameters() failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp232 22 "%0%!FUNC!: Adding maintenance settings information to task xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp248 23 "%0%!FUNC!: Registering refresh task" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp264 24 "%0%!FUNC!: Unable to register task: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp268 25 "%0%!FUNC!: Storing refresh parameters in registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp285 26 "%0%!FUNC!: Task deletion flag value = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
taskDeletionFlag.c_str(), ItemWString -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp292 27 "%0%!FUNC!: Unable to store refresh parameters in registry: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp313 28 "%0%!FUNC!: Unable to instantiate Task Service. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp316 29 "%0%!FUNC!:Task Service instantiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp324 30 "%0%!FUNC!: Unable to connect to the Task Service. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp327 31 "%0%!FUNC!: Connected to Task Service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp334 32 "%0%!FUNC!: Unable to open the task folder. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp337 33 "%0%!FUNC!: Task folder obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp345 34 "%0%!FUNC!: Unable to delete the task. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp348 35 "%0%!FUNC!: Task deleted" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp350 36 "%0%!FUNC!: Removing refresh parameters from registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp371 37 "%0%!FUNC!: Unable to delete refresh parameters from registry. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp374 38 "%0%!FUNC!: Refresh parameters deleted from registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp396 39 "%0%!FUNC!: TrustedCertificate node %10!d! is not empty" //   LEVEL=TRACE_LEVEL_VERBOSE
{
iter, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp402 40 "%0%!FUNC!: TrustedCertificate node %10!d! is empty" //   LEVEL=TRACE_LEVEL_VERBOSE
{
iter, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp408 41 "%0%!FUNC!: Replacing trusted certificates" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp449 43 "%0%!FUNC!: No Provisioning node" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp460 44 "%0%!FUNC!: Nothing to provision" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp466 45 "%0%!FUNC!: Creating the refresh trigger" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp479 46 "%0%!FUNC!: Removing existing refresh trigger if any" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp485 47 "%0%!FUNC!: Storing trusted certificates" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp513 48 "%0%!FUNC!: Removing trusted certificates" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp529 49 "%0%!FUNC!: Unable to remove trusted certificates. %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemLong -- 10
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp533 50 "%0%!FUNC!: Trusted certificates removed" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

202c4d27-1597-3fee-fce9-1937fc4aa86a provcore // SRC=enginehandler.cpp MJ= MN=
#typev enginehandler_cpp63 10 "%0%!FUNC!: Task delay : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
DelayInDays.c_str(), ItemWString -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp107 12 "%0%!FUNC!: Retreived existing cost data for %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp120 13 "%0%!FUNC!: Retreived existing data plan status for %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp164 14 "%0%!FUNC!: WcmSetParameterFromPOD failed for opcode cost_data_operator with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp174 15 "%0%!FUNC!: WcmSetParameterFromPOD failed for opcode wcm_intf_opcode_cost_profile_data_operator with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp180 16 "%0%!FUNC!: WcmSetParameterFromPOD failed for opcode wcm_intf_opcode_plan_policy with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp194 17 "%0%!FUNC!: Cost node is empty" //   LEVEL=TRACE_LEVEL_WARNING
{
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp237 18 "%0%!FUNC!: Billing cycle start date cannot be empty" //   LEVEL=TRACE_LEVEL_WARNING
{
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp243 19 "%0%!FUNC!: Billing cycle duration cannot be empty" //   LEVEL=TRACE_LEVEL_WARNING
{
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp273 20 "%0%!FUNC!: Preserving existing plan type = 0x%10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_ConnectionCostData->ConnectionCost, ItemLong -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp343 21 "%0%!FUNC!: Failed to convert "%10!s!" to filetime while parsing billing cycle start date" //   LEVEL=TRACE_LEVEL_WARNING
{
billingCycle->StartDate.c_str(), ItemWString -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp348 22 "%0%!FUNC!: Failed to convert "%10!s!" to duration while parsing billing cycle duration" //   LEVEL=TRACE_LEVEL_WARNING
{
billingCycle->Duration.c_str(), ItemWString -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp365 23 "%0%!FUNC!: Failed to convert "%10!s!" to filetime while parsing the usage timestamp" //   LEVEL=TRACE_LEVEL_WARNING
{
usageTimestamp.c_str(), ItemWString -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp379 24 "%0%!FUNC!: UserSMSEnabled value is %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_PlanPolicy->UserSMSEnabled, ItemListLong(false,true) -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp385 25 "%0%!FUNC!: SecurityUpdatesExempt value is %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_PlanPolicy->securityUpdateExempt, ItemListLong(false,true) -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp391 26 "%0%!FUNC!: profileUsageNotificationEnabled value is %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_PlanPolicy->DataUsageInMobileOperatorNotificationEnabled, ItemListLong(false,true) -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp41 10 "%0%!FUNC!: Invalid cost string %10!s!" //   LEVEL=TRACE_LEVEL_FATAL
{
CostString.c_str(), ItemWString -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp414 27 "%0%!FUNC!: Associated plan found" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp418 28 "%0%!FUNC!: No associated plan found" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp430 29 "%0%!FUNC!: WcmDeleteParameter failed for opcode cost_data_operator with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp444 30 "%0%!FUNC!: DusmSetOperatorDataPlan failed with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp450 31 "%0%!FUNC!: WcmDeleteParameter failed for opcode wcm_intf_opcode_plan_policy with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

2a6c4c33-0794-39db-cd5b-0730953222d3 provcore // SRC=dusmutil.cpp MJ= MN=
#typev dusmutil_cpp94 11 "%0%!FUNC!: Getting existing cost for profile %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp103 14 "%0%!FUNC!: Creating %10!p!\%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
rootKey, ItemPtr -- 10
keyPath.c_str(), ItemWString -- 11
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp116 15 "%0%!FUNC!: Failed with %10!s!; throwing exception." //   LEVEL=TRACE_LEVEL_ERROR
{
ret, ItemWINERROR -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp122 16 "%0%!FUNC!: New key created" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp126 17 "%0%!FUNC!: Key already exists" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp148 18 "%0%!FUNC!: GetSecurityDescriptor failed with %10!s!; throwing exception." //   LEVEL=TRACE_LEVEL_ERROR
{
ret, ItemWINERROR -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp154 19 "%0%!FUNC!: Creating %10!p!\%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
rootKey, ItemPtr -- 10
keyPath.c_str(), ItemWString -- 11
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp167 20 "%0%!FUNC!: Failed with %10!s!; throwing exception." //   LEVEL=TRACE_LEVEL_ERROR
{
ret, ItemWINERROR -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp173 21 "%0%!FUNC!: New key created" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp177 22 "%0%!FUNC!: Key already exists" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp188 23 "%0%!FUNC!: Opening %10!p!\%11!s! (transacted)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
rootKey, ItemPtr -- 10
keyPath.c_str(), ItemWString -- 11
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp204 24 "%0%!FUNC!: Failed with %10!s!; throwing exception." //   LEVEL=TRACE_LEVEL_ERROR
{
ret, ItemWINERROR -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp213 25 "%0%!FUNC!: Creating %10!p!\%11!s! (transacted)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
rootKey, ItemPtr -- 10
keyPath.c_str(), ItemWString -- 11
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp228 26 "%0%!FUNC!: Failed with %10!s!; throwing exception." //   LEVEL=TRACE_LEVEL_ERROR
{
ret, ItemWINERROR -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp234 27 "%0%!FUNC!: New key created" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp238 28 "%0%!FUNC!: Key already exists" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp41 10 "%0%!FUNC!: Security descriptor string %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
strSecurityDescriptor.c_str(), ItemWString -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp440 34 "%0%!FUNC!: Failed with %10!s!; throwing exception." //   LEVEL=TRACE_LEVEL_ERROR
{
ret, ItemWINERROR -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp48 11 "%0%!FUNC!: ConvertStringSecurityDescriptorToSecurityDescriptor error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp483 35 "%0%!FUNC!: Unable to create transaction handle: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp509 36 "%0%!FUNC!: CommitTransaction failed: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp788 38 "%0%!FUNC!: RegEnumKeyEx failed with hr=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp79 12 "%0%!FUNC!: Opening %10!p!\%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
rootKey, ItemPtr -- 10
keyPath.c_str(), ItemWString -- 11
}

3d46248f-3187-343c-6a7a-dcb75d02b68d provcore // SRC=registry.cpp MJ= MN=
#typev registry_cpp94 13 "%0%!FUNC!: Failed with %10!s!; throwing exception." //   LEVEL=TRACE_LEVEL_ERROR
{
ret, ItemWINERROR -- 10
}

4244cfb8-e772-3dd3-88e1-827daf908573 provagent // SRC=callingapp.cpp MJ= MN=
#typev callingapp_cpp108 15 "%0%!FUNC!: IsInDesktopWindowBand = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
fRet, ItemListLong(false,true) -- 10
}

4244cfb8-e772-3dd3-88e1-827daf908573 provagent // SRC=callingapp.cpp MJ= MN=
#typev callingapp_cpp126 16 "%0%!FUNC!: IsWindowInCallingProcess = %10!s!, hr = %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
isWindowInCallingProcess, ItemListLong(false,true) -- 10
hr, ItemHRESULT -- 11
}

4244cfb8-e772-3dd3-88e1-827daf908573 provagent // SRC=callingapp.cpp MJ= MN=
#typev callingapp_cpp20 10 "%0%!FUNC!: CallingProcessAppId = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pszAppId, ItemWString -- 10
}

4244cfb8-e772-3dd3-88e1-827daf908573 provagent // SRC=callingapp.cpp MJ= MN=
#typev callingapp_cpp37 11 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

4244cfb8-e772-3dd3-88e1-827daf908573 provagent // SRC=callingapp.cpp MJ= MN=
#typev callingapp_cpp72 12 "%0%!FUNC!: CallerIsAppContainer = %10!s!, hr = %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
IsCallerAppContainer, ItemListLong(false,true) -- 10
hr, ItemHRESULT -- 11
}

4244cfb8-e772-3dd3-88e1-827daf908573 provagent // SRC=callingapp.cpp MJ= MN=
#typev callingapp_cpp88 13 "%0%!FUNC!: AppId = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
AppId.c_str(), ItemWString -- 10
}

4244cfb8-e772-3dd3-88e1-827daf908573 provagent // SRC=callingapp.cpp MJ= MN=
#typev callingapp_cpp92 14 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp104 28 "%0%!FUNC!: ActivationComplete     : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.ActivationComplete.GetValue(), ItemListLong(false,true) -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp108 29 "%0%!FUNC!: ActivationComplete     : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp113 30 "%0%!FUNC!: PlanType               : %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.PlanType.GetValue(), ItemLong -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp117 31 "%0%!FUNC!: PlanType               : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp120 32 "%0%!FUNC!: Silent                 : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.Silent, ItemListLong(false,true) -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp13 10 "%0%!FUNC!: Usage                  : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.Usage.GetValue(), ItemDouble -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp17 11 "%0%!FUNC!: Usage                  : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp22 12 "%0%!FUNC!: UsagePercent           : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.UsagePercent.GetValue(), ItemDouble -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp26 13 "%0%!FUNC!: UsagePercent           : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp31 14 "%0%!FUNC!: UsageOverage           : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.UsageOverage.GetValue(), ItemDouble -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp35 15 "%0%!FUNC!: UsageOverage           : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp40 16 "%0%!FUNC!: UsageOveragePercent    : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.UsageOveragePercent.GetValue(), ItemDouble -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp44 17 "%0%!FUNC!: UsageOveragePercent    : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp49 18 "%0%!FUNC!: UsageCap               : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.UsageCap.GetValue(), ItemDouble -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp53 19 "%0%!FUNC!: UsageCap               : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp58 20 "%0%!FUNC!: UsageOvercap           : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.UsageOvercap.GetValue(), ItemListLong(false,true) -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp62 21 "%0%!FUNC!: UsageOvercap           : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp67 22 "%0%!FUNC!: Bandwidth Throttled    : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.BandwidthThrottled.GetValue(), ItemListLong(false,true) -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp71 23 "%0%!FUNC!: Bandwidth Throttled    : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp80 24 "%0%!FUNC!: UsageTimestamp         : %10!04d!-%11!02d!-%12!02d!T%13!02d!:%14!02d!:%15!02d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
systemTime.wYear, ItemLong -- 10
systemTime.wMonth, ItemLong -- 11
systemTime.wDay, ItemLong -- 12
systemTime.wHour, ItemLong -- 13
systemTime.wMinute, ItemLong -- 14
systemTime.wSecond, ItemLong -- 15
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp90 25 "%0%!FUNC!: UsageTimestamp         : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp95 26 "%0%!FUNC!: Refresh                : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.Refresh.GetValue(), ItemListLong(false,true) -- 10
}

42a5d928-029f-3aa1-3ff7-5842d85ad187 provnotif // SRC=extratracing.cpp MJ= MN=
#typev extratracing_cpp99 27 "%0%!FUNC!: Refresh                : <unbound>" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4589752e-e0bc-304d-9de6-cdcdb6fb8bcd provnotif // SRC=registryconfig.cpp MJ= MN=
#typev registryconfig_cpp115 12 "%0%!FUNC!: Unable to duplicate key handle! (%10!08x!)" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

4589752e-e0bc-304d-9de6-cdcdb6fb8bcd provnotif // SRC=registryconfig.cpp MJ= MN=
#typev registryconfig_cpp265 13 "%0%!FUNC!: Unable to open path %10!s! (%11!08x!)" //   LEVEL=TRACE_LEVEL_WARNING
{
Path.c_str(), ItemWString -- 10
ret, ItemLong -- 11
}

4589752e-e0bc-304d-9de6-cdcdb6fb8bcd provnotif // SRC=registryconfig.cpp MJ= MN=
#typev registryconfig_cpp44 10 "%0%!FUNC!: ZwQuery key unexpectedly returned %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
status, ItemNTSTATUS -- 10
}

4589752e-e0bc-304d-9de6-cdcdb6fb8bcd provnotif // SRC=registryconfig.cpp MJ= MN=
#typev registryconfig_cpp53 11 "%0%!FUNC!: Unexpected blob length %10!Iu!" //   LEVEL=TRACE_LEVEL_ERROR
{
blobLength, ItemPtr -- 10
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp41 10 "%0%!FUNC!: Getting enumerator" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp51 11 "%0%!FUNC!: Loading next configuration" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp55 12 "%0%!FUNC!: No more configurations available" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp59 13 "%0Instantiating parser from configuration" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp63 14 "%0%!FUNC!: Parsing message" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp67 15 "%0%!FUNC!: Message parsed? %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
parsedOk, ItemListLong(false,true) -- 10
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp71 16 "%0%!FUNC!: Exception thrown while parsing message: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
e.what(), ItemString -- 10
}

4c048b34-64a0-33da-30c3-58a73410e962 provnotif // SRC=messageparserengine.cpp MJ= MN=
#typev messageparserengine_cpp77 17 "%0%!FUNC!: Exception thrown while instantiating parser: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
e.what(), ItemString -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp102 13 "%0%!FUNC!: Downloading XML" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp108 14 "%0%!FUNC!: Provisioning XML" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp112 15 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp129 16 "%0%!FUNC!: Not all fields are present in task data" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp139 17 "%0%!FUNC!: Malformed or unsupported URL: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
m_Url.c_str(), ItemWString -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp152 18 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp157 19 "%0%!FUNC!: Downloading XML from %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Url.c_str(), ItemWString -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp168 20 "%0%!FUNC!: Creating xml stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp176 21 "%0%!FUNC!: Wrote %10!d! bytes into stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
bytesWritten, ItemLong -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp184 22 "%0%!FUNC!: Unable to seek to start of stream" //   LEVEL=TRACE_LEVEL_ERROR
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp194 23 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp204 24 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp209 25 "%0%!FUNC!: Creating provisioning engine" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp219 26 "%0%!FUNC!: Allowing access to stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp226 27 "%0%!FUNC!: Creating provisioning document" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp232 28 "%0%!FUNC!: Allowing access to document" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp239 29 "%0%!FUNC!: Getting signature information" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp249 30 "%0%!FUNC!: Document is unsigned and hence failing provisioning, hr=%10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp254 31 "%0%!FUNC!: Document signer name: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
signatureInfo.SignerDisplayName, ItemWString -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp265 32 "%0%!FUNC!: IProvisioningDocument::Provision returned %10!s! (errorOccured=%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hr, ItemHRESULT -- 10
errorOccured, ItemListLong(false,true) -- 11
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp268 33 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp87 10 "%0%!FUNC!:----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp89 11 "%0%!FUNC!:<-----" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

4da3e9a5-c7f8-3d54-61ec-6422f5f1d226 provcore // SRC=refreshtask.cpp MJ= MN=
#typev refreshtask_cpp97 12 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp113 14 "%0%!FUNC!: ConvertSidToStringSid() failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwRes, ItemWINERROR -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp119 15 "%0%!FUNC!: User SID: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
strUserSid, ItemWString -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp124 16 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
dwRes, ItemWINERROR -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp151 17 "%0%!FUNC!: Unable to get the current user SID. %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp154 18 "%0%!FUNC!:User SID obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp161 19 "%0%!FUNC!: Unable to instantiate Task Service. %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp164 20 "%0%!FUNC!:Task Service instantiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp172 21 "%0%!FUNC!: Unable to connect to the Task Service. %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp175 22 "%0%!FUNC!: Connected to Task Service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp182 23 "%0%!FUNC!: Unable to open the task folder. %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp185 24 "%0%!FUNC!: Task folder obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp193 25 "%0%!FUNC!: Unable to delete the task. %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp196 26 "%0%!FUNC!: Task deleted" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp237 27 "%0%!FUNC!: Unable to get the current user SID. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp240 28 "%0%!FUNC!:User SID obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp247 29 "%0%!FUNC!: Unable to instantiate Task Service. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp250 30 "%0%!FUNC!:Task Service instantiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp258 31 "%0%!FUNC!: Unable to connect to the Task Service. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp261 32 "%0%!FUNC!: Connected to Task Service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp268 33 "%0%!FUNC!: Unable to open the root folder. %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp271 34 "%0%!FUNC!: Task root folder obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp276 35 "%0%!FUNC!: Registering Purge task" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp291 36 "%0%!FUNC!: Unable to register task: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp294 37 "%0%!FUNC!: Task registered" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp303 38 "%0%!FUNC!: Adding AppId to registry for %10!s!//%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
CarrierId.c_str(), ItemWString -- 10
SubscriberId.c_str(), ItemWString -- 11
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp311 39 "%0%!FUNC!: AppId entry added for %10!s!//%11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
CarrierId.c_str(), ItemWString -- 10
SubscriberId.c_str(), ItemWString -- 11
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp315 40 "%0%!FUNC!: Failed to add AppId entry: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
regResult, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp329 41 "%0%!FUNC!: No WLANProfiles node" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp339 42 "%0%!FUNC!: Provisioning WLAN profiles failed at a global level: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
errorCodeStr.c_str(), ItemWString -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp344 43 "%0%!FUNC!: Provisioning WLAN profiles succeeded" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp352 44 "%0%!FUNC!: No WlanProfile child nodes" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp357 45 "%0%!FUNC!: WlanProfile child count: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
static_cast<int>(wlanProfileChildNodes.size()), ItemLong -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp372 46 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp378 47 "%0%!FUNC!: Invalid arguments" //   LEVEL=TRACE_LEVEL_ERROR
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp385 48 "%0%!FUNC!: WLAN profiles were not provisioned" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp388 49 "%0%!FUNC!: WLAN profiles were provisioned" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp399 50 "%0%!FUNC!: Failed to create task: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp402 51 "%0%!FUNC!: Purge task created and registered" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp408 52 "%0%!FUNC!: Failed to add the AppID in the registry: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp411 53 "%0%!FUNC!: AppID succeessfully added to the registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp418 54 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp46 10 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp63 11 "%0%!FUNC!: OpenThreadToken() for thread failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwRes, ItemWINERROR -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp75 12 "%0%!FUNC!: OpenProcessToken() for process failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwRes, ItemWINERROR -- 10
}

512ddf5c-7476-39c2-6c08-872a5958e43d provcore // SRC=PurgeUtil.cpp MJ= MN=
#typev PurgeUtil_cpp92 13 "%0%!FUNC!: GetTokenInformation() returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
dwRes, ItemWINERROR -- 10
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp19 11 "%0%!FUNC!: Instantiated (Filter: %10!s!; Children#=%11!Iu!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Filter->GetDescription().c_str(), ItemWString -- 10
m_Children.size(), ItemPtr -- 11
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp23 12 "%0%!FUNC!: Instantiated (No filter; children#=%10!Iu!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Children.size(), ItemPtr -- 10
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp41 13 "%0%!FUNC!: Returning next parser" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp47 14 "%0%!FUNC!: Out of parsers; returning null." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp56 15 "%0%!FUNC!: Advancing..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp61 16 "%0%!FUNC!: Enumerating child %10!Iu! of %11!Iu!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
(m_Next - m_Children.begin()) + 1, ItemPtr -- 10
m_Children.size(), ItemPtr -- 11
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp68 17 "%0%!FUNC!: Child filtered" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

55f9b81a-f297-3410-14e4-c62e5686383a provnotif // SRC=configurationenumerator.cpp MJ= MN=
#typev configurationenumerator_cpp78 18 "%0%!FUNC!: Out of children." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp101 13 "%0%!FUNC!: Setting IsDefault value to false in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp137 14 "%0%!FUNC!: Getting UniqueProfileName for APN profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp142 15 "%0%!FUNC!: UniqueProfileName for APN profile = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
uniqueProfileName.c_str(), ItemWString -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp152 16 "%0%!FUNC!: Getting UniqueProfileName for Tethering profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp157 17 "%0%!FUNC!: UniqueProfileName for Tethering profile = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
uniqueProfileName.c_str(), ItemWString -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp179 18 "%0%!FUNC!: Setting the wcm_intf_opcode_multiple_pdp_support opcode to %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
dwMultiplePDPContextSupport, ItemLong -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp189 19 "%0%!FUNC!: WcmSetParameterFromBlob failed for opcode wcm_intf_opcode_multiple_pdp_support with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp221 20 "%0%!FUNC!: Setting the wcm_intf_opcode_tethering_information opcode with dwMaxStationConnections set to %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
wcmTetheringInfo.dwMaxStationConnections, ItemLong -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp231 21 "%0%!FUNC!: WcmSetParameterFromBlob failed for opcode wcm_intf_opcode_tethering_information with error=%10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwWcm, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp243 22 "%0%!FUNC!: TetheringSettingsSaveSetting failed with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp290 23 "%0%!FUNC!: Provisioning '%10!u!' additional PDP context profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
(DWORD)ProfileNodes.size(), ItemLong -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp331 24 "%0%!FUNC!: WwanSetProfile succeeded for %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
profileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp347 25 "%0%!FUNC!: WcmSetParameterFromBlob failed for opcode provisioning with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp359 26 "%0%!FUNC!: WcmSetParameterFromBlob failed to set app allow list for %10!s! on interface %11!s! with error code = %12!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
profileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwError, ItemWINERROR -- 12
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp362 27 "%0%!FUNC!: Deleting profile %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
profileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp382 28 "%0%!FUNC!: WwanSetProfile failed for %10!s! on interface %11!s! with error code = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
profileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwError, ItemWINERROR -- 12
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp384 29 "%0%!FUNC!: WwanSetProfile reason code = %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
dwReasonCode, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp394 30 "%0%!FUNC!: OriginalProfileName = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
originalProfileName.c_str(), ItemWString -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp448 31 "%0%!FUNC!: WwanSetProfile succeeded for %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
profileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp464 32 "%0%!FUNC!: WcmSetParameterFromBlob failed for opcode provisioning with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp475 33 "%0%!FUNC!: WwanSetProfile failed for %10!s! on interface %11!s! with error code = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
profileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwError, ItemWINERROR -- 12
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp477 34 "%0%!FUNC!: WwanSetProfile reason code = %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
dwReasonCode, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp487 35 "%0%!FUNC!: OriginalProfileName = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
originalProfileName.c_str(), ItemWString -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp509 36 "%0%!FUNC!: No <AdditionalPDPContexts>; nothing to do" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp513 37 "%0%!FUNC!: Getting unique profile names for APN profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp533 38 "%0%!FUNC!: No Additional PDP Context Policies to set" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp546 39 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp551 40 "%0%!FUNC!: Retrieving the provisioned default profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp555 41 "%0%!FUNC!: Could not locate provisioned default profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp561 42 "%0%!FUNC!: Setting the MultiplePDPContextSupport attribute" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp581 43 "%0%!FUNC!: MultiplePDPContextSupport is set to 'false'. Not provisioning any additional PDP context profiles" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp631 44 "%0%!FUNC!: Deleting all profiles for carrierId=%10!s! subscriberId=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Params.CarrierId.c_str(), ItemWString -- 10
m_Params.SubscriberId.c_str(), ItemWString -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp645 45 "%0%!FUNC!: Deleting non-updated profiles for carrierId=%10!s! subscriberId=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Params.CarrierId.c_str(), ItemWString -- 10
m_Params.SubscriberId.c_str(), ItemWString -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp676 46 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp683 47 "%0%!FUNC!: Retrieving the provisioned default profile ..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp690 48 "%0%!FUNC!: Deleting the wcm_intf_opcode_multiple_pdp_support opcode" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp697 49 "%0%!FUNC!: WcmDeleteParameter failed for opcode wcm_intf_opcode_multiple_pdp_support with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwResult, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp700 50 "%0%!FUNC!: Deleting the wcm_intf_opcode_tethering_information opcode" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp707 51 "%0%!FUNC!: WcmDeleteParameter failed for opcode wcm_intf_opcode_tethering_information with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwResult, ItemWINERROR -- 10
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp725 52 "%0%!FUNC!: WwanGetProfileList failed for interface %10!s! with error code = %11!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
dwResult, ItemLong -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp753 53 "%0%!FUNC!: Unable to retrieve profile %10!s! : hr = %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
pProfileXml, ItemWString -- 10
HRESULT_FROM_WIN32(dwResult), ItemHRESULT -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp772 54 "%0%!FUNC!: WcmQueryParameter failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Profile.strProfileName, ItemWString -- 10
&interfaceGuid, ItemGuid -- 11
dwResult, ItemLong -- 12
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp790 55 "%0%!FUNC!: Deleting profile %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
Profile.strProfileName, ItemWString -- 10
&interfaceGuid, ItemGuid -- 11
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp84 10 "%0%!FUNC!: Inserting nodes in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp90 11 "%0%!FUNC!: Setting ConnectionMode to manual in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

60e05f05-a915-3656-667d-d5ab0d08ee10 provcore // SRC=apnhandler.cpp MJ= MN=
#typev apnhandler_cpp94 12 "%0%!FUNC!: Setting SubscriberID "%10!s!" in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
SubscriberId.c_str(), ItemWString -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp101 16 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp114 17 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp128 18 "%0%!FUNC!: WaitForSingleObject error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp133 19 "%0%!FUNC!: WaitForSingleObject error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwWaitResult, ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp149 20 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp159 21 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp169 22 "%0%!FUNC!: <---- CarrierId = %10!s! (%11!08x!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
*CarrierId, ItemWString -- 10
hr, ItemLong -- 11
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp179 23 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp189 24 "%0%!FUNC!: <---- SubscriberId = %10!s! (%11!08x!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
*SubscriberId, ItemWString -- 10
hr, ItemLong -- 11
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp199 25 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp235 26 "%0%!FUNC!: <---- %10!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp245 27 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp265 28 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp27 10 "%0%!FUNC!: Creating document object" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp275 29 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp302 30 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp314 31 "%0%!FUNC!: Unable to set activity id %10!s!: %11!#x!" //   LEVEL=TRACE_LEVEL_WARNING
{
&m_EventActivityId, ItemGuid -- 10
evtRet, ItemLong -- 11
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp32 11 "%0%!FUNC!: Failed to create CProvisioningDocument object: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp328 32 "%0%!FUNC!: CreateWellKnownSid error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp345 33 "%0%!FUNC!: Failed to allocate ACL" //   LEVEL=TRACE_LEVEL_ERROR
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp352 34 "%0%!FUNC!: InitializeAcl error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp358 35 "%0%!FUNC!: AddAccessAllowedAce error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp366 36 "%0%!FUNC!: InitializeSecurityDescriptor error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp374 37 "%0%!FUNC!: SetSecurityDescriptorDacl error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp389 38 "%0%!FUNC!: CreateMutex error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp394 39 "%0%!FUNC!: CreateMutex succeeded" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp409 40 "%0%!FUNC!: CreateBoundaryDescriptor error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp41 12 "%0%!FUNC!: Initializing document object with stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp415 41 "%0%!FUNC!: AddSIDToBoundaryDescriptor error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp433 42 "%0%!FUNC!: Duplicate name while opening private namespace" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp444 43 "%0%!FUNC! Retry opening private namespace" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp449 44 "%0%!FUNC!: CreatePrivateNamespace error: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
win32Code, ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp45 13 "%0%!FUNC!: Unable to initialize provisioning document from stream: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp455 45 "%0%!FUNC!: CreatePrivateNamespace succeeded" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp460 46 "%0%!FUNC!: OpenPrivateNamespace succeeded" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp466 47 "%0%!FUNC!: Failed to open private namespace" //   LEVEL=TRACE_LEVEL_ERROR
{
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp52 14 "%0%!FUNC!: Could not QI for IProvisioningDocument from CProvisioningDocument: %10!08x!" //   LEVEL=TRACE_LEVEL_FATAL
{
hr, ItemLong -- 10
}

64015b18-e746-3c3b-08f3-181f73246bf2 provcore // SRC=ProvisioningDocument.cpp MJ= MN=
#typev ProvisioningDocument_cpp87 15 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp1005 56 "%0%!FUNC!: WcmQueryParameter failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Profile.strProfileName, ItemWString -- 10
&interfaceGuid, ItemGuid -- 11
dwResult, ItemLong -- 12
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp1028 57 "%0%!FUNC!: Deleting profile %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
Profile.strProfileName, ItemWString -- 10
&interfaceGuid, ItemGuid -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp143 10 "%0%!FUNC!: WwanGetProfile failed for %10!s! on interface %11!s! with error code = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
strProfileName, ItemWString -- 10
pInterfaceGuid, ItemGuid -- 11
dwError, ItemWINERROR -- 12
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp157 11 "%0%!FUNC!: No ConnectionMode node in profile xml" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp185 12 "%0%!FUNC!: WwanGetProfileList failed for interface %10!s! with error code = %11!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&InterfaceGuid, ItemGuid -- 10
dwResult, ItemLong -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp215 13 "%0%!FUNC!: WwanGetProfile failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
profile.strProfileName, ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwResult, ItemLong -- 12
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp238 14 "%0%!FUNC!: Default profile found: %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
profile.strProfileName, ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp283 15 "%0%!FUNC!: WwanSetProfile failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
profile.strProfileName, ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwResult, ItemLong -- 12
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp285 16 "%0%!FUNC!: WwanSetProfile reason code = %10!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
dwReasonCode, ItemLong -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp310 17 "%0%!FUNC!: Setting connectionMode to %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
connectionModeStr.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp331 18 "%0%!FUNC!: WwanSetProfile succeeded for %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp339 19 "%0%!FUNC!: No plan associated with profile, clearing old cost plan" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp355 20 "%0%!FUNC!: WcmQueryParameter (wcm_intf_opcode_provisioning) failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwResult, ItemLong -- 12
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp361 21 "%0%!FUNC!: Different cost plan was associated with profile, clearing old cost plan" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp379 22 "%0%!FUNC!: WcmSetParameterFromBlob failed for opcode provisioning with error=%10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwWcm, ItemWINERROR -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp389 23 "%0%!FUNC!: WwanSetProfile failed for %10!s! on interface %11!s! with error code = %12!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwError, ItemLong -- 12
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp391 24 "%0%!FUNC!: WwanSetProfile reason code = %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwReasonCode, ItemLong -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp409 25 "%0%!FUNC!: Inserting nodes in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp432 26 "%0%!FUNC!: Setting SubscriberID "%10!s!" in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
SubscriberId.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp441 27 "%0%!FUNC!: Setting IsDefault value "%10!s!" in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
isDefault.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp447 28 "%0%!FUNC!: Setting icon path "%10!s!" in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
IconPath.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp471 29 "%0%!FUNC!: Setting ConnectionMode to auto in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp487 30 "%0%!FUNC!: Setting DisplayProviderName "%10!s!" in profile xml" //   LEVEL=TRACE_LEVEL_VERBOSE
{
DisplayProviderName.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp532 31 "%0%!FUNC!: Temporary icon path "%10!s!" in profile xml" //   LEVEL=TRACE_LEVEL_INFORMATION
{
iconPath.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp551 32 "%0%!FUNC!: <---- hResult=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp582 33 "%0%!FUNC!: Logo is %10!Iu! bytes" //   LEVEL=TRACE_LEVEL_INFORMATION
{
brandingLogoBytes.size(), ItemPtr -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp606 34 "%0%!FUNC!: MBAE icon path is present "%10!s!" Mbae package" //   LEVEL=TRACE_LEVEL_INFORMATION
{
iconPath.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp608 35 "%0%!FUNC!: MBAE icon file present: %10!s! for icon path "%11!s!"" //   LEVEL=TRACE_LEVEL_INFORMATION
{
checkFileExist, ItemListLong(false,true) -- 10
iconPath.c_str(), ItemWString -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp659 36 "%0%!FUNC!: No <MBNProfiles>; nothing to do" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp686 37 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp721 38 "%0%!FUNC!: Looking up associated plan %10!s! for profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
AssociatedPlanName.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp730 39 "%0%!FUNC!: Associated plan %10!s! not found in xml for profile %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
AssociatedPlanName.c_str(), ItemWString -- 10
profileName.c_str(), ItemWString -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp747 40 "%0%!FUNC!: OriginalProfileName = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
originalProfileName.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp775 41 "%0%!FUNC!: Looking up associated plan %10!s! for profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
AssociatedPlanName.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp784 42 "%0%!FUNC!: Associated plan (%10!s!) not found in xml for profile %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
AssociatedPlanName.c_str(), ItemWString -- 10
profileName.c_str(), ItemWString -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp802 43 "%0%!FUNC!: OriginalProfileName = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
originalProfileName.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp818 44 "%0%!FUNC!: <Messages> are defined" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp836 45 "%0%!FUNC!: Message rules processing returned %10!s! (%11!Iu! results)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
messageProcessingResults.size(), ItemPtr -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp840 46 "%0%!FUNC!: Message rules not processed because the default profile was not set" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp860 47 "%0DefaultProfile: inXml=%10!d! set=%11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
!!defaultProfileNode, ItemLong -- 10
defaultProfileSet, ItemLong -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp861 48 "%0PurchaseProfile: inXml=%10!d! set=%11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
!!purchaseProfileNode, ItemLong -- 10
purchaseProfileSet, ItemLong -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp862 49 "%0Messages: inXml=%10!d! set=%11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
!!messagesNode, ItemLong -- 10
messagesSet, ItemLong -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp876 50 "%0%!FUNC!: Cleaning message store for subscriber %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Params.SubscriberId.c_str(), ItemWString -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp885 51 "%0%!FUNC!: Deleting all profiles for carrierId=%10!s! subscriberId=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Params.CarrierId.c_str(), ItemWString -- 10
m_Params.SubscriberId.c_str(), ItemWString -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp899 52 "%0%!FUNC!: Deleting non-updated profiles for carrierId=%10!s! subscriberId=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Params.CarrierId.c_str(), ItemWString -- 10
m_Params.SubscriberId.c_str(), ItemWString -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp932 53 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp948 54 "%0%!FUNC!: WwanGetProfileList failed for interface %10!s! with error code = %11!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
dwResult, ItemLong -- 11
}

6631c4a0-9b77-3725-23aa-ad76af1478a8 provcore // SRC=wwanhandler.cpp MJ= MN=
#typev wwanhandler_cpp976 55 "%0%!FUNC!: Unable to retrieve profile %10!s! : hr = %11!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
pProfileXml, ItemWString -- 10
HRESULT_FROM_WIN32(dwResult), ItemHRESULT -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp106 19 "%0%!FUNC!: BillingCycle Reset      : %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileData.BillingCycle.Reset, ItemListLong(false,true) -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp107 20 "%0******************************" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp170 21 "%0%!FUNC!: Initializing for interface %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&InterfaceGuid, ItemGuid -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp176 22 "%0%!FUNC!: Default profile: '%10!s!' (%11!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_DefaultProfile.c_str(), ItemWString -- 10
hr, ItemHRESULT -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp199 23 "%0%!FUNC!: carrierId/subscriberId blob size: %10!Id! (%11!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
carrierSubscriberBlob.size(), ItemPtr -- 10
hr, ItemHRESULT -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp203 24 "%0%!FUNC!: CarrierId: %10!s! SubscriberId: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_CarrierId.c_str(), ItemWString -- 10
m_SubscriberId.c_str(), ItemWString -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp207 25 "%0%!FUNC!: Interface has not been provisioned for carrierId/subscriberId" //   LEVEL=TRACE_LEVEL_ERROR
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp214 26 "%0%!FUNC!: Unable to obtain necessary profile info from interface" //   LEVEL=TRACE_LEVEL_ERROR
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp232 27 "%0%!FUNC!: Can process? %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hasParsers, ItemListByte(FALSE,TRUE) -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp259 28 "%0%!FUNC!: Has parsers? %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hasParsers, ItemListByte(FALSE,TRUE) -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp260 29 "%0%!FUNC!: Was parsed? %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
wasParsed, ItemListByte(FALSE,TRUE) -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp261 30 "%0%!FUNC!: Was processed? %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
wasProcessed, ItemListByte(FALSE,TRUE) -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp304 31 "%0%!FUNC!: Setting silent flag (%10!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
contents.Silent, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp307 32 "%0%!FUNC!: Setting ruleId="%10!s!"" //   LEVEL=TRACE_LEVEL_VERBOSE
{
contents.RuleId.c_str(), ItemWString -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp312 33 "%0%!FUNC!: Has parsers? %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hasParsers, ItemListByte(FALSE,TRUE) -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp313 34 "%0%!FUNC!: Was parsed? %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
wasParsed, ItemListByte(FALSE,TRUE) -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp341 35 "%0%!FUNC!: Refresh trigger present in SMS" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp347 36 "%0%!FUNC!: Activation complete message present in SMS" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp352 37 "%0%!FUNC!: Setting silent flag (%10!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.Silent, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp355 38 "%0%!FUNC!: Setting ruleId="%10!s!"" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Contents.RuleId.c_str(), ItemWString -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp366 39 "%0%!FUNC!: Loading profile data" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp513 40 "%0%!FUNC!: Invalid time stamp field in usage data" //   LEVEL=TRACE_LEVEL_WARNING
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp544 41 "%0%!FUNC!: Setting profile data" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp554 42 "%0%!FUNC!: Loading cost data" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp585 43 "%0%!FUNC!: Setting cost data" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp621 44 "%0Loading profile data for %10!s!+%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_CarrierId.c_str(), ItemWString -- 10
m_SubscriberId.c_str(), ItemWString -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp628 45 "%0%!FUNC!: Querying profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp637 46 "%0Usage hasn't been set on this interface yet." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp656 47 "%0%!FUNC!: Failed to load profile data from wcm" //   LEVEL=TRACE_LEVEL_ERROR
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp666 48 "%0Setting cost data for %10!s!+%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_CarrierId.c_str(), ItemWString -- 10
m_SubscriberId.c_str(), ItemWString -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp674 49 "%0%!FUNC!: Setting profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp68 10 "%0%!FUNC!: Plan (+flags)   : %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Cost.ConnectionCost, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp685 50 "%0%!FUNC!: Failed to set profile data in wcm" //   LEVEL=TRACE_LEVEL_ERROR
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp693 51 "%0Loading cost data for %10!s!+%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_CarrierId.c_str(), ItemWString -- 10
m_SubscriberId.c_str(), ItemWString -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp700 52 "%0%!FUNC!: Querying cost" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp709 53 "%0Cost hasn't been set on this interface yet." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp725 54 "%0%!FUNC!: Failed to load cost data from wcm" //   LEVEL=TRACE_LEVEL_ERROR
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp73 11 "%0****** DUSM Data ******" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp735 55 "%0Setting cost data for %10!s!+%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_CarrierId.c_str(), ItemWString -- 10
m_SubscriberId.c_str(), ItemWString -- 11
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp743 56 "%0%!FUNC!: Setting cost" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp75 12 "%0%!FUNC!: Usage                   : %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileData.UsageData.UsageInMegabytes, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp754 57 "%0%!FUNC!: Failed to set cost/profile data in wcm" //   LEVEL=TRACE_LEVEL_ERROR
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp772 58 "%0%!FUNC!:Task Service instantiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp78 13 "%0%!FUNC!: Usage timestamp : %10!04d!-%11!02d!-%12!02d!T%13!02d!:%14!02d!:%15!02d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
systemTime.wYear, ItemLong -- 10
systemTime.wMonth, ItemLong -- 11
systemTime.wDay, ItemLong -- 12
systemTime.wHour, ItemLong -- 13
systemTime.wMinute, ItemLong -- 14
systemTime.wSecond, ItemLong -- 15
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp781 59 "%0%!FUNC!: Connected to Task Service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp790 60 "%0%!FUNC!: Task root folder obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp800 61 "%0%!FUNC!: Refresh task obtained" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp813 62 "%0%!FUNC!: Refresh task triggered successfully" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp817 63 "%0%!FUNC!: Couldn't trigger refresh task. %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp835 64 "%0%!FUNC!: Issuing connect on default profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp840 65 "%0%!FUNC!: Removing activation task" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp845 66 "%0%!FUNC!: Unable to connect to default profile. hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp86 14 "%0%!FUNC!: DataLimitInMegabytes    : %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileData.DataLimitInMegabytes, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp87 15 "%0%!FUNC!: InboundBandwidthInKbps         : %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileData.InboundBandwidthInKbps, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp88 16 "%0%!FUNC!: OutboundBandwidthInKbps         : %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileData.OutboundBandwidthInKbps, ItemLong -- 10
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp91 17 "%0%!FUNC!: BillingCycle StartTime  : %10!04d!-%11!02d!-%12!02d!T%13!02d!:%14!02d!:%15!02d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
systemTime.wYear, ItemLong -- 10
systemTime.wMonth, ItemLong -- 11
systemTime.wDay, ItemLong -- 12
systemTime.wHour, ItemLong -- 13
systemTime.wMinute, ItemLong -- 14
systemTime.wSecond, ItemLong -- 15
}

68c9688c-a7ac-355e-b593-af733b416273 provcore // SRC=notificationprocessor.cpp MJ= MN=
#typev notificationprocessor_cpp98 18 "%0%!FUNC!: BillingCycle Duration   : %10!04d!Y%11!02d!M%12!02d!DT%13!02d!H%14!02d!M%15!02d!S%16!03d!MS" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ProfileData.BillingCycle.Duration.wYear, ItemLong -- 10
ProfileData.BillingCycle.Duration.wMonth, ItemLong -- 11
ProfileData.BillingCycle.Duration.wDay, ItemLong -- 12
ProfileData.BillingCycle.Duration.wHour, ItemLong -- 13
ProfileData.BillingCycle.Duration.wMinute, ItemLong -- 14
ProfileData.BillingCycle.Duration.wSecond, ItemLong -- 15
ProfileData.BillingCycle.Duration.wMilliseconds, ItemLong -- 16
}

6a90fd5c-b5e4-3244-0e28-cb7fdb5361ff provnotif // SRC=smsbearerfilter.cpp MJ= MN=
#typev smsbearerfilter_cpp55 10 "%0%!FUNC!: Filter(sender=%10!s!,classZero=%11!d!) == Rule(sender=%12!s!,classZeroOnly=%13!s!)? %14!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Sender.c_str(), ItemWString -- 10
m_IsClassZero, ItemLong -- 11
sender.c_str(), ItemWString -- 12
classZeroOnly.c_str(), ItemWString -- 13
matches, ItemLong -- 14
}

6a90fd5c-b5e4-3244-0e28-cb7fdb5361ff provnotif // SRC=smsbearerfilter.cpp MJ= MN=
#typev smsbearerfilter_cpp70 11 "%0%!FUNC!: Config does not indicate an SMS bearer" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

711350ff-d2c7-32d9-09a8-a05e33d25550 provagent // SRC=ErrorReportHelper.cpp MJ= MN=
#typev ErrorReportHelper_cpp153 12 "%0%!FUNC!: Calling OriginateError with hr=%10!s! and ID=%11!Id!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
uID, ItemPtr -- 11
}

711350ff-d2c7-32d9-09a8-a05e33d25550 provagent // SRC=ErrorReportHelper.cpp MJ= MN=
#typev ErrorReportHelper_cpp160 13 "%0%!FUNC!: Calling TransformError with oldHr=%10!s!, newHr=%11!s! and ID=%12!Id!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
oldHr, ItemHRESULT -- 10
newHr, ItemHRESULT -- 11
uID, ItemPtr -- 12
}

711350ff-d2c7-32d9-09a8-a05e33d25550 provagent // SRC=ErrorReportHelper.cpp MJ= MN=
#typev ErrorReportHelper_cpp91 10 "%0%!FUNC!: Converted hr=%10!s! to ID=%11!Id!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
uID, ItemPtr -- 11
}

711350ff-d2c7-32d9-09a8-a05e33d25550 provagent // SRC=ErrorReportHelper.cpp MJ= MN=
#typev ErrorReportHelper_cpp94 11 "%0%!FUNC!: Converted hr to ID successfully=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
ok, ItemListLong(false,true) -- 10
}

7193f2c6-61e6-38d3-b930-325b0c4979e9 MBAELib // SRC=NetworkAccountBindingAccessCheck.cpp MJ= MN=
#typev NetworkAccountBindingAccessCheck_cpp104 11 "%0%!FUNC! <---- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

7193f2c6-61e6-38d3-b930-325b0c4979e9 MBAELib // SRC=NetworkAccountBindingAccessCheck.cpp MJ= MN=
#typev NetworkAccountBindingAccessCheck_cpp121 12 "%0%!FUNC! ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7193f2c6-61e6-38d3-b930-325b0c4979e9 MBAELib // SRC=NetworkAccountBindingAccessCheck.cpp MJ= MN=
#typev NetworkAccountBindingAccessCheck_cpp141 13 "%0%!FUNC! DeviceAccessPolicyCheck CoCreateInstance failed, hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

7193f2c6-61e6-38d3-b930-325b0c4979e9 MBAELib // SRC=NetworkAccountBindingAccessCheck.cpp MJ= MN=
#typev NetworkAccountBindingAccessCheck_cpp153 14 "%0%!FUNC! DeviceAccessPolicyCheck CallingFromPartialTrust failed, hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

7193f2c6-61e6-38d3-b930-325b0c4979e9 MBAELib // SRC=NetworkAccountBindingAccessCheck.cpp MJ= MN=
#typev NetworkAccountBindingAccessCheck_cpp162 15 "%0%!FUNC! DeviceAccessPolicyCheck DeviceInterfacePathAccessCheck failed, hr = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

7193f2c6-61e6-38d3-b930-325b0c4979e9 MBAELib // SRC=NetworkAccountBindingAccessCheck.cpp MJ= MN=
#typev NetworkAccountBindingAccessCheck_cpp167 16 "%0%!FUNC! <---- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

7193f2c6-61e6-38d3-b930-325b0c4979e9 MBAELib // SRC=NetworkAccountBindingAccessCheck.cpp MJ= MN=
#typev NetworkAccountBindingAccessCheck_cpp19 10 "%0%!FUNC! ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp116 12 "%0%!FUNC!: Certificate has usage %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
keyUsage, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp120 13 "%0%!FUNC!: Certificate does not have digital signature key usage" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp125 14 "%0%!FUNC!: Unable to get Intended key usage. Failed with error %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
GetLastError(), ItemWINERROR -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp148 15 "%0%!FUNC!: Building certificate chain engine..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp155 16 "%0%!FUNC!: ERROR: Unable to create chain engine: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemWINERROR -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp162 17 "%0%!FUNC!: Getting the certificate chain." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp183 18 "%0%!FUNC!: ERROR: Unable to get certificate chain: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemWINERROR -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp206 19 "%0%!FUNC!: CryptDecodeObject failed with %10!s! while retrieving decoded property length" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemWINERROR -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp223 20 "%0%!FUNC!: CryptDecodeObject failed with %10!s! while decoding property" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemWINERROR -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp239 21 "%0%!FUNC!: Unable to get certificate chain" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp249 22 "%0%!FUNC!: Certificate has no Issuance usage specified" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp258 23 "%0%!FUNC!: Unable to get root cert" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp265 24 "%0%!FUNC!: Failed to get certificate property" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp272 25 "%0%!FUNC!: Failed to decode certificate property" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp282 26 "%0%!FUNC!: PolicyOID[%10!d!]: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
i, ItemLong -- 10
pPoliciesInfo->rgPolicyInfo[i].pszPolicyIdentifier, ItemString -- 11
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp288 27 "%0%!FUNC!: Found Policy OID match for %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pIssuanceUsage->rgpszUsageIdentifier[j], ItemString -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp294 28 "%0%!FUNC!: No Policy OID match found" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp304 29 "%0***** CERT CHAIN *****" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp305 30 "%0    Status             : error=%10!08x! info= %11!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pCertChain->TrustStatus.dwErrorStatus, ItemLong -- 10
pCertChain->TrustStatus.dwInfoStatus, ItemLong -- 11
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp308 31 "%0    # of simple chains : %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pCertChain->cChain, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp312 32 "%0    chain[%10!d!]:" //   LEVEL=TRACE_LEVEL_VERBOSE
{
c, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp313 33 "%0        status             : error=%10!08x! info= %11!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pSimpleChain->TrustStatus.dwErrorStatus, ItemLong -- 10
pSimpleChain->TrustStatus.dwInfoStatus, ItemLong -- 11
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp316 34 "%0        # of elements : %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pSimpleChain->cElement, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp320 35 "%0        element[%10!d!]:" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp321 36 "%0            status             : error=%10!08x! info= %11!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pElement->TrustStatus.dwErrorStatus, ItemLong -- 10
pElement->TrustStatus.dwInfoStatus, ItemLong -- 11
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp348 37 "%0%!FUNC!: CertGetIssuerCertificateFromStore failed unexpectedly with %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
gle, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp380 38 "%0%!FUNC!: CertEnumCertificatesInStore failed unexpectedly with %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
gle, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp387 39 "%0%!FUNC!: "%10!s!" has a depth of %11!Iu!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
GetCertificateDisplayName(next).c_str(), ItemWString -- 10
depth, ItemPtr -- 11
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp42 10 "%0%!FUNC!: CertGetCertificateContextProperty failed with %10!08x! while retrieving property length" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp430 40 "%0Error opening in-memory cert store: %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp457 41 "%0%!FUNC!: Cannot add cert to in-memory store: %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp482 42 "%0ERROR: Unable to find leaf certificate" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp498 43 "%0%!FUNC!: Unable to import public key from signer cert: %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp506 44 "%0%!FUNC!: Chain is not trusted; throwing HrException" //   LEVEL=TRACE_LEVEL_ERROR
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp513 45 "%0%!FUNC!: Certificate does not have digital signing usage; throwing HrException" //   LEVEL=TRACE_LEVEL_ERROR
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp521 46 "%0%!FUNC!: Display Name = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
info->SignerDisplayName.c_str(), ItemWString -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp523 47 "%0%!FUNC!: Issuer Name = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
info->CertIssuerName.c_str(), ItemWString -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp525 48 "%0%!FUNC!: Subject Name = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
info->CertSubjectName.c_str(), ItemWString -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp556 49 "%0%!FUNC!: CryptXmlOpenToDecode failed with %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp56 11 "%0%!FUNC!: CertGetCertificateContextProperty failed with %10!08x! while retrieving property" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp568 50 "%0%!FUNC!: CryptXmlGetDocContext failed with %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp571 51 "%0%!FUNC!: Number of <signature> elements: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pDocCtxt->cSignature, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp576 52 "%0%!FUNC!: Document is missing a signature element; XML unsigned." //   LEVEL=TRACE_LEVEL_ERROR
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp584 53 "%0%!FUNC!: Document is missing signer key information" //   LEVEL=TRACE_LEVEL_ERROR
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp597 54 "%0%!FUNC!: CryptXmlVerifySignature failed with %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp601 55 "%0%!FUNC!: Signature verified; verifying reference digests." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp604 56 "%0%!FUNC!: Reference count = %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pSignature->SignedInfo.cReference, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp608 57 "%0%!FUNC!: Only one reference is allowed." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp613 58 "%0%!FUNC!: Reference URI must be to document root (expected: "" was: %10!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pSignature->SignedInfo.rgpReference[0]->wszUri, ItemWString -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp626 59 "%0%!FUNC!: Unable to retrieve signature status: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp633 60 "%0%!FUNC!: Reference digests are invalid; throwing PROVCORE_E_XML_DIGEST_INVALID." //   LEVEL=TRACE_LEVEL_ERROR
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp638 61 "%0%!FUNC!: UNEXPECTED! References are unresolved; throwing E_FAIL." //   LEVEL=TRACE_LEVEL_ERROR
{
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp642 62 "%0%!FUNC!: Document signature has been validated; returning info for signer %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
info->SignerDisplayName.c_str(), ItemWString -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp658 63 "%0%!FUNC!: Unable to retrieve stream size: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp662 64 "%0%!FUNC!: Stream size = %10!I64u!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
stat.cbSize.QuadPart, ItemULongLong -- 10
}

7445f241-4e70-30ab-d188-7973ebdf32c2 provcore // SRC=signature.cpp MJ= MN=
#typev signature_cpp680 66 "%0%!FUNC!: Unable to read from the stream: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp108 16 "%0%!FUNC!: No WLAN or MBN Profiles" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp115 17 "%0%!FUNC!: Getting Wlan profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp120 18 "%0%!FUNC!: No WLAN Profiles to set priority" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp125 19 "%0%!FUNC!: Failed to retrieve Wlan profiles" //   LEVEL=TRACE_LEVEL_ERROR
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp132 20 "%0%!FUNC!: Getting Mbn profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp137 21 "%0%!FUNC!: No MBN Profile to set priority" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp142 22 "%0%!FUNC!: Failed to retrieve Mbn profile" //   LEVEL=TRACE_LEVEL_ERROR
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp151 23 "%0%!FUNC!: Failed to allocate and copy WCM_PROFILE_INFO_LIST" //   LEVEL=TRACE_LEVEL_ERROR
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp162 24 "%0%!FUNC!: Starting suspend auto-connect" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp173 25 "%0%!FUNC!: WcmBeginIgnoreProfileList failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwError, ItemWINERROR -- 10
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp189 26 "%0%!FUNC!: Creating threadpool timer" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp196 27 "%0%!FUNC!: CreateThreadpoolTimer failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwResult, ItemWINERROR -- 10
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp200 28 "%0%!FUNC!: Setting threadpool timer" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp34 10 "%0%!FUNC!: Executing threadpool timer callback" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp49 11 "%0%!FUNC!: WcmResetIgnoreProfileList failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
dwError, ItemWINERROR -- 10
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp66 12 "%0%!FUNC!: Setting threadpool timer to NULL" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp69 13 "%0%!FUNC!: Waiting for threadpool timer to finish" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp72 14 "%0%!FUNC!: Closing threadpool timer" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

7462ebf8-801c-36c2-4391-498847aab720 provcore // SRC=SuspendAutoconnectHandler.cpp MJ= MN=
#typev SuspendAutoconnectHandler_cpp78 15 "%0%!FUNC!: Ending suspend auto-connect" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp293 12 "%0%!FUNC!: NetworkAccountId is missing for trusted source" //   LEVEL=TRACE_LEVEL_ERROR
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp352 13 "%0%!FUNC!: hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp372 14 "%0%!FUNC!: Caller is App container, verifying handle came from the caller" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp379 15 "%0%!FUNC!: Window handle does not belong to the caller, detecting window parent" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp391 16 "%0%!FUNC!: Detecting window failed with hr=%10!s!, hence marking parent window as null" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp425 17 "%0%!FUNC!: Submitting the callback" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp431 18 "%0%!FUNC!: Failed to submit the callback!" //   LEVEL=TRACE_LEVEL_ERROR
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp440 19 "%0%!FUNC!: Waiting for the callback thread to initialize" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp454 20 "%0%!FUNC!: Failed to start/init callback thread; transitioning to error: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp490 21 "%0%!FUNC!: Calling ProvisionFromXmlDocumentOperation::ProvisionCallback()" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp518 22 "%0%!FUNC!: Initializing COM" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp526 23 "%0%!FUNC!: Creating stream from HSTRING" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp537 24 "%0%!FUNC!: Creating provisioning engine" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp547 25 "%0%!FUNC!: Allowing access to stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp554 26 "%0%!FUNC!: Creating document from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp566 27 "%0%!FUNC!: Allowing access to document" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp577 28 "%0%!FUNC!: Cannot retrieve carrierId id from network account id" //   LEVEL=TRACE_LEVEL_ERROR
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp583 29 "%0%!FUNC!: CarrierId from NetworkAccountId: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
carrierId.c_str(), ItemWString -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp584 30 "%0%!FUNC!: Source is trusted and hence getting carrierId information" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp591 31 "%0%!FUNC!: CarrierId from Procvisioning XML: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
strCarrierId, ItemWString -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp598 32 "%0%!FUNC!: CarrierId's from the xml and the MBAE account do not match; access is denied" //   LEVEL=TRACE_LEVEL_ERROR
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp615 33 "%0%!FUNC!: Source is untrusted and the calling app is a desktop app (not immersive app/app-container app)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp625 34 "%0%!FUNC!: Document is unsigned and hence failing provisioning, hr=%10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp638 35 "%0%!FUNC!: Document is signed but signer '%10!s!' is untrusted - prompting user to allow operation" //   LEVEL=TRACE_LEVEL_INFORMATION
{
signatureInfo.SignerDisplayName, ItemWString -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp642 36 "%0%!FUNC!: Is user consented (%10!s!), hr=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
userAllowed, ItemListLong(false,true) -- 10
hr, ItemHRESULT -- 11
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp647 37 "%0%!FUNC!: Document is signed but signer is untrusted and hence failing provisioning, hr=%10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp655 38 "%0%!FUNC!: Document is signed but signer doesn't have extended validation, hence failing provisioning, hr=%10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp667 39 "%0%!FUNC!: Document signer name: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
signatureInfo.SignerDisplayName, ItemWString -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp676 40 "%0%!FUNC!: Provisioning from document" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp684 41 "%0%!FUNC!: Calling Post Provision" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp686 42 "%0%!FUNC!: PostProvision returned: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp692 43 "%0%!FUNC!: Obtaining provisioning results" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp726 44 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp748 45 "%0%!FUNC!: Instantiating results object" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp758 46 "%0%!FUNC!: Transitioning with result = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp768 47 "%0%!FUNC!: Firing completion." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp771 48 "%0%!FUNC!: <----" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp788 49 "%0%!FUNC!: Has user allowed provisioning from '%10!s!': %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
SignerDisplayName, ItemWString -- 10
UserHasAllowed, ItemListLong(false,true) -- 11
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp793 50 "%0%!FUNC! Consent dialog could not be displayed - provisioning will not be performed, hr=%10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp798 51 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp81 10 "%0%!FUNC!: Encoding = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m[1].str().c_str(), ItemWString -- 10
}

758ed094-0460-3dfb-e571-228750e2fe54 provagent // SRC=ProvisionFromXmlDocumentOperation.cpp MJ= MN=
#typev ProvisionFromXmlDocumentOperation_cpp90 11 "%0%!FUNC!: std::exception thrown: %10!s!; returning false" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.what(), ItemString -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp581 19 "%0 ==> %!FUNC!" //   LEVEL=Verbose
{
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp599 22 "%0 %!FUNC!: Current value is null. Bail." //   LEVEL=Error
{
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp617 23 "%0 %!FUNC!: malloc for setting. failed. Bail." //   LEVEL=Error
{
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp635 24 "%0 %!FUNC!: RegOpenKeyEx for TETHERING_REG_KEY_SETTINGS failed with Error = %10!s!. Bail." //   LEVEL=Error
{
status, ItemWINERROR -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp658 25 "%0 %!FUNC!: malloc for TETHERING_CONNECTION_SETTINGS_V2 failed. Bail" //   LEVEL=Error
{
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp665 26 "%0 %!FUNC!: RegQueryValueEx failed with Error = %10!s!. Bail." //   LEVEL=Error
{
status, ItemWINERROR -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp678 27 "%0 %!FUNC!: RegQueryValueEx failed with Error = %10!s!. Bail." //   LEVEL=Error
{
status, ItemWINERROR -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp738 30 "%0 %!FUNC!: RegQueryValueEx failed with Error = %10!s!. Bail." //   LEVEL=Error
{
status, ItemWINERROR -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp750 31 "%0 %!FUNC!: malloc failed. Bail." //   LEVEL=Error
{
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp765 32 "%0 %!FUNC!: %10!d! string/binary setting has no default value." //   LEVEL=Verbose
{
setting, ItemLong -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp798 33 "%0 ==> %!FUNC!" //   LEVEL=Verbose
{
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp813 34 "%0 %!FUNC!: RegOpenKeyEx for TETHERING_REG_KEY_SETTINGS failed with Error = %10!s!. Bail." //   LEVEL=Error
{
hr, ItemHRESULT -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp831 36 "%0 %!FUNC!: Invalid size for TETHERING_CONNECTION_SETTINGS. Failing with Error = %10!s!. Bail." //   LEVEL=Error
{
hr, ItemHRESULT -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp847 38 "%0 %!FUNC!: Invalid size for DWORD. Failing with Error = %10!s!. Bail." //   LEVEL=Error
{
hr, ItemHRESULT -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp860 39 "%0 %!FUNC!: Invalid range. Failing with Error = %10!s!. Bail." //   LEVEL=Error
{
hr, ItemHRESULT -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp958 41 "%0 %!FUNC!: Invalid current value. Failing with Error = %10!s!. Bail." //   LEVEL=Error
{
hr, ItemHRESULT -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp974 42 "%0 %!FUNC!: RegSetValueEx failed with Error = %10!s!. Bail." //   LEVEL=Error
{
hr, ItemHRESULT -- 10
}

82af12ee-1668-3a59-7238-1fe1a25af2cb TetheringSettings // SRC=TetheringSettings.cpp MJ= MN=
#typev TetheringSettings_cpp986 43 "%0 <== %!FUNC!: Status = %10!s!" //   LEVEL=Verbose
{
hr, ItemHRESULT -- 10
}

89d22e46-b61d-3d35-350d-16f49b877b3b MBAELib // SRC=GetNetworkAccountBindingDeviceInterfacePath.cpp MJ= MN=
#typev GetNetworkAccountBindingDeviceInterfacePath_cpp103 15 "%0%!FUNC!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

89d22e46-b61d-3d35-350d-16f49b877b3b MBAELib // SRC=GetNetworkAccountBindingDeviceInterfacePath.cpp MJ= MN=
#typev GetNetworkAccountBindingDeviceInterfacePath_cpp35 10 "%0%!FUNC! ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

89d22e46-b61d-3d35-350d-16f49b877b3b MBAELib // SRC=GetNetworkAccountBindingDeviceInterfacePath.cpp MJ= MN=
#typev GetNetworkAccountBindingDeviceInterfacePath_cpp43 11 "%0%!FUNC! <---- Invalid parameters" //   LEVEL=TRACE_LEVEL_ERROR
{
}

89d22e46-b61d-3d35-350d-16f49b877b3b MBAELib // SRC=GetNetworkAccountBindingDeviceInterfacePath.cpp MJ= MN=
#typev GetNetworkAccountBindingDeviceInterfacePath_cpp49 12 "%0%!FUNC! <---- Invalid parameters" //   LEVEL=TRACE_LEVEL_ERROR
{
}

89d22e46-b61d-3d35-350d-16f49b877b3b MBAELib // SRC=GetNetworkAccountBindingDeviceInterfacePath.cpp MJ= MN=
#typev GetNetworkAccountBindingDeviceInterfacePath_cpp55 13 "%0%!FUNC! NetworkAccountId = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pszNetworkAccountId, ItemWString -- 10
}

89d22e46-b61d-3d35-350d-16f49b877b3b MBAELib // SRC=GetNetworkAccountBindingDeviceInterfacePath.cpp MJ= MN=
#typev GetNetworkAccountBindingDeviceInterfacePath_cpp84 14 "%0%!FUNC! <---- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp118 14 "%0WWANLISTENER: Subscribing to %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Code, ItemEnum(WWAN_MSM_EVENT_TYPE) -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp122 15 "%0WWANLISTENER: Subscribing to %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Code, ItemEnum(WWAN_PNP_EVENT_TYPE) -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp126 16 "%0WWANLISTENER: Subscribing to source=%10!#x!, code=%11!#x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Source, ItemLong -- 10
Code, ItemLong -- 11
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp150 17 "%0WWANLISTENER: Unsubscribing from %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Code, ItemEnum(WWAN_MSM_EVENT_TYPE) -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp154 18 "%0WWANLISTENER: Unsubscribing from %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Code, ItemEnum(WWAN_PNP_EVENT_TYPE) -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp158 19 "%0WWANLISTENER: Unsubscribing from source=%10!#x!, code=%11!#x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Source, ItemLong -- 10
Code, ItemLong -- 11
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp273 20 "%0%!FUNC!: Interface removed! (firing event=%10!p!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_InterfaceRemovedEvent, ItemPtr -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp300 21 "%0%!FUNC!: Unable to create radioOff event: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp311 22 "%0%!FUNC!: Radio state changed (radio=%10!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pRadioObject->radioState.SwRadioState, ItemLong -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp322 23 "%0%!FUNC!: Radio state changed (radio=%10!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pRadioObject->radioState.SwRadioState, ItemLong -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp334 24 "%0%!FUNC!: Radio state failed to change: err=%10!#x! (radio=%11!d!)" //   LEVEL=TRACE_LEVEL_ERROR
{
pRadioFailedInfo->ErrorCode.dwErrCode, ItemLong -- 10
pRadioFailedInfo->swRadioAction, ItemLong -- 11
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp339 25 "%0%!FUNC!: Turning radio off..." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp344 26 "%0%!FUNC!: Unable to set radio state to off: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp348 27 "%0%!FUNC!: Waiting for radio to turn off (cannot cancel this operation)..." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp357 28 "%0%!FUNC!: Unable to turn radio off: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp372 29 "%0%!FUNC!: Unable to create radioOff event: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp384 30 "%0%!FUNC!: Registered: state=%10!d! mode=%11!d! err=%12!#x! provid="%13!s!" provname="%14!s!" roamtext="%15!s!" flags=%16!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pRegistrationState->RegisterState, ItemLong -- 10
pRegistrationState->RegisterMode, ItemLong -- 11
pRegistrationState->uNwError, ItemLong -- 12
pRegistrationState->ProviderId, ItemWString -- 13
pRegistrationState->ProviderName, ItemWString -- 14
pRegistrationState->RoamingText, ItemWString -- 15
pRegistrationState->WwanRegFlags, ItemLong -- 16
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp401 31 "%0%!FUNC!: Registration completed: state=%10!d! mode=%11!d! err=%12!#x! provid="%13!s!" provname="%14!s!" roamtext="%15!s!" flags=%16!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pRegistrationState->RegisterState, ItemLong -- 10
pRegistrationState->RegisterMode, ItemLong -- 11
pRegistrationState->uNwError, ItemLong -- 12
pRegistrationState->ProviderId, ItemWString -- 13
pRegistrationState->ProviderName, ItemWString -- 14
pRegistrationState->RoamingText, ItemWString -- 15
pRegistrationState->WwanRegFlags, ItemLong -- 16
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp419 32 "%0%!FUNC!: Registration failed: err=%10!#x! mode=%11!d! provid="%12!s!" dataclass=%13!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pRegistrationFailedInfo->ErrCode.dwErrCode, ItemLong -- 10
pRegistrationFailedInfo->RegisterMode, ItemLong -- 11
pRegistrationFailedInfo->strProviderId, ItemWString -- 12
pRegistrationFailedInfo->WwanDataClass, ItemLong -- 13
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp429 33 "%0%!FUNC!: Turning radio on..." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp434 34 "%0%!FUNC!: Unable to set radio state to on: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp438 35 "%0%!FUNC!: Waiting for radio to turn on and to register..." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp451 36 "%0%!FUNC!: Registration state: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
registerState, ItemEnum(_WWAN_REGISTER_STATE) -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp455 37 "%0%!FUNC!: Registration state isn't home; aborting" //   LEVEL=TRACE_LEVEL_WARNING
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp468 38 "%0%!FUNC!: Unable to create radioOff event: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp478 39 "%0%!FUNC!: Disconnect succeeded" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp488 40 "%0%!FUNC!: Disconnect failed: err=%10!#x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pDisconnectFailedInfo->ErrorCode.dwErrCode, ItemLong -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp494 41 "%0%!FUNC!: Disconnecting..." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp498 42 "%0%!FUNC!: No longer connected" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp504 43 "%0%!FUNC!: Unable to disconnect: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp508 44 "%0%!FUNC!: Waiting for the disconnect" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp531 45 "%0%!FUNC!: Unable to create radioOff event: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp542 46 "%0%!FUNC!: Connect succeeded: accessstring="%10!s!"" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pConnectionAttributes->AccessString, ItemWString -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp552 47 "%0%!FUNC!: Connect failed: err=%10!#x! mode=%11!d! profilename="%12!s!"" //   LEVEL=TRACE_LEVEL_VERBOSE
{
pConnectFailedInfo->ErrorCode.dwErrCode, ItemLong -- 10
pConnectFailedInfo->connMode, ItemLong -- 11
pConnectFailedInfo->strProfileName, ItemWString -- 12
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp564 48 "%0%!FUNC!: Connecting to "%10!s!"..." //   LEVEL=TRACE_LEVEL_INFORMATION
{
ProfileName.c_str(), ItemWString -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp569 49 "%0%!FUNC!: Unable to connect to "%10!s!"" //   LEVEL=TRACE_LEVEL_ERROR
{
ProfileName.c_str(), ItemWString -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp57 10 "%0%!FUNC!: Unable to register for notifications: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp573 50 "%0%!FUNC!: Waiting for connection to "%10!s!"" //   LEVEL=TRACE_LEVEL_INFORMATION
{
ProfileName.c_str(), ItemWString -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp637 51 "%0%!FUNC!: Wait result = %10!#x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
dwWait, ItemLong -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp640 52 "%0%!FUNC!: Action has finished" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp644 53 "%0%!FUNC!: Interface has been removed!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp649 54 "%0%!FUNC!: Operation has been cancelled" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp655 55 "%0%!FUNC!: Unexpected wait result: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp675 56 "%0%!FUNC!: Connecting to the WWAN service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp685 57 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp689 58 "%0%!FUNC!: Interface GUID: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp702 59 "%0%!FUNC!: Unable to query for radio state; assuming it is on (%10!s!)" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp707 60 "%0%!FUNC!: Radio is already off -- assuming the user wants it that way; aborting" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp714 61 "%0%!FUNC!: Turning the radio off and waiting until completion" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp724 62 "%0%!FUNC!: Turning the radio on and waiting for registration to the home network" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp735 63 "%0%!FUNC!: Locating the default profile..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp740 64 "%0%!FUNC!: Could not locate default profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp744 65 "%0%!FUNC!: Connecting and waiting for completion" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp751 66 "%0%!FUNC!: Completed." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp766 67 "%0%!FUNC!: Connecting to the WWAN service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp777 68 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp781 69 "%0%!FUNC!: Interface GUID: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp791 70 "%0Reconnecting due to a failed reregistration -- making sure radio is on before continuing" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp796 71 "%0%!FUNC!: Unable to query for radio state; assuming it is on (%10!s!)" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp80 11 "%0WWANLISTENER: [%10!s!] %11!s! received" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&Notification.InterfaceGuid, ItemGuid -- 10
Notification.NotificationCode, ItemEnum(WWAN_MSM_EVENT_TYPE) -- 11
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp804 72 "%0%!FUNC!: Turning the radio on and waiting for registration to the home network" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp815 73 "%0%!FUNC!: Registration state: %10!s! (%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION
{
registerState, ItemEnum(_WWAN_REGISTER_STATE) -- 10
hr, ItemHRESULT -- 11
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp819 74 "%0%!FUNC!: Registration state isn't home; aborting" //   LEVEL=TRACE_LEVEL_WARNING
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp831 75 "%0Unable to determine if connected; assuming connected (%10!s!)" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp84 12 "%0WWANLISTENER: [%10!s!] %11!s! received" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&Notification.InterfaceGuid, ItemGuid -- 10
Notification.NotificationCode, ItemEnum(WWAN_PNP_EVENT_TYPE) -- 11
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp840 76 "%0%!FUNC!: Not connected." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp847 77 "%0%!FUNC!: Locating the default profile..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp852 78 "%0%!FUNC!: Could not locate default profile: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp862 79 "%0%!FUNC!: Completed." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp879 80 "%0%!FUNC!: FindWwanInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp88 13 "%0WWANLISTENER: [%10!s!] Other event received (source=%11!#x!, code=%12!#x!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&Notification.InterfaceGuid, ItemGuid -- 10
Notification.NotificationSource, ItemLong -- 11
Notification.NotificationCode, ItemLong -- 12
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp884 81 "%0%!FUNC!: Querying ready state on interface %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&interfaceGuid, ItemGuid -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp888 82 "%0%!FUNC!: QueryActivationState failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp891 83 "%0%!FUNC!: Ready state for interface %10!s! = %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
&interfaceGuid, ItemGuid -- 10
isStateNotActivated ? L'NotActivated' : L'Activated', ItemWString -- 11
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp895 84 "%0%!FUNC!: Returning and not doing service activation since ready state is Activated" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp899 85 "%0%!FUNC!: Calling service activate on interface %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&interfaceGuid, ItemGuid -- 10
}

8f076979-b110-35d3-c14e-ebca1d2730f8 provcore // SRC=activationmethods.cpp MJ= MN=
#typev activationmethods_cpp903 86 "%0%!FUNC!: ActivateServiceOnInterface failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp165 16 "%0%!FUNC!: Done (ErrorOccurred=%10!s! results=%11!Iu! chars)." //   LEVEL=TRACE_LEVEL_VERBOSE
{
errorOccurred, ItemListLong(false,true) -- 10
resultsXml.size(), ItemPtr -- 11
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp166 17 "%0%!FUNC!: Results XML: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
resultsXml.c_str(), ItemWString -- 10
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp38 10 "%0%!FUNC!: Creating handlers" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp57 11 "%0%!FUNC!: Setting parameters for handler %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
interfaceHandler->GetName().c_str(), ItemWString -- 10
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp68 12 "%0%!FUNC!: Engine instantiated (carrierId=%10!s!, subscriberId=%11!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Params.CarrierId.c_str(), ItemWString -- 10
Params.SubscriberId.c_str(), ItemWString -- 11
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp77 13 "%0%!FUNC!: Provisioning." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp82 14 "%0%!FUNC!: Getting unique profile names for MBN profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

8fa31abb-09a5-3500-07ff-988394712b1b provcore // SRC=handlerengine.cpp MJ= MN=
#typev handlerengine_cpp91 15 "%0%!FUNC!: Invoking Provision() on "%10!s!" handler." //   LEVEL=TRACE_LEVEL_VERBOSE
{
handlerName.c_str(), ItemWString -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp107 16 "%0%!FUNC!: Successfully opened provisioning key" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp109 17 "%0%!FUNC!: Number of Carrier keys found: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
static_cast<int>(carrierKeyNames.size()), ItemLong -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp115 18 "%0%!FUNC!: Successfully opened Carrier store key for carrier: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
carrierKey.c_str(), ItemWString -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp117 19 "%0%!FUNC!: Number of Subscriber keys found: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
static_cast<int>(subscriberKeyNames.size()), ItemLong -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp123 20 "%0%!FUNC!: Successfully opened Subscriber store key for subscriber: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
subscriberKey.c_str(), ItemWString -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp128 21 "%0%!FUNC!: AppId found for %10!s!\%11!s!: %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
carrierKey.c_str(), ItemWString -- 10
subscriberKey.c_str(), ItemWString -- 11
appId.c_str(), ItemWString -- 12
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp137 22 "%0%!FUNC!: Getting AppId failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
regResult, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp147 23 "%0%!FUNC!: AppId info list count = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
static_cast<int>(AppIdInfoList.size()), ItemLong -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp148 24 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp154 25 "%0%!FUNC!: Removing AppId from registry for %10!s!\%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
CarrierId.c_str(), ItemWString -- 10
SubscriberId.c_str(), ItemWString -- 11
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp162 26 "%0%!FUNC!: AppId entry deleted for %10!s!\%11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
CarrierId.c_str(), ItemWString -- 10
SubscriberId.c_str(), ItemWString -- 11
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp166 27 "%0%!FUNC!: Failed to delete AppId entry: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
regResult, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp173 28 "%0%!FUNC!: Checking for App existence for package family name: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
PackageFamilyName.c_str(), ItemWString -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp181 29 "%0%!FUNC!: App package found" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp186 30 "%0%!FUNC!: Did not find App package" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp194 31 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp199 32 "%0%!FUNC!: Extracting data and interfaces from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp216 33 "%0%!FUNC!: GetAppIdInfoListFromRegistry() failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp250 34 "%0%!FUNC!: Return code for WLAN Purge operation = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hrExecute, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp279 35 "%0%!FUNC!: Firing ITaskHandlerStatus::TaskCompleted() with %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp283 36 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp293 37 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp302 38 "%0%!FUNC!: Unable to lower thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp305 39 "%0%!FUNC!: Initializing COM." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp323 40 "%0%!FUNC!: Unable to restore thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp327 41 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp34 10 "%0%!FUNC!: Creating stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp356 42 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp362 43 "%0%!FUNC!: HandlerServices is NULL; invalid argument" //   LEVEL=TRACE_LEVEL_ERROR
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp370 44 "%0%!FUNC!: QI for ITaskHandlerStatus" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp377 45 "%0%!FUNC!: Marshalling parameters into inter-thread stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp383 46 "%0%!FUNC!: Starting purge thread" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp387 47 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp394 48 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp405 49 "%0%!FUNC!: Stopping purge thread" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp411 50 "%0%!FUNC!: Return code = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
*ReturnCode, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp414 51 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp458 52 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp46 11 "%0%!FUNC!: Marshalling ITaskHandlerStatus interface into stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp464 53 "%0%!FUNC!: Waiting for task thread to exit" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp468 54 "%0%!FUNC!: CoWaitForMultipleHandles returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp481 55 "%0%!FUNC!: Task thread not running" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp484 56 "%0%!FUNC!: <----- exit code = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp52 12 "%0%!FUNC!: Seeking to start of stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp59 13 "%0%!FUNC!: Detaching stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp80 14 "%0%!FUNC!: Unmarshalling ITaskHandlerStatus from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

92f27ac7-a8de-3e03-7bc2-626a15bc7101 provcore // SRC=PurgeTask.cpp MJ= MN=
#typev PurgeTask_cpp95 15 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp106 13 "%0CoSetProxyBlanket on ISequentialStream: %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemLong -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp123 14 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp132 15 "%0%!FUNC!: Message time window size is %10!Iu!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
msgTimeWindow.size(), ItemPtr -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp155 16 "%0Exception thrown while checking for throttling" //   LEVEL=TRACE_LEVEL_WARNING
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp159 17 "%0%!FUNC!: <---- %10!s! (hr=%11!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
throttle, ItemListLong(false,true) -- 10
hr, ItemHRESULT -- 11
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp168 18 "%0%!FUNC!: Creating activity ID..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp172 19 "%0%!FUNC!: Setting activity ID %10!s!..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
&activityId, ItemGuid -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp179 20 "%0%!FUNC!: Creating/Setting the activity id failed: %10!#x!" //   LEVEL=TRACE_LEVEL_WARNING
{
evtRet, ItemLong -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp204 21 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp219 22 "%0%!FUNC!: Setting proxy blanket on IStream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp226 23 "%0%!FUNC!: Checking stream size" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp231 24 "%0%!FUNC!: Unable to get stream stats: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp237 25 "%0%!FUNC!: Stream size = %10!I64u!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
stat.cbSize.QuadPart, ItemULongLong -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp240 26 "%0%!FUNC!: Stream > 2MB; rejecting" //   LEVEL=TRACE_LEVEL_ERROR
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp249 27 "%0%!FUNC!: Resetting the stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp263 28 "%0%!FUNC!: Creating document from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp273 29 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp285 30 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp287 31 "%0%!FUNC!: CarrierId = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
CarrierId, ItemWString -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp288 32 "%0%!FUNC!: Certificate CarrierId = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
CertificateIssuer, ItemWString -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp289 33 "%0%!FUNC!: Certificate Subject = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
CertificateSubject, ItemWString -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp304 34 "%0%!FUNC!: Creating/opening certificate store" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp313 35 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp325 36 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp351 37 "%0%!FUNC!: Unable to lower thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp365 38 "%0%!FUNC!: Unable to restore thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp370 39 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp40 10 "%0%!FUNC!: CoImpersonateClient failed with %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp420 40 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp451 41 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp463 42 "%0%!FUNC!: ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp488 43 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp56 11 "%0CoSetProxyBlanket on IStream: %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemLong -- 10
}

94950eee-38af-3fab-5374-d9142065e063 provcore // SRC=ProvisioningEngine.cpp MJ= MN=
#typev ProvisioningEngine_cpp81 12 "%0CoSetProxyBlanket on IUnknown: %10!08x!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemLong -- 10
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp109 14 "%0%!FUNC!: WcmOpenHandle failed with %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
ret, ItemWINERROR -- 10
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp124 15 "%0%!FUNC!: Opening handle to the WLAN service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp138 16 "%0%!FUNC!:Enumerating over the WLAN interfaces" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp169 17 "%0%!FUNC!: Opening handle to the WWAN service" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp183 18 "%0%!FUNC!:Enumerating over the WWAN interfaces" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp48 10 "%0%!FUNC!: %10!s! has not been set on profile %11!s! on interface %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
Property, ItemEnum(_WCM_PROPERTY) -- 10
ProfileName.c_str(), ItemWString -- 11
&InterfaceGuid, ItemGuid -- 12
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp52 11 "%0%!FUNC!: GetWcmProperty(%10!s!, %11!s!, %12!s!) failed with %13!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
&InterfaceGuid, ItemGuid -- 10
ProfileName.c_str(), ItemWString -- 11
Property, ItemEnum(_WCM_PROPERTY) -- 12
hr, ItemHRESULT -- 13
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp56 12 "%0%!FUNC!: Changing %10!s! on interface %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Property, ItemEnum(_WCM_PROPERTY) -- 10
&InterfaceGuid, ItemGuid -- 11
}

97cfa889-13df-349b-f452-78259f56e61a provagent // SRC=wcmhelper.cpp MJ= MN=
#typev wcmhelper_cpp62 13 "%0%!FUNC!: SetWcmProperty(%10!s!, %11!s!, %12!s!) failed with %13!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
&InterfaceGuid, ItemGuid -- 10
ProfileName.c_str(), ItemWString -- 11
Property, ItemEnum(_WCM_PROPERTY) -- 12
hr, ItemHRESULT -- 13
}

9a0db0bf-2f51-33cc-3505-082a777a4054 provagent // SRC=win32apiwrappers.cpp MJ= MN=
#typev win32apiwrappers_cpp47 10 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

9b7ecb77-160d-32d2-32ae-dec0346756aa MBAELib // SRC=MbaeAccountBindingCommon.cpp MJ= MN=
#typev MbaeAccountBindingCommon_cpp125 16 "%0%!FUNC! ---->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9b7ecb77-160d-32d2-32ae-dec0346756aa MBAELib // SRC=MbaeAccountBindingCommon.cpp MJ= MN=
#typev MbaeAccountBindingCommon_cpp141 17 "%0%!FUNC! <---- hr = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp110 16 "%0%!FUNC!: Document is signed" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp111 17 "%0%!FUNC!: Verifying thumbprint exist in store" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp118 18 "%0%!FUNC!: Signer is trusted: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_DocumentSignatureInformation.SignerIsTrusted, ItemListLong(false,true) -- 10
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp132 19 "%0========== Provisioning XML ============" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp133 20 "%0%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_XmlDoc->GetXml().c_str(), ItemWString -- 10
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp147 21 "%0%!FUNC!: Instantiating handler engine." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp150 22 "%0%!FUNC!: Provisioning." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp156 23 "%0%!FUNC!: Storing certificate" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp169 24 "%0%!FUNC!: Provisioning results (errorOccurred=%10!s!, results=%11!Iu! chars)" //   LEVEL=TRACE_LEVEL_INFORMATION
{
results.first, ItemListLong(false,true) -- 10
results.second.size(), ItemPtr -- 11
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp28 11 "%0%!FUNC!: Initializing using stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp36 12 "%0%!FUNC!: Loading XML document from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp59 13 "%0%!FUNC!: Validating schema" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp65 14 "%0%!FUNC!: XML document is not valid" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

9dac3e1e-abd4-3d23-ae35-c6f4e5b8cc52 provcore // SRC=document.cpp MJ= MN=
#typev document_cpp79 15 "%0%!FUNC!: Verifying signature" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp104 16 "%0%!FUNC!: Unable to generate unique key name for %10!s!: %11!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
childNode->GetName().c_str(), ItemWString -- 10
hr, ItemHRESULT -- 11
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp108 17 "%0%!FUNC!: Mapping node <%10!s!> to key "%11!s!"" //   LEVEL=TRACE_LEVEL_VERBOSE
{
childNode->GetName().c_str(), ItemWString -- 10
uniqueKeyName.c_str(), ItemWString -- 11
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp119 18 "%0%!FUNC!: Serializing child node %10!s! failed: %11!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
childNode->GetName().c_str(), ItemWString -- 10
hr, ItemHRESULT -- 11
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp58 10 "%0%!FUNC!: Writing %10!Iu! attributes" //   LEVEL=TRACE_LEVEL_VERBOSE
{
attributes.size(), ItemPtr -- 10
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp65 11 "%0%!FUNC!: Writing value %10!s!=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
valueName.c_str(), ItemWString -- 10
value.c_str(), ItemWString -- 11
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp69 12 "%0%!FUNC!: Unable to set registry value for attribute value %10!s!: %11!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
valueName.c_str(), ItemWString -- 10
hr, ItemHRESULT -- 11
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp81 13 "%0%!FUNC!: Writing default value of "%10!s!"." //   LEVEL=TRACE_LEVEL_VERBOSE
{
Node.GetText().c_str(), ItemWString -- 10
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp85 14 "%0%!FUNC!: Unable to set default value on key: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

9f384ef4-275a-3ed7-15ab-259526330424 provcore // SRC=xmlhelp.cpp MJ= MN=
#typev xmlhelp_cpp96 15 "%0%!FUNC!: Serializing %10!Iu! children..." //   LEVEL=TRACE_LEVEL_VERBOSE
{
nodeChildren.size(), ItemPtr -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp111 18 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp129 19 "%0%!FUNC!: Task deletion flag not present in task params" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp150 20 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp153 21 "%0%!FUNC!: Extracting data and interfaces from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp180 22 "%0%!FUNC!: RetreiveTaskParameters() failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp192 23 "%0%!FUNC!: Return code = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp204 24 "%0%!FUNC!: Deleting refresh task upon successful completion" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp219 25 "%0%!FUNC!: Updating task parameters to delete task next time" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp230 26 "%0%!FUNC!: Firing ITaskHandlerStatus::TaskCompleted() with %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp234 27 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp24 10 "%0%!FUNC!: Creating stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp244 28 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp253 29 "%0%!FUNC!: Unable to lower thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp256 30 "%0%!FUNC!: Initializing COM." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp274 31 "%0%!FUNC!: Unable to restore thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp278 32 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp307 33 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp31 11 "%0%!FUNC!: Writing task data to stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp313 34 "%0%!FUNC!: HandlerServices is NULL; invalid argument" //   LEVEL=TRACE_LEVEL_ERROR
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp320 35 "%0%!FUNC!: No task data; aborting!" //   LEVEL=TRACE_LEVEL_ERROR
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp328 36 "%0%!FUNC!: QI for ITaskHandlerStatus" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp335 37 "%0%!FUNC!: Marshalling parameters into inter-thread stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp341 38 "%0%!FUNC!: Starting download thread" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp345 39 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp352 40 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp363 41 "%0%!FUNC!: Stopping download thread" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp369 42 "%0%!FUNC!: Return code = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
*ReturnCode, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp372 43 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp41 12 "%0%!FUNC!: Marshalling ITaskHandlerStatus interface into stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp416 44 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp422 45 "%0%!FUNC!: Waiting for task thread to exit" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp426 46 "%0%!FUNC!: CoWaitForMultipleHandles returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp439 47 "%0%!FUNC!: Task thread not running" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp442 48 "%0%!FUNC!: <----- exit code = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp47 13 "%0%!FUNC!: Seeking to start of stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp54 14 "%0%!FUNC!: Detaching stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp70 15 "%0%!FUNC!: Reading task data from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp78 16 "%0%!FUNC!: Unmarshalling ITaskHandlerStatus from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a5827f42-32a1-3ac9-3ad5-da4d89e1dacc provcore // SRC=ProvisioningTask.cpp MJ= MN=
#typev ProvisioningTask_cpp94 17 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp102 19 "%0%!FUNC!: Reading task data from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp110 20 "%0%!FUNC!: Unmarshalling ITaskHandlerStatus from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp126 21 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp141 22 "%0%!FUNC!: Failed to find task parameters in registry" //   LEVEL=TRACE_LEVEL_ERROR
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp147 23 "%0%!FUNC!: RetreiveTaskParameters() failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp150 24 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp165 25 "%0%!FUNC!: Method is not present in task data" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp168 26 "%0%!FUNC!: Activation method=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Method.c_str(), ItemWString -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp177 27 "%0%!FUNC!: FirstAttemptWasFailedReregistration = %10!s! (%11!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
nextLine.c_str(), ItemWString -- 10
FirstAttemptWasFailedReregistration, ItemLong -- 11
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp186 28 "%0%!FUNC!: Encoded payload not present in task data" //   LEVEL=TRACE_LEVEL_WARNING
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp211 29 "%0%!FUNC!: Exception caught reregistering: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp216 30 "%0%!FUNC!: Updating activation params in registry to do only reconnect next time" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp224 31 "%0%!FUNC!: Unable to update activation parameters in registry: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
result, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp236 32 "%0%!FUNC!: Unexpected empty payload defined for ServiceActivation method." //   LEVEL=TRACE_LEVEL_WARNING
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp24 10 "%0%!FUNC!: Creating stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp245 33 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp250 34 "%0%!FUNC!: Extracting data and interfaces from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp266 35 "%0%!FUNC!: Getting activation parameters from registry" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp277 36 "%0%!FUNC!: Parsing the task data to retrieve activation method and payload" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp282 37 "%0%!FUNC!: Calling activation method %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
method.c_str(), ItemWString -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp305 38 "%0%!FUNC!: Unsupported activation method! (method="%10!s!")" //   LEVEL=TRACE_LEVEL_ERROR
{
method.c_str(), ItemWString -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp31 11 "%0%!FUNC!: Writing cancel event handle into stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp313 39 "%0%!FUNC!: Firing ITaskHandlerStatus::TaskCompleted() with %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp317 40 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp327 41 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp336 42 "%0%!FUNC!: Unable to lower thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp339 43 "%0%!FUNC!: Initializing COM." //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp357 44 "%0%!FUNC!: Unable to restore thread priority: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemWINERROR -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp361 45 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp380 46 "%0%!FUNC!: Unable to create cancel event: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp39 12 "%0%!FUNC!: Unable to write cancel event into stream; returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp406 47 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp412 48 "%0%!FUNC!: HandlerServices is NULL; invalid argument" //   LEVEL=TRACE_LEVEL_ERROR
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp419 49 "%0%!FUNC!: No task data; aborting!" //   LEVEL=TRACE_LEVEL_ERROR
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp427 50 "%0%!FUNC!: QI for ITaskHandlerStatus" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp434 51 "%0%!FUNC!: Marshalling parameters into inter-thread stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp440 52 "%0%!FUNC!: Starting download thread" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp444 53 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp451 54 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp462 55 "%0%!FUNC!: Stopping download thread" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp468 56 "%0%!FUNC!: Return code = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
*ReturnCode, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp47 13 "%0%!FUNC!: Writing task data to stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp471 57 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp517 58 "%0%!FUNC!: ----->" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp526 59 "%0%!FUNC!: Waiting for task thread to exit" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp530 60 "%0%!FUNC!: CoWaitForMultipleHandles returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp543 61 "%0%!FUNC!: Task thread not running" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp546 62 "%0%!FUNC!: <----- exit code = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp57 14 "%0%!FUNC!: Marshalling ITaskHandlerStatus interface into stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp63 15 "%0%!FUNC!: Seeking to start of stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp70 16 "%0%!FUNC!: Detaching stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp85 17 "%0%!FUNC!: Reading cancel event from stream" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a7021c38-ef2d-3474-8d93-610a4410fb1f provcore // SRC=ActivationTask.cpp MJ= MN=
#typev ActivationTask_cpp93 18 "%0%!FUNC!: Unable to read cancel event from stream; returning %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp108 11 "%0%!FUNC!: Unable to format error details for message id %10!u!: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
MessageId, ItemLong -- 10
GetLastError(), ItemWINERROR -- 11
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp131 12 "%0Validation failed: PatternMissingOrEmptyException" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp136 13 "%0Validation failed: InvalidPatternException" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp141 14 "%0Validation failed: InvalidGroupException: Group=%10!Iu! Field=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetGroupId(), ItemPtr -- 10
e.GetField().c_str(), ItemWString -- 11
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp153 15 "%0Validation failed: GroupNotBoundException: Group=%10!Iu!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetGroupId(), ItemPtr -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp158 16 "%0Validation failed: GroupAlreadyBoundException: Group=%10!Iu! Field=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetGroupId(), ItemPtr -- 10
e.GetField().c_str(), ItemWString -- 11
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp163 17 "%0Validation failed: UnsatisfiedFieldDependencyException: Field=%10!s! Dependant=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetField().c_str(), ItemWString -- 10
e.GetDependant().c_str(), ItemWString -- 11
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp168 18 "%0Validation failed: MissingAttributeException: Field=%10!s! Attribute=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetField().c_str(), ItemWString -- 10
e.GetAttribute().c_str(), ItemWString -- 11
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp173 19 "%0Validation failed: UnitGroupWithoutUnitsException: Field=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetField().c_str(), ItemWString -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp178 20 "%0Validation failed: UnitGroupAndDefaultUnitMissingException: Field=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetField().c_str(), ItemWString -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp183 21 "%0Validation failed: DuplicateMappingException: Node=%10!s! Token=%11!s! Attribute=%12!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetNode().c_str(), ItemWString -- 10
e.GetToken().c_str(), ItemWString -- 11
e.GetAttribute().c_str(), ItemWString -- 12
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp188 22 "%0Validation failed: InvalidLocaleException: Locale=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetLocaleName().c_str(), ItemWString -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp193 23 "%0Validation failed: InvalidDateTimeFormatException: Reason=%10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
e.GetReason(), ItemLong -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp222 24 "%0Validation failed: Unexpected Notification::Exception: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
e.What(), ItemString -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp234 25 "%0Failed to store message rule to path" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp257 26 "%0Processing <Message> node (%10!Iu! of %11!Iu!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
position, ItemPtr -- 10
messageNodes.size(), ItemPtr -- 11
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp303 27 "%0%!FUNC!: Unable to fully clean up existing notification rules: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

a9bdf8e3-f9d8-35d8-8f70-370599e1fa9a provcore // SRC=notificationrules.cpp MJ= MN=
#typev notificationrules_cpp83 10 "%0%!FUNC!: Unable to find error details message id %10!u!: %11!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
MessageId, ItemLong -- 10
GetLastError(), ItemWINERROR -- 11
}

ac927422-0955-33d1-821d-131279d52256 provcore // SRC=dllmain.cpp MJ= MN=
#typev dllmain_cpp104 15 "%0%!FUNC!: AtlModule.DllGetClassObject == %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hrAtl, ItemHRESULT -- 10
}

ac927422-0955-33d1-821d-131279d52256 provcore // SRC=dllmain.cpp MJ= MN=
#typev dllmain_cpp55 10 "%0%!FUNC!: -----> activatibleClassId = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
classIdRef.GetRawBuffer(nullptr), ItemWString -- 10
}

ac927422-0955-33d1-821d-131279d52256 provcore // SRC=dllmain.cpp MJ= MN=
#typev dllmain_cpp59 11 "%0%!FUNC!: <----- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

ac927422-0955-33d1-821d-131279d52256 provcore // SRC=dllmain.cpp MJ= MN=
#typev dllmain_cpp83 12 "%0%!FUNC!: CLSID=%10!s! IID=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
&rclsid, ItemGuid -- 10
&riid, ItemGuid -- 11
}

ac927422-0955-33d1-821d-131279d52256 provcore // SRC=dllmain.cpp MJ= MN=
#typev dllmain_cpp88 13 "%0%!FUNC!: Microsft::WRL::Module::GetClassObject() == S_OK" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

ac927422-0955-33d1-821d-131279d52256 provcore // SRC=dllmain.cpp MJ= MN=
#typev dllmain_cpp97 14 "%0%!FUNC!: Caller is not running as Local Service; returning FALSE." //   LEVEL=TRACE_LEVEL_ERROR
{
}

ba0bb414-7004-3d6e-e917-41240d343b86 provcore // SRC=Wcmutil.cpp MJ= MN=
#typev Wcmutil_cpp146 13 "%0%!FUNC!: WcmQueryParameter called for interface %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
pInterface, ItemGuid -- 10
}

ba0bb414-7004-3d6e-e917-41240d343b86 provcore // SRC=Wcmutil.cpp MJ= MN=
#typev Wcmutil_cpp157 14 "%0%!FUNC!: WcmQueryParameter returned" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

ba0bb414-7004-3d6e-e917-41240d343b86 provcore // SRC=Wcmutil.cpp MJ= MN=
#typev Wcmutil_cpp22 10 "%0%!FUNC!: Duration received from provisioning xml = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
duration.c_str(), ItemWString -- 10
}

ba0bb414-7004-3d6e-e917-41240d343b86 provcore // SRC=Wcmutil.cpp MJ= MN=
#typev Wcmutil_cpp288 15 "%0%!FUNC!: WcmQueryParameter failed for %10!s! on interface %11!s! with error code = %12!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
dwResult, ItemWINERROR -- 12
}

ba0bb414-7004-3d6e-e917-41240d343b86 provcore // SRC=Wcmutil.cpp MJ= MN=
#typev Wcmutil_cpp305 16 "%0%!FUNC!: Profile %10!s! on interface %11!s! was not provisioned by carrier" //   LEVEL=TRACE_LEVEL_ERROR
{
ProfileName.c_str(), ItemWString -- 10
&InterfaceGuid, ItemGuid -- 11
}

ba0bb414-7004-3d6e-e917-41240d343b86 provcore // SRC=Wcmutil.cpp MJ= MN=
#typev Wcmutil_cpp46 11 "%0%!FUNC!: Failed to parse duration" //   LEVEL=TRACE_LEVEL_ERROR
{
}

ba0bb414-7004-3d6e-e917-41240d343b86 provcore // SRC=Wcmutil.cpp MJ= MN=
#typev Wcmutil_cpp50 12 "%0%!FUNC!: Parsed: Years=%10!d! Months=%11!d! Days=%12!d! Hours=%13!d! Minutes=%14!d! Seconds=%15!d! Milliseconds=%16!d!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
timeInterval.wYear, ItemLong -- 10
timeInterval.wMonth, ItemLong -- 11
timeInterval.wDay, ItemLong -- 12
timeInterval.wHour, ItemLong -- 13
timeInterval.wMinute, ItemLong -- 14
timeInterval.wSecond, ItemLong -- 15
timeInterval.wMilliseconds, ItemLong -- 16
}

bd841bc7-9677-37c1-e719-c141ee76ffcb provnotif // SRC=ussdbearerfilter.cpp MJ= MN=
#typev ussdbearerfilter_cpp19 10 "%0%!FUNC!: Filter(USSD) == Rule(USSD) ? 1" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

bd841bc7-9677-37c1-e719-c141ee76ffcb provnotif // SRC=ussdbearerfilter.cpp MJ= MN=
#typev ussdbearerfilter_cpp24 11 "%0%!FUNC!: Config doesn't indicate a USSD bearers" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

c1b7a2b6-ac56-301e-6c3d-1cdc44688f04 provcore // SRC=wlanhandler.cpp MJ= MN=
#typev wlanhandler_cpp49 10 "%0%!FUNC!: No WLANProfiles node" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

c1b7a2b6-ac56-301e-6c3d-1cdc44688f04 provcore // SRC=wlanhandler.cpp MJ= MN=
#typev wlanhandler_cpp58 11 "%0%!FUNC!: No WLAN Profiles" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

c1b7a2b6-ac56-301e-6c3d-1cdc44688f04 provcore // SRC=wlanhandler.cpp MJ= MN=
#typev wlanhandler_cpp94 12 "%0%!FUNC!: Deleting all profiles for carrierId=%10!s! subscriberId=%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Params.CarrierId.c_str(), ItemWString -- 10
m_Params.SubscriberId.c_str(), ItemWString -- 11
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp100 21 "%0%!FUNC!: No-one to revert" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp106 22 "%0%!FUNC!: Unable to revert impersonation: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp118 23 "%0%!FUNC!: Impersonated caller" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp122 24 "%0%!FUNC!: No-one to impersonate" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp127 25 "%0%!FUNC!: Impersonation failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp135 26 "%0%!FUNC!: Impersonation %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
isImpersonating, ItemListLong(false,true) -- 10
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp143 27 "%0%!FUNC!: User is supposed to being impersonating at this point. Throwing exception" //   LEVEL=TRACE_LEVEL_ERROR
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp152 28 "%0%!FUNC!: User is supposed to not being impersonating at this point. Throwing exception" //   LEVEL=TRACE_LEVEL_ERROR
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp31 10 "%0%!FUNC!: Initializing AutoImpersonate" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp36 11 "%0%!FUNC!: Already impersonating" //   LEVEL=TRACE_LEVEL_ERROR
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp47 12 "%0%!FUNC!: Impersonated caller" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp52 13 "%0%!FUNC!: No-one to impersonate" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp58 14 "%0%!FUNC!: Impersonation failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp67 15 "%0%!FUNC!: Reverting impersonation" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp72 16 "%0%!FUNC!: Reverted impersonation" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp76 17 "%0%!FUNC!: No-one to revert" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp81 18 "%0%!FUNC!: Unable to revert impersonation: %10!s!" //   LEVEL=TRACE_LEVEL_WARNING
{
hr, ItemHRESULT -- 10
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp88 19 "%0%!FUNC!: Initializing AutoRevertImpersonate" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d1057693-d0d6-3de1-ffe7-e18b4bee073c provcore // SRC=AutoImpersonate.cpp MJ= MN=
#typev AutoImpersonate_cpp96 20 "%0%!FUNC!: Reverted impersonation" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d2b7f580-db93-35cb-441f-e01840de87e9 provnotif // SRC=messageparser.cpp MJ= MN=
#typev messageparser_cpp72 10 "%0MessageParser::Parse: Matching "%10!s!" against "%11!s!"" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Text.c_str(), ItemWString -- 10
m_Pattern.c_str(), ItemWString -- 11
}

d2b7f580-db93-35cb-441f-e01840de87e9 provnotif // SRC=messageparser.cpp MJ= MN=
#typev messageparser_cpp76 11 "%0MessageParser::Parse: Failed to match" //   LEVEL=TRACE_LEVEL_WARNING
{
}

d2b7f580-db93-35cb-441f-e01840de87e9 provnotif // SRC=messageparser.cpp MJ= MN=
#typev messageparser_cpp80 12 "%0MessageParser::Parse: Matched text; %10!Iu! groups" //   LEVEL=TRACE_LEVEL_VERBOSE
{
match.size(), ItemPtr -- 10
}

d2b7f580-db93-35cb-441f-e01840de87e9 provnotif // SRC=messageparser.cpp MJ= MN=
#typev messageparser_cpp83 13 "%0   match[%10!Iu!] = %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
i, ItemPtr -- 10
match[i].str().c_str(), ItemWString -- 11
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp117 15 "%0Host: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Host.c_str(), ItemWString -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp118 16 "%0Username: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Username.c_str(), ItemWString -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp119 17 "%0Password: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Password.c_str(), ItemWString -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp120 18 "%0Path: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Path.c_str(), ItemWString -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp121 19 "%0Port: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_Port, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp130 20 "%0%!FUNC!: Error opening session: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp139 21 "%0%!FUNC!: Setting download limit to %10!Iu!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Limit, ItemPtr -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp155 22 "%0%!FUNC!: Setting creds to %10!s!:%11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Username.c_str(), ItemWString -- 10
Password.c_str(), ItemWString -- 11
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp170 24 "%0%!FUNC!: HTTP GET Initiated" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp190 25 "%0%!FUNC!: Proxy detection for %10!s! failed with %11!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
m_Url.c_str(), ItemWString -- 10
GetLastError(), ItemLong -- 11
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp201 26 "%0Error connecting to host: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp213 27 "%0Error opening request handle: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp226 28 "%0%!FUNC!: Setting proxy option failed with %10!08x!" //   LEVEL=TRACE_LEVEL_WARNING
{
GetLastError(), ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp251 29 "%0Error sending request: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp261 30 "%0Error receiving response: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp275 31 "%0Error querying for status code request: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp279 32 "%0%!FUNC!: Status code of %10!d! returned" //   LEVEL=TRACE_LEVEL_VERBOSE
{
statusCode, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp284 33 "%0%!FUNC!: Download unsuccessful; throwing HrException(%10!08x!)" //   LEVEL=TRACE_LEVEL_ERROR
{
hrStatusCode, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp302 34 "%0%!FUNC!: WinHttpQueryDataAvailable failed with %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp323 35 "%0%!FUNC!: WinHttpQueryDataAvailable failed with %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp36 10 "%0%!FUNC!: Error setting option %10!d!: %11!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
Option, ItemLong -- 10
gle, ItemLong -- 11
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp49 11 "%0%!FUNC!: Url=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Url.c_str(), ItemWString -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp65 12 "%0%!FUNC!: Non-empty URL string required" //   LEVEL=TRACE_LEVEL_ERROR
{
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp85 13 "%0%!FUNC!: Problem cracking Url: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
gle, ItemLong -- 10
}

d2c539e5-321f-3549-3edc-49e2d9a351ad provcore // SRC=httputil.cpp MJ= MN=
#typev httputil_cpp92 14 "%0%!FUNC!: Unsupported scheme!" //   LEVEL=TRACE_LEVEL_ERROR
{
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp200 13 "%0 ==> %!FUNC!" //   LEVEL=Verbose
{
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp233 14 "%0 %!FUNC!: RegCreateKeyEx failed with %10!s!" //   LEVEL=Error
{
dwResult, ItemWINERROR -- 10
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp244 15 "%0 %!FUNC!: WlanStringToSsid failed with %10!s!" //   LEVEL=Error
{
dwResult, ItemWINERROR -- 10
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp255 16 "%0 %!FUNC!: RegSetValueEx for TETHERING_ROAMING_LOCAL_REG_VALUE_SSID failed with %10!s!" //   LEVEL=Error
{
dwResult, ItemWINERROR -- 10
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp271 17 "%0 %!FUNC!: CryptAcquireContext failed with %10!s!" //   LEVEL=Error
{
GetLastError(), ItemWINERROR -- 10
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp278 18 "%0 %!FUNC!: CryptGenRandom failed with %10!s!" //   LEVEL=Error
{
dwResult, ItemWINERROR -- 10
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp283 19 "%0 %!FUNC!: Updating the key" //   LEVEL=Verbose
{
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp288 20 "%0 %!FUNC!: RegSetValueEx for TETHERING_ROAMING_LOCAL_REG_VALUE_KEY failed with %10!s!" //   LEVEL=Error
{
dwResult, ItemWINERROR -- 10
}

d3a0fba1-f800-3723-789a-fcd6ddebb739 TetheringSettings // SRC=TetheringRoaming.cpp MJ= MN=
#typev TetheringRoaming_cpp318 21 "%0 %!FUNC!: Failed to update tethering profile. Deleting it." //   LEVEL=Verbose
{
}

ddd6056d-633a-35fb-285a-666354536713 common // SRC=profileutil.cpp MJ= MN=
#typev profileutil_cpp32 10 "%0%!FUNC!: UniqueProfileName = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
UniqueProfileName.c_str(), ItemWString -- 10
}

ddd6056d-633a-35fb-285a-666354536713 common // SRC=profileutil.cpp MJ= MN=
#typev profileutil_cpp59 11 "%0%!FUNC!: Getting UniqueProfileName for Default profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

ddd6056d-633a-35fb-285a-666354536713 common // SRC=profileutil.cpp MJ= MN=
#typev profileutil_cpp64 12 "%0%!FUNC!: UniqueProfileName for Default profile = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
UniqueProfileName.c_str(), ItemWString -- 10
}

ddd6056d-633a-35fb-285a-666354536713 common // SRC=profileutil.cpp MJ= MN=
#typev profileutil_cpp73 13 "%0%!FUNC!: Getting UniqueProfileName for Purchase profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

ddd6056d-633a-35fb-285a-666354536713 common // SRC=profileutil.cpp MJ= MN=
#typev profileutil_cpp78 14 "%0%!FUNC!: UniqueProfileName for Purchase profile = %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
UniqueProfileName.c_str(), ItemWString -- 10
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp42 10 "%0%!FUNC!: No WLAN or MBN Profiles to set priority" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp49 11 "%0%!FUNC!: Getting Wlan profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp54 12 "%0%!FUNC!: No WLAN Profiles to set priority" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp59 13 "%0%!FUNC!: Failed to retrieve Wlan profiles" //   LEVEL=TRACE_LEVEL_ERROR
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp66 14 "%0%!FUNC!: Getting Mbn profile" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp71 15 "%0%!FUNC!: No MBN Profile to set priority" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp76 16 "%0%!FUNC!: Failed to retrieve Mbn profile" //   LEVEL=TRACE_LEVEL_ERROR
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp81 17 "%0%!FUNC!: Sorting the profiles" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp91 18 "%0%!FUNC!: Failed to allocate and copy WCM_PROFILE_INFO_LIST" //   LEVEL=TRACE_LEVEL_ERROR
{
}

e46b8fd3-1bd9-39ce-ac7e-103167515d3d provcore // SRC=ProfileOrderingHandler.cpp MJ= MN=
#typev ProfileOrderingHandler_cpp99 19 "%0%!FUNC!: WcmSetProfilePriorityList failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
dwError, ItemWINERROR -- 10
}

eb7060e4-75cb-32bb-9780-ec82b3f61a11 provnotif // SRC=fieldparsers.cpp MJ= MN=
#typev fieldparsers_cpp120 10 "%0Parsing %10!s! as a %11!s! (min/max: [%12!d!,%13!d!])" //   LEVEL=TRACE_LEVEL_VERBOSE
{
m_FieldValues[TF].c_str(), ItemWString -- 10
TF, ItemEnum(Notification::FieldParsers::DateTimeField) -- 11
DateTimeFieldTraits<TF>::Min(), ItemLong -- 12
DateTimeFieldTraits<TF>::Max(), ItemLong -- 13
}

eb7060e4-75cb-32bb-9780-ec82b3f61a11 provnotif // SRC=fieldparsers.cpp MJ= MN=
#typev fieldparsers_cpp197 11 "%0DateTimeFormat: Initialize: Format='%10!s!' AmToken='%11!s!' PmToken='%12!s!'" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Format.c_str(), ItemWString -- 10
m_AmToken.c_str(), ItemWString -- 11
m_PmToken.c_str(), ItemWString -- 12
}

eb7060e4-75cb-32bb-9780-ec82b3f61a11 provnotif // SRC=fieldparsers.cpp MJ= MN=
#typev fieldparsers_cpp301 12 "%0Date regex = '%10!s!'" //   LEVEL=TRACE_LEVEL_VERBOSE
{
dateReg.c_str(), ItemWString -- 10
}

eb7060e4-75cb-32bb-9780-ec82b3f61a11 provnotif // SRC=fieldparsers.cpp MJ= MN=
#typev fieldparsers_cpp327 13 "%0"%10!s!" does not match the datetime regex "%11!s!"" //   LEVEL=TRACE_LEVEL_ERROR
{
Text.c_str(), ItemWString -- 10
m_RegexPattern.c_str(), ItemWString -- 11
}

eb7060e4-75cb-32bb-9780-ec82b3f61a11 provnotif // SRC=fieldparsers.cpp MJ= MN=
#typev fieldparsers_cpp393 14 "%0Extracting DateTime fields from '%10!s!'" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Str.c_str(), ItemWString -- 10
}

eb7060e4-75cb-32bb-9780-ec82b3f61a11 provnotif // SRC=fieldparsers.cpp MJ= MN=
#typev fieldparsers_cpp465 15 "%0Parsed DateTime = %10!04d!-%11!02d!-%12!02d!T%13!02d!:%14!02d!:%15!02d!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
parsedTime.wYear, ItemLong -- 10
parsedTime.wMonth, ItemLong -- 11
parsedTime.wDay, ItemLong -- 12
parsedTime.wHour, ItemLong -- 13
parsedTime.wMinute, ItemLong -- 14
parsedTime.wSecond, ItemLong -- 15
}

eb7060e4-75cb-32bb-9780-ec82b3f61a11 provnotif // SRC=fieldparsers.cpp MJ= MN=
#typev fieldparsers_cpp476 16 "%0Unable to convert parsed time to FILETIME: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp116 18 "%0%!FUNC!: Failed to purge key values/subkeys with %10!s!; throwing HrException." //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp126 19 "%0%!FUNC!: Failed to commit transaciton with %10!08x!; throwing HrException." //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemLong -- 10
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp129 20 "%0%!FUNC!: Transaction committed successfully" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp134 21 "%0%!FUNC!: Deleting existing certificates" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp137 22 "%0%!FUNC!: Storing new certificates" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp62 10 "%0%!FUNC!: Certificate not found in store; returning false." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp65 11 "%0%!FUNC!: Wrong value type for Certificate; returning false." //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp68 12 "%0%!FUNC!: RegQueryValueEx returned failed with %10!s!; throwing HrException." //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp73 13 "%0%!FUNC!: Certificate enabled %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
certificateEnabled, ItemListLong(false,true) -- 10
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp84 14 "%0%!FUNC!: Setting %10!s! to 1" //   LEVEL=TRACE_LEVEL_VERBOSE
{
valueName.c_str(), ItemWString -- 10
}

ed160180-1e8c-31ea-f95c-40d345877ca4 provcore // SRC=certificatestore.cpp MJ= MN=
#typev certificatestore_cpp89 15 "%0%!FUNC!: Failed to store the certificate with %10!s!; throwing HrException." //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp101 15 "%0%!FUNC!: Setting parent window handle" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp129 16 "%0%!FUNC!: Setting command callbacks" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp139 17 "%0Allow command handler invoked" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp156 18 "%0Deny command handler invoked" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp178 19 "%0%!FUNC!: Showing consent dialog" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp184 20 "%0%!FUNC!: Waiting for user input (blocked on message dialog async operation completion)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp188 21 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp250 22 "%0%!FUNC!: ----> (Content: %10!s!, AllowCommandText=%11!s!, DenyCommandText=%12!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Content, ItemWString -- 10
AllowCommandText, ItemWString -- 11
DenyCommandText, ItemWString -- 12
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp271 23 "%0%!FUNC!: Submitting the callback" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp277 24 "%0%!FUNC!: Failed to submit the callback!" //   LEVEL=TRACE_LEVEL_ERROR
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp285 25 "%0Waiting for dialog thread to exit" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp302 26 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp313 27 "%0%!FUNC!: ----> (Content: %10!s!, AllowCommandText=%11!s!, DenyCommandText=%12!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Content, ItemWString -- 10
AllowCommandText, ItemWString -- 11
DenyCommandText, ItemWString -- 12
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp345 28 "%0%!FUNC!: Button clicked=%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION
{
nButton, ItemLong -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp349 29 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp360 30 "%0%!FUNC!: ----> (Content: %10!s!, AllowCommandText=%11!s!, DenyCommandText=%12!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Content, ItemWString -- 10
AllowCommandText, ItemWString -- 11
DenyCommandText, ItemWString -- 12
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp370 31 "%0Displaying task dialog since calling app is a desktop application" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp379 32 "%0Displaying message dialog since calling app is a modern application" //   LEVEL=TRACE_LEVEL_INFORMATION
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp388 33 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp460 34 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp49 10 "%0%!FUNC!: <---- %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp60 11 "%0%!FUNC!: ----> (Content: %10!s!, AllowCommandText=%11!s!, DenyCommandText=%12!s!)" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Content, ItemWString -- 10
AllowCommandText, ItemWString -- 11
DenyCommandText, ItemWString -- 12
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp70 12 "%0%!FUNC!: Obtaining IMessageDialogFactory activation factory" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp79 13 "%0%!FUNC!: Creating IMessageDialog instance" //   LEVEL=TRACE_LEVEL_VERBOSE
{
}

f530daad-ce16-3103-f68b-31fb2e136599 provagent // SRC=provdialog.cpp MJ= MN=
#typev provdialog_cpp91 14 "%0%!FUNC!: Setting message dialog content to %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
Content, ItemWString -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp113 20 "%0%!FUNC!: Returning %10!s! (carrierId="%11!s!")" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hr, ItemHRESULT -- 10
carrierId.c_str(), ItemWString -- 11
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp127 21 "%0%!FUNC!: CoCreateInstance(CLSID_MbaeManagerInternal) returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp138 22 "%0%!FUNC!: SysAllocString failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp146 23 "%0%!FUNC!: IMbaeManagerInternal::GetMBaeForNetworkAccountId returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp153 24 "%0%!FUNC!: IMbaeInternal::GetServiceProviderGuid returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp160 25 "%0%!FUNC!: IMbnSubscriberInformation::get_SubscriberID returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp166 26 "%0%!FUNC!: CLSIDFromString returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp169 27 "%0%!FUNC!: Returning %10!s! (Interface=%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hr, ItemHRESULT -- 10
&InterfaceGuid, ItemGuid -- 11
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp21 10 "%0%!FUNC!: CoCreateInstance(CLSID_MbnInterfaceManager) returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp30 11 "%0%!FUNC!: IMbnInterfaceManager::GetInterface returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp37 12 "%0%!FUNC!: CoCreateInstance(CLSID_MbaeManagerInternal) returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp44 13 "%0%!FUNC!: IMbaeManagerInternal::GetMBaeForMbnInterface returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp52 14 "%0%!FUNC!: IMbaeInternal::GetServiceProviderIconPath returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp59 15 "%0%!FUNC!: Returning %10!s! (iconPath="%11!s!")" //   LEVEL=TRACE_LEVEL_INFORMATION
{
hr, ItemHRESULT -- 10
iconPath.c_str(), ItemWString -- 11
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp73 16 "%0%!FUNC!: CoCreateInstance(CLSID_MbaeManagerInternal) returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp84 17 "%0%!FUNC!: SysAllocString failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp92 18 "%0%!FUNC!: IMbaeManagerInternal::GetMBaeForNetworkAccountId returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

f6fff72f-eed0-374f-c496-cc5651c62279 common // SRC=mbae.cpp MJ= MN=
#typev mbae_cpp99 19 "%0%!FUNC!: IMbaeInternal::GetServiceProviderGuid returned %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
hr, ItemHRESULT -- 10
}

ff693f66-c8eb-330c-06a5-402dd1db22a0 provcore // SRC=trust.cpp MJ= MN=
#typev trust_cpp51 10 "%0%!FUNC!: Unable to allocate sid with subauthority %10!d!: %11!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
SECURITY_LOCAL_SERVICE_RID, ItemLong -- 10
GetLastError(), ItemLong -- 11
}

ff693f66-c8eb-330c-06a5-402dd1db22a0 provcore // SRC=trust.cpp MJ= MN=
#typev trust_cpp59 11 "%0%!FUNC!: Unable to check token membership: %10!08x!" //   LEVEL=TRACE_LEVEL_ERROR
{
GetLastError(), ItemLong -- 10
}

ff693f66-c8eb-330c-06a5-402dd1db22a0 provcore // SRC=trust.cpp MJ= MN=
#typev trust_cpp62 12 "%0%!FUNC!: Local Service? %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE
{
!!isMember, ItemListLong(false,true) -- 10
}

